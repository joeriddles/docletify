Loading source files for package jdk.internal.org.objectweb.asm.commons...
Loading source files for package jdk.internal.org.objectweb.asm.signature...
Loading source files for package jdk.internal.org.objectweb.asm.tree...
Loading source files for package jdk.internal.org.objectweb.asm.tree.analysis...
Loading source files for package jdk.internal.org.objectweb.asm.util...
Loading source files for package jdk.internal.org.xml.sax...
Loading source files for package jdk.internal.org.xml.sax.helpers...
Loading source files for package jdk.internal.util.xml...
Loading source files for package jdk.internal.util.xml.impl...
Loading source files for package jdk.net...
Loading source files for package jdk.internal.org.objectweb.asm...
Constructing Javadoc information...
{"parameters":null,"name":"TryCatchBlockSorter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"MethodVisitor:mv,int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"TryCatchBlockSorter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,MethodVisitor:mv,int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"TryCatchBlockSorter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"}],"fields":[],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link MethodVisitor} adapter to sort the exception handlers. The handlers\n are sorted in a method innermost-to-outermost. This allows the programmer to\n add handlers without worrying about ordering them correctly with respect to\n existing, in-code handlers.\n\n Behavior is only defined for properly-nested handlers. If any \"try\" blocks\n overlap (something that isn't possible in Java code) then this may not do\n what you want. In fact, this adapter just sorts by the length of the \"try\"\n block, taking advantage of the fact that a given try block must be larger\n than any block it contains).\n\n @author Adrian Sampson\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TableSwitchGenerator","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"int:key,Label:end","name":"generateCase","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the code for a switch case.\n\n @param key\n            the switch case key.\n @param end\n            a label that corresponds to the end of the switch statement.\n","return_type":"void"},{"parameters":null,"name":"generateDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the code for the default switch case.\n","return_type":"void"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A code generator for switch statements.\n\n @author Juozas Baliuka\n @author Chris Nokleberg\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"StaticInitMerger","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:prefix,ClassVisitor:cv","name":"StaticInitMerger","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,String:prefix,ClassVisitor:cv","name":"StaticInitMerger","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"MethodVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"name","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"clinit","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"prefix","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"counter","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link ClassVisitor} that merges clinit methods into a single one.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SimpleRemapper","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"java.util.Map:mapping","name":"SimpleRemapper","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"String:oldName,String:newName","name":"SimpleRemapper","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"String:owner,String:name,String:desc","name":"mapMethodName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":"String:owner,String:name,String:desc","name":"mapFieldName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":"String:key","name":"map","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"}],"fields":[{"parameters":null,"name":"mapping","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link Remapper} using a {@link Map} to define its mapping.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SerialVersionUIDAdder","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"ClassVisitor:cv","name":"SerialVersionUIDAdder","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link SerialVersionUIDAdder}. <i>Subclasses must not use\n this constructor</i>. Instead, they must use the\n {@link #SerialVersionUIDAdder(int, ClassVisitor)} version.\n\n @param cv\n            a {@link ClassVisitor} to which this visitor will delegate\n            calls.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,ClassVisitor:cv","name":"SerialVersionUIDAdder","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link SerialVersionUIDAdder}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param cv\n            a {@link ClassVisitor} to which this visitor will delegate\n            calls.\n","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"MethodVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"FieldVisitor"},{"parameters":"String:aname,String:outerName,String:innerName,int:attr_access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Handle a bizarre special case. Nested classes (static classes declared\n inside another class) that are protected have their access bit set to\n public in their class files to deal with some odd reflection situation.\n Our SVUID computation must do as the JVM does and ignore access bits in\n the class file in favor of the access bits InnerClass attribute.\n","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"hasSVUID","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns true if the class already has a SVUID field. The result of this\n method is only valid when visitEnd is or has been called.\n\n @return true if the class already has a SVUID field.\n","return_type":"boolean"},{"parameters":"long:svuid","name":"addSVUID","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"computeSVUID","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Computes and returns the value of SVUID.\n\n @return Returns the serial version UID\n @throws IOException\n             if an I/O error occurs\n","return_type":"long"},{"parameters":"byte[]:value","name":"computeSHAdigest","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the SHA-1 message digest of the given value.\n\n @param value\n            the value whose SHA message digest must be computed.\n @return the SHA-1 message digest of the given value.\n","return_type":"byte"},{"parameters":"java.util.Collection:itemCollection,DataOutput:dos,boolean:dotted","name":"writeItems","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Sorts the items in the collection and writes it to the data output stream\n\n @param itemCollection\n            collection of items\n @param dos\n            a <code>DataOutputStream</code> value\n @param dotted\n            a <code>boolean</code> value\n @exception IOException\n                if an error occurs\n","return_type":"void"}],"fields":[{"parameters":null,"name":"computeSVUID","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Flag that indicates if we need to compute SVUID.\n","return_type":null},{"parameters":null,"name":"hasSVUID","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Set to true if the class already has SVUID.\n","return_type":null},{"parameters":null,"name":"access","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Classes access flags.\n","return_type":null},{"parameters":null,"name":"name","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Internal name of the class\n","return_type":null},{"parameters":null,"name":"interfaces","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Interfaces implemented by the class.\n","return_type":null},{"parameters":null,"name":"svuidFields","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Collection of fields. (except private static and private transient\n fields)\n","return_type":null},{"parameters":null,"name":"hasStaticInitializer","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Set to true if the class has static initializer.\n","return_type":null},{"parameters":null,"name":"svuidConstructors","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Collection of non-private constructors.\n","return_type":null},{"parameters":null,"name":"svuidMethods","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Collection of non-private methods.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link ClassVisitor} that adds a serial version unique identifier to a\n class if missing. Here is typical usage of this class:\n\n <pre>\n   ClassWriter cw = new ClassWriter(...);\n   ClassVisitor sv = new SerialVersionUIDAdder(cw);\n   ClassVisitor ca = new MyClassAdapter(sv);\n   new ClassReader(orginalClass).accept(ca, false);\n </pre>\n\n The SVUID algorithm can be found <a href=\n \"http://java.sun.com/j2se/1.4.2/docs/guide/serialization/spec/class.html\"\n >http://java.sun.com/j2se/1.4.2/docs/guide/serialization/spec/class.html</a>:\n\n <pre>\n The serialVersionUID is computed using the signature of a stream of bytes\n that reflect the class definition. The National Institute of Standards and\n Technology (NIST) Secure Hash Algorithm (SHA-1) is used to compute a\n signature for the stream. The first two 32-bit quantities are used to form a\n 64-bit hash. A java.lang.DataOutputStream is used to convert primitive data\n types to a sequence of bytes. The values input to the stream are defined by\n the Java Virtual Machine (VM) specification for classes.\n\n The sequence of items in the stream is as follows:\n\n 1. The class name written using UTF encoding.\n 2. The class modifiers written as a 32-bit integer.\n 3. The name of each interface sorted by name written using UTF encoding.\n 4. For each field of the class sorted by field name (except private static\n and private transient fields):\n 1. The name of the field in UTF encoding.\n 2. The modifiers of the field written as a 32-bit integer.\n 3. The descriptor of the field in UTF encoding\n 5. If a class initializer exists, write out the following:\n 1. The name of the method, &lt;clinit&gt;, in UTF encoding.\n 2. The modifier of the method, java.lang.reflect.Modifier.STATIC,\n written as a 32-bit integer.\n 3. The descriptor of the method, ()V, in UTF encoding.\n 6. For each non-private constructor sorted by method name and signature:\n 1. The name of the method, &lt;init&gt;, in UTF encoding.\n 2. The modifiers of the method written as a 32-bit integer.\n 3. The descriptor of the method in UTF encoding.\n 7. For each non-private method sorted by method name and signature:\n 1. The name of the method in UTF encoding.\n 2. The modifiers of the method written as a 32-bit integer.\n 3. The descriptor of the method in UTF encoding.\n 8. The SHA-1 algorithm is executed on the stream of bytes produced by\n DataOutputStream and produces five 32-bit values sha[0..4].\n\n 9. The hash value is assembled from the first and second 32-bit values of\n the SHA-1 message digest. If the result of the message digest, the five\n 32-bit words H0 H1 H2 H3 H4, is in an array of five int values named\n sha, the hash value would be computed as follows:\n\n long hash = ((sha[0] &gt;&gt;&gt; 24) &amp; 0xFF) |\n ((sha[0] &gt;&gt;&gt; 16) &amp; 0xFF) &lt;&lt; 8 |\n ((sha[0] &gt;&gt;&gt; 8) &amp; 0xFF) &lt;&lt; 16 |\n ((sha[0] &gt;&gt;&gt; 0) &amp; 0xFF) &lt;&lt; 24 |\n ((sha[1] &gt;&gt;&gt; 24) &amp; 0xFF) &lt;&lt; 32 |\n ((sha[1] &gt;&gt;&gt; 16) &amp; 0xFF) &lt;&lt; 40 |\n ((sha[1] &gt;&gt;&gt; 8) &amp; 0xFF) &lt;&lt; 48 |\n ((sha[1] &gt;&gt;&gt; 0) &amp; 0xFF) &lt;&lt; 56;\n </pre>\n\n @author Rajendra Inamdar, Vishal Vishnoi\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SerialVersionUIDAdder.Item","modifier":"private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name,int:access,String:desc","name":"Item","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"SerialVersionUIDAdder.Item:other","name":"compareTo","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"int"},{"parameters":"Object:o","name":"equals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"boolean"},{"parameters":null,"name":"hashCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"int"}],"fields":[{"parameters":null,"name":"name","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"access","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"desc","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"RemappingSignatureAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"SignatureVisitor:v,Remapper:remapper","name":"RemappingSignatureAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,SignatureVisitor:v,Remapper:remapper","name":"RemappingSignatureAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"String:name","name":"visitClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name","name":"visitInnerClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name","name":"visitFormalTypeParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name","name":"visitTypeVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"visitArrayType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":"char:descriptor","name":"visitBaseType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"visitClassBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitExceptionType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterface","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterfaceBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitParameterType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitSuperclass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"char:wildcard","name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"v","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"remapper","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"className","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link SignatureVisitor} adapter for type mapping.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"RemappingMethodAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:access,String:desc,MethodVisitor:mv,Remapper:remapper","name":"RemappingMethodAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,int:access,String:desc,MethodVisitor:mv,Remapper:remapper","name":"RemappingMethodAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:n,java.lang.Object[]:entries","name":"remapEntries","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Object"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"}],"fields":[{"parameters":null,"name":"remapper","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link LocalVariablesSorter} for type mapping.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"RemappingFieldAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"FieldVisitor:fv,Remapper:remapper","name":"RemappingFieldAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,FieldVisitor:fv,Remapper:remapper","name":"RemappingFieldAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"}],"fields":[{"parameters":null,"name":"remapper","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link FieldVisitor} adapter for type remapping.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"RemappingClassAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"ClassVisitor:cv,Remapper:remapper","name":"RemappingClassAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,ClassVisitor:cv,Remapper:remapper","name":"RemappingClassAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"FieldVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"MethodVisitor"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"FieldVisitor:fv","name":"createRemappingFieldAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"FieldVisitor"},{"parameters":"int:access,String:newDesc,MethodVisitor:mv","name":"createRemappingMethodAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"MethodVisitor"},{"parameters":"AnnotationVisitor:av","name":"createRemappingAnnotationAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"}],"fields":[{"parameters":null,"name":"remapper","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"className","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link ClassVisitor} for type remapping.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"RemappingAnnotationAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"AnnotationVisitor:av,Remapper:remapper","name":"RemappingAnnotationAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,AnnotationVisitor:av,Remapper:remapper","name":"RemappingAnnotationAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"}],"fields":[{"parameters":null,"name":"remapper","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" An {@link AnnotationVisitor} adapter for type remapping.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Remapper","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Remapper","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"String:desc","name":"mapDesc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":"Type:t","name":"mapType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Type"},{"parameters":"String:type","name":"mapType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":"java.lang.String[]:types","name":"mapTypes","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":"String:desc","name":"mapMethodDesc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":"Object:value","name":"mapValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Object"},{"parameters":"String:signature,boolean:typeSignature","name":"mapSignature","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"\n @param typeSignature\n            true if signature is a FieldTypeSignature, such as the\n            signature parameter of the ClassVisitor.visitField or\n            MethodVisitor.visitLocalVariable methods\n","return_type":"String"},{"parameters":"SignatureVisitor:v","name":"createRemappingSignatureAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"SignatureVisitor"},{"parameters":"String:owner,String:name,String:desc","name":"mapMethodName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Map method name to the new name. Subclasses can override.\n\n @param owner\n            owner of the method.\n @param name\n            name of the method.\n @param desc\n            descriptor of the method.\n @return new name of the method\n","return_type":"String"},{"parameters":"String:name,String:desc","name":"mapInvokeDynamicMethodName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Map invokedynamic method name to the new name. Subclasses can override.\n\n @param name\n            name of the invokedynamic.\n @param desc\n            descriptor of the invokedynamic.\n @return new invokdynamic name.\n","return_type":"String"},{"parameters":"String:owner,String:name,String:desc","name":"mapFieldName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Map field name to the new name. Subclasses can override.\n\n @param owner\n            owner of the field.\n @param name\n            name of the field\n @param desc\n            descriptor of the field\n @return new name of the field.\n","return_type":"String"},{"parameters":"String:typeName","name":"map","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Map type name to the new name. Subclasses can override.\n","return_type":"String"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A class responsible for remapping types and names. Subclasses can override\n the following methods:\n\n <ul>\n <li>{@link #map(String)} - map type</li>\n <li>{@link #mapFieldName(String, String, String)} - map field name</li>\n <li>{@link #mapMethodName(String, String, String)} - map method name</li>\n </ul>\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Method","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name,String:desc","name":"Method","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link Method}.\n\n @param name\n            the method's name.\n @param desc\n            the method's descriptor.\n","return_type":null},{"parameters":"String:name,Type:returnType,jdk.internal.org.objectweb.asm.Type[]:argumentTypes","name":"Method","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link Method}.\n\n @param name\n            the method's name.\n @param returnType\n            the method's return type.\n @param argumentTypes\n            the method's argument types.\n","return_type":null}],"methods":[{"parameters":"Method:m","name":"getMethod","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link Method}.\n\n @param m\n            a java.lang.reflect method descriptor\n @return a {@link Method} corresponding to the given Java method\n         declaration.\n","return_type":"Method"},{"parameters":"java.lang.reflect.Constructor:c","name":"getMethod","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link Method}.\n\n @param c\n            a java.lang.reflect constructor descriptor\n @return a {@link Method} corresponding to the given Java constructor\n         declaration.\n","return_type":"Method"},{"parameters":"String:method","name":"getMethod","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns a {@link Method} corresponding to the given Java method\n declaration.\n\n @param method\n            a Java method declaration, without argument names, of the form\n            \"returnType name (argumentType1, ... argumentTypeN)\", where\n            the types are in plain Java (e.g. \"int\", \"float\",\n            \"java.util.List\", ...). Classes of the java.lang package can\n            be specified by their unqualified name; all other classes\n            names must be fully qualified.\n @return a {@link Method} corresponding to the given Java method\n         declaration.\n @throws IllegalArgumentException\n             if <code>method</code> could not get parsed.\n","return_type":"Method"},{"parameters":"String:method,boolean:defaultPackage","name":"getMethod","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns a {@link Method} corresponding to the given Java method\n declaration.\n\n @param method\n            a Java method declaration, without argument names, of the form\n            \"returnType name (argumentType1, ... argumentTypeN)\", where\n            the types are in plain Java (e.g. \"int\", \"float\",\n            \"java.util.List\", ...). Classes of the java.lang package may\n            be specified by their unqualified name, depending on the\n            defaultPackage argument; all other classes names must be fully\n            qualified.\n @param defaultPackage\n            true if unqualified class names belong to the default package,\n            or false if they correspond to java.lang classes. For instance\n            \"Object\" means \"Object\" if this option is true, or\n            \"java.lang.Object\" otherwise.\n @return a {@link Method} corresponding to the given Java method\n         declaration.\n @throws IllegalArgumentException\n             if <code>method</code> could not get parsed.\n","return_type":"Method"},{"parameters":"String:type,boolean:defaultPackage","name":"map","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":null,"name":"getName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the name of the method described by this object.\n\n @return the name of the method described by this object.\n","return_type":"String"},{"parameters":null,"name":"getDescriptor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the descriptor of the method described by this object.\n\n @return the descriptor of the method described by this object.\n","return_type":"String"},{"parameters":null,"name":"getReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the return type of the method described by this object.\n\n @return the return type of the method described by this object.\n","return_type":"Type"},{"parameters":null,"name":"getArgumentTypes","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the argument types of the method described by this object.\n\n @return the argument types of the method described by this object.\n","return_type":"Type"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"String"},{"parameters":"Object:o","name":"equals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"boolean"},{"parameters":null,"name":"hashCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"int"}],"fields":[{"parameters":null,"name":"name","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" The method name.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" The method descriptor.\n","return_type":null},{"parameters":null,"name":"DESCRIPTORS","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Maps primitive Java type names to their descriptors.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A named method descriptor.\n\n @author Juozas Baliuka\n @author Chris Nokleberg\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"LocalVariablesSorter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:access,String:desc,MethodVisitor:mv","name":"LocalVariablesSorter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link LocalVariablesSorter}. <i>Subclasses must not use\n this constructor</i>. Instead, they must use the\n {@link #LocalVariablesSorter(int, int, String, MethodVisitor)} version.\n\n @param access\n            access flags of the adapted method.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param mv\n            the method visitor to which this adapter delegates calls.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,int:access,String:desc,MethodVisitor:mv","name":"LocalVariablesSorter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link LocalVariablesSorter}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param access\n            access flags of the adapted method.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param mv\n            the method visitor to which this adapter delegates calls.\n","return_type":null}],"methods":[{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"newLocal","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new local variable of the given type.\n\n @param type\n            the type of the local variable to be created.\n @return the identifier of the newly created local variable.\n","return_type":"int"},{"parameters":"java.lang.Object[]:newLocals","name":"updateNewLocals","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Notifies subclasses that a new stack map frame is being visited. The\n array argument contains the stack map frame types corresponding to the\n local variables added with {@link #newLocal}. This method can update\n these types in place for the stack map frame being visited. The default\n implementation of this method does nothing, i.e. a local variable added\n with {@link #newLocal} will have the same type in all stack map frames.\n But this behavior is not always the desired one, for instance if a local\n variable is added in the middle of a try/catch block: the frame for the\n exception handler should have a TOP type for this new local.\n\n @param newLocals\n            the stack map frame types corresponding to the local variables\n            added with {@link #newLocal} (and null for the others). The\n            format of this array is the same as in\n            {@link MethodVisitor#visitFrame}, except that long and double\n            types use two slots. The types for the current stack map frame\n            must be updated in place in this array.\n","return_type":"void"},{"parameters":"int:local,Type:type","name":"setLocalType","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Notifies subclasses that a local variable has been added or remapped. The\n default implementation of this method does nothing.\n\n @param local\n            a local variable identifier, as returned by {@link #newLocal\n            newLocal()}.\n @param type\n            the type of the value being stored in the local variable.\n","return_type":"void"},{"parameters":"int:local,Object:type","name":"setFrameLocal","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,Type:type","name":"remap","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"int"},{"parameters":"Type:type","name":"newLocalMapping","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"int"}],"fields":[{"parameters":null,"name":"OBJECT_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"mapping","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Mapping from old to new local variable indexes. A local variable at index\n i of size 1 is remapped to 'mapping[2*i]', while a local variable at\n index i of size 2 is remapped to 'mapping[2*i+1]'.\n","return_type":null},{"parameters":null,"name":"newLocals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Array used to store stack map local variable types after remapping.\n","return_type":null},{"parameters":null,"name":"firstLocal","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Index of the first local variable, after formal parameters.\n","return_type":null},{"parameters":null,"name":"nextLocal","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Index of the next local variable to be created by {@link #newLocal}.\n","return_type":null},{"parameters":null,"name":"changed","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Indicates if at least one local variable has moved due to remapping.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link MethodVisitor} that renumbers local variables in their order of\n appearance. This adapter allows one to easily add new local variables to a\n method. It may be used by inheriting from this class, but the preferred way\n of using it is via delegation: the next visitor in the chain can indeed add\n new locals when needed by calling {@link #newLocal} on this adapter (this\n requires a reference back to this {@link LocalVariablesSorter}).\n\n @author Chris Nokleberg\n @author Eugene Kuleshov\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"JSRInlinerAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"MethodVisitor:mv,int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"JSRInlinerAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new JSRInliner. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #JSRInlinerAdapter(int, MethodVisitor, int, String, String, String, String[])}\n version.\n\n @param mv\n            the <code>MethodVisitor</code> to send the resulting inlined\n            method code to (use <code>null</code> for none).\n @param access\n            the method's access flags (see {@link Opcodes}). This\n            parameter also indicates if the method is synthetic and/or\n            deprecated.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type}).\n @param signature\n            the method's signature. May be <tt>null</tt>.\n @param exceptions\n            the internal names of the method's exception classes (see\n            {@link Type#getInternalName() getInternalName}). May be\n            <tt>null</tt>.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,MethodVisitor:mv,int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"JSRInlinerAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new JSRInliner.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param mv\n            the <code>MethodVisitor</code> to send the resulting inlined\n            method code to (use <code>null</code> for none).\n @param access\n            the method's access flags (see {@link Opcodes}). This\n            parameter also indicates if the method is synthetic and/or\n            deprecated.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type}).\n @param signature\n            the method's signature. May be <tt>null</tt>.\n @param exceptions\n            the internal names of the method's exception classes (see\n            {@link Type#getInternalName() getInternalName}). May be\n            <tt>null</tt>.\n","return_type":null}],"methods":[{"parameters":"int:opcode,Label:lbl","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Detects a JSR instruction and sets a flag to indicate we will need to do\n inlining.\n","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" If any JSRs were seen, triggers the inlining process. Otherwise, forwards\n the byte codes untouched.\n","return_type":"void"},{"parameters":null,"name":"markSubroutines","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Walks the method and determines which internal subroutine(s), if any,\n each instruction is a method of.\n","return_type":"void"},{"parameters":"BitSet:sub,int:index,BitSet:anyvisited","name":"markSubroutineWalk","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Performs a depth first search walking the normal byte code path starting\n at <code>index</code>, and adding each instruction encountered into the\n subroutine <code>sub</code>. After this walk is complete, iterates over\n the exception handlers to ensure that we also include those byte codes\n which are reachable through an exception that may be thrown during the\n execution of the subroutine. Invoked from <code>markSubroutines()</code>.\n\n @param sub\n            the subroutine whose instructions must be computed.\n @param index\n            an instruction of this subroutine.\n @param anyvisited\n            indexes of the already visited instructions, i.e. marked as\n            part of this subroutine or any previously computed subroutine.\n","return_type":"void"},{"parameters":"BitSet:sub,int:index,BitSet:anyvisited","name":"markSubroutineWalkDFS","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Performs a simple DFS of the instructions, assigning each to the\n subroutine <code>sub</code>. Starts from <code>index</code>. Invoked only\n by <code>markSubroutineWalk()</code>.\n\n @param sub\n            the subroutine whose instructions must be computed.\n @param index\n            an instruction of this subroutine.\n @param anyvisited\n            indexes of the already visited instructions, i.e. marked as\n            part of this subroutine or any previously computed subroutine.\n","return_type":"void"},{"parameters":null,"name":"emitCode","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates the new instructions, inlining each instantiation of each\n subroutine until the code is fully elaborated.\n","return_type":"void"},{"parameters":"JSRInlinerAdapter.Instantiation:instant,java.util.List:worklist,InsnList:newInstructions,java.util.List:newTryCatchBlocks,java.util.List:newLocalVariables","name":"emitSubroutine","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Emits one instantiation of one subroutine, specified by\n <code>instant</code>. May add new instantiations that are invoked by this\n one to the <code>worklist</code> parameter, and new try/catch blocks to\n <code>newTryCatchBlocks</code>.\n\n @param instant\n            the instantiation that must be performed.\n @param worklist\n            list of the instantiations that remain to be done.\n @param newInstructions\n            the instruction list to which the instantiated code must be\n            appended.\n @param newTryCatchBlocks\n            the exception handler list to which the instantiated handlers\n            must be appended.\n","return_type":"void"},{"parameters":"String:str","name":"log","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"LOGGING","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"subroutineHeads","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" For each label that is jumped to by a JSR, we create a BitSet instance.\n","return_type":null},{"parameters":null,"name":"mainSubroutine","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" This subroutine instance denotes the line of execution that is not\n contained within any subroutine; i.e., the \"subroutine\" that is executing\n when a method first begins.\n","return_type":null},{"parameters":null,"name":"dualCitizens","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" This BitSet contains the index of every instruction that belongs to more\n than one subroutine. This should not happen often.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link jdk.internal.org.objectweb.asm.MethodVisitor} that removes JSR instructions and\n inlines the referenced subroutines.\n\n <b>Explanation of how it works</b> TODO\n\n @author Niko Matsakis\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"JSRInlinerAdapter.Instantiation","modifier":"private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"JSRInlinerAdapter.Instantiation:prev,BitSet:sub","name":"Instantiation","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":"int:i","name":"findOwner","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the \"owner\" of a particular instruction relative to this\n instantiation: the owner referes to the Instantiation which will emit\n the version of this instruction that we will execute.\n\n Typically, the return value is either <code>this</code> or\n <code>null</code>. <code>this</code> indicates that this\n instantiation will generate the version of this instruction that we\n will execute, and <code>null</code> indicates that this instantiation\n never executes the given instruction.\n\n Sometimes, however, an instruction can belong to multiple\n subroutines; this is called a \"dual citizen\" instruction (though it\n may belong to more than 2 subroutines), and occurs when multiple\n subroutines branch to common points of control. In this case, the\n owner is the subroutine that appears lowest on the stack, and which\n also owns the instruction in question.\n\n @param i\n            the index of the instruction in the original code\n @return the \"owner\" of a particular instruction relative to this\n         instantiation.\n","return_type":"JSRInlinerAdapter.Instantiation"},{"parameters":"LabelNode:l","name":"gotoLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Looks up the label <code>l</code> in the <code>gotoTable</code>, thus\n translating it from a Label in the original code, to a Label in the\n inlined code that is appropriate for use by an instruction that\n branched to the original label.\n\n @param l\n            The label we will be translating\n @return a label for use by a branch instruction in the inlined code\n @see #rangeLabel\n","return_type":"LabelNode"},{"parameters":"LabelNode:l","name":"rangeLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Looks up the label <code>l</code> in the <code>rangeTable</code>,\n thus translating it from a Label in the original code, to a Label in\n the inlined code that is appropriate for use by an try/catch or\n variable use annotation.\n\n @param l\n            The label we will be translating\n @return a label for use by a try/catch or variable annotation in the\n         original code\n @see #rangeTable\n","return_type":"LabelNode"},{"parameters":null,"name":"entrySet","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Set"},{"parameters":"Object:o","name":"get","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"LabelNode"}],"fields":[{"parameters":null,"name":"previous","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Previous instantiations; the stack must be statically predictable to\n be inlinable.\n","return_type":null},{"parameters":null,"name":"subroutine","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" The subroutine this is an instantiation of.\n","return_type":null},{"parameters":null,"name":"rangeTable","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" This table maps Labels from the original source to Labels pointing at\n code specific to this instantiation, for use in remapping try/catch\n blocks,as well as gotos.\n\n Note that in the presence of dual citizens instructions, that is,\n instructions which belong to more than one subroutine due to the\n merging of control flow without a RET instruction, we will map the\n target label of a GOTO to the label used by the instantiation lowest\n on the stack. This avoids code duplication during inlining in most\n cases.\n\n @see #findOwner(int)\n","return_type":null},{"parameters":null,"name":"returnLabel","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" All returns for this instantiation will be mapped to this label\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A class that represents an instantiation of a subroutine. Each\n instantiation has an associate \"stack\" --- which is a listing of those\n instantiations that were active when this particular instance of this\n subroutine was invoked. Each instantiation also has a map from the\n original labels of the program to the labels appropriate for this\n instantiation, and finally a label to return to.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"InstructionAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"MethodVisitor:mv","name":"InstructionAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link InstructionAdapter}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #InstructionAdapter(int, MethodVisitor)} version.\n\n @param mv\n            the method visitor to which this adapter delegates calls.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,MethodVisitor:mv","name":"InstructionAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link InstructionAdapter}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param mv\n            the method visitor to which this adapter delegates calls.\n","return_type":null}],"methods":[{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"nop","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Object:cst","name":"aconst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:cst","name":"iconst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"long:cst","name":"lconst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"float:cst","name":"fconst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"double:cst","name":"dconst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"tconst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Handle:handle","name":"hconst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,Type:type","name":"load","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"aload","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,Type:type","name":"store","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"astore","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"pop","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"pop2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"dup","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"dup2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"dupX1","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"dupX2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"dup2X1","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"dup2X2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"swap","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"add","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"sub","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"mul","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"div","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"rem","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"neg","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"shl","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"shr","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"ushr","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"and","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"or","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"xor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"iinc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:from,Type:to","name":"cast","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"lcmp","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"cmpl","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"cmpg","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifeq","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifne","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"iflt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifgt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifle","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ificmpeq","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ificmpne","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ificmplt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ificmpge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ificmpgt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ificmple","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifacmpeq","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifacmpne","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"goTo","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"jsr","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var","name":"ret","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"tableswitch","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"lookupswitch","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:t","name":"areturn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"getstatic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"putstatic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"getfield","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"putfield","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"invokevirtual","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc,boolean:itf","name":"invokevirtual","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"invokespecial","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc,boolean:itf","name":"invokespecial","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"invokestatic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc,boolean:itf","name":"invokestatic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"invokeinterface","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"invokedynamic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"anew","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"newarray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"arraylength","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"athrow","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"checkcast","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Type:type","name":"instanceOf","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"monitorenter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"monitorexit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"multianewarray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifnull","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"ifnonnull","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"mark","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"OBJECT_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link MethodVisitor} providing a more detailed API to generate and\n transform instructions.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"GeneratorAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"MethodVisitor:mv,int:access,String:name,String:desc","name":"GeneratorAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link GeneratorAdapter}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #GeneratorAdapter(int, MethodVisitor, int, String, String)}\n version.\n\n @param mv\n            the method visitor to which this adapter delegates calls.\n @param access\n            the method's access flags (see {@link Opcodes}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,MethodVisitor:mv,int:access,String:name,String:desc","name":"GeneratorAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link GeneratorAdapter}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param mv\n            the method visitor to which this adapter delegates calls.\n @param access\n            the method's access flags (see {@link Opcodes}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n","return_type":null},{"parameters":"int:access,Method:method,MethodVisitor:mv","name":"GeneratorAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link GeneratorAdapter}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #GeneratorAdapter(int, MethodVisitor, int, String, String)}\n version.\n\n @param access\n            access flags of the adapted method.\n @param method\n            the adapted method.\n @param mv\n            the method visitor to which this adapter delegates calls.\n","return_type":null},{"parameters":"int:access,Method:method,String:signature,jdk.internal.org.objectweb.asm.Type[]:exceptions,ClassVisitor:cv","name":"GeneratorAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link GeneratorAdapter}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #GeneratorAdapter(int, MethodVisitor, int, String, String)}\n version.\n\n @param access\n            access flags of the adapted method.\n @param method\n            the adapted method.\n @param signature\n            the signature of the adapted method (may be <tt>null</tt>).\n @param exceptions\n            the exceptions thrown by the adapted method (may be\n            <tt>null</tt>).\n @param cv\n            the class visitor to which this adapter delegates calls.\n","return_type":null}],"methods":[{"parameters":"jdk.internal.org.objectweb.asm.Type[]:types","name":"getInternalNames","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the internal names of the given types.\n\n @param types\n            a set of types.\n @return the internal names of the given types.\n","return_type":"String"},{"parameters":"boolean:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the given value on the stack.\n\n @param value\n            the value to be pushed on the stack.\n","return_type":"void"},{"parameters":"int:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the given value on the stack.\n\n @param value\n            the value to be pushed on the stack.\n","return_type":"void"},{"parameters":"long:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the given value on the stack.\n\n @param value\n            the value to be pushed on the stack.\n","return_type":"void"},{"parameters":"float:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the given value on the stack.\n\n @param value\n            the value to be pushed on the stack.\n","return_type":"void"},{"parameters":"double:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the given value on the stack.\n\n @param value\n            the value to be pushed on the stack.\n","return_type":"void"},{"parameters":"String:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the given value on the stack.\n\n @param value\n            the value to be pushed on the stack. May be <tt>null</tt>.\n","return_type":"void"},{"parameters":"Type:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the given value on the stack.\n\n @param value\n            the value to be pushed on the stack.\n","return_type":"void"},{"parameters":"Handle:handle","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push a handle on the stack.\n\n @param handle\n            the handle to be pushed on the stack.\n","return_type":"void"},{"parameters":"int:arg","name":"getArgIndex","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the index of the given method argument in the frame's local\n variables array.\n\n @param arg\n            the index of a method argument.\n @return the index of the given method argument in the frame's local\n         variables array.\n","return_type":"int"},{"parameters":"Type:type,int:index","name":"loadInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push a local variable on the stack.\n\n @param type\n            the type of the local variable to be loaded.\n @param index\n            an index in the frame's local variables array.\n","return_type":"void"},{"parameters":"Type:type,int:index","name":"storeInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to store the top stack value in a local\n variable.\n\n @param type\n            the type of the local variable to be stored.\n @param index\n            an index in the frame's local variables array.\n","return_type":"void"},{"parameters":null,"name":"loadThis","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to load 'this' on the stack.\n","return_type":"void"},{"parameters":"int:arg","name":"loadArg","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to load the given method argument on the stack.\n\n @param arg\n            the index of a method argument.\n","return_type":"void"},{"parameters":"int:arg,int:count","name":"loadArgs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to load the given method arguments on the\n stack.\n\n @param arg\n            the index of the first method argument to be loaded.\n @param count\n            the number of method arguments to be loaded.\n","return_type":"void"},{"parameters":null,"name":"loadArgs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to load all the method arguments on the stack.\n","return_type":"void"},{"parameters":null,"name":"loadArgArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to load all the method arguments on the stack,\n as a single object array.\n","return_type":"void"},{"parameters":"int:arg","name":"storeArg","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to store the top stack value in the given\n method argument.\n\n @param arg\n            the index of a method argument.\n","return_type":"void"},{"parameters":"int:local","name":"getLocalType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Returns the type of the given local variable.\n\n @param local\n            a local variable identifier, as returned by\n            {@link LocalVariablesSorter#newLocal(Type) newLocal()}.\n @return the type of the given local variable.\n","return_type":"Type"},{"parameters":"int:local,Type:type","name":"setLocalType","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:local","name":"loadLocal","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to load the given local variable on the stack.\n\n @param local\n            a local variable identifier, as returned by\n            {@link LocalVariablesSorter#newLocal(Type) newLocal()}.\n","return_type":"void"},{"parameters":"int:local,Type:type","name":"loadLocal","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to load the given local variable on the stack.\n\n @param local\n            a local variable identifier, as returned by\n            {@link LocalVariablesSorter#newLocal(Type) newLocal()}.\n @param type\n            the type of this local variable.\n","return_type":"void"},{"parameters":"int:local","name":"storeLocal","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to store the top stack value in the given local\n variable.\n\n @param local\n            a local variable identifier, as returned by\n            {@link LocalVariablesSorter#newLocal(Type) newLocal()}.\n","return_type":"void"},{"parameters":"int:local,Type:type","name":"storeLocal","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to store the top stack value in the given local\n variable.\n\n @param local\n            a local variable identifier, as returned by\n            {@link LocalVariablesSorter#newLocal(Type) newLocal()}.\n @param type\n            the type of this local variable.\n","return_type":"void"},{"parameters":"Type:type","name":"arrayLoad","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to load an element from an array.\n\n @param type\n            the type of the array element to be loaded.\n","return_type":"void"},{"parameters":"Type:type","name":"arrayStore","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to store an element in an array.\n\n @param type\n            the type of the array element to be stored.\n","return_type":"void"},{"parameters":null,"name":"pop","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a POP instruction.\n","return_type":"void"},{"parameters":null,"name":"pop2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a POP2 instruction.\n","return_type":"void"},{"parameters":null,"name":"dup","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a DUP instruction.\n","return_type":"void"},{"parameters":null,"name":"dup2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a DUP2 instruction.\n","return_type":"void"},{"parameters":null,"name":"dupX1","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a DUP_X1 instruction.\n","return_type":"void"},{"parameters":null,"name":"dupX2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a DUP_X2 instruction.\n","return_type":"void"},{"parameters":null,"name":"dup2X1","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a DUP2_X1 instruction.\n","return_type":"void"},{"parameters":null,"name":"dup2X2","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a DUP2_X2 instruction.\n","return_type":"void"},{"parameters":null,"name":"swap","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a SWAP instruction.\n","return_type":"void"},{"parameters":"Type:prev,Type:type","name":"swap","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to swap the top two stack values.\n\n @param prev\n            type of the top - 1 stack value.\n @param type\n            type of the top stack value.\n","return_type":"void"},{"parameters":"int:op,Type:type","name":"math","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to do the specified mathematical or logical\n operation.\n\n @param op\n            a mathematical or logical operation. Must be one of ADD, SUB,\n            MUL, DIV, REM, NEG, SHL, SHR, USHR, AND, OR, XOR.\n @param type\n            the type of the operand(s) for this operation.\n","return_type":"void"},{"parameters":null,"name":"not","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to compute the bitwise negation of the top\n stack value.\n","return_type":"void"},{"parameters":"int:local,int:amount","name":"iinc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to increment the given local variable.\n\n @param local\n            the local variable to be incremented.\n @param amount\n            the amount by which the local variable must be incremented.\n","return_type":"void"},{"parameters":"Type:from,Type:to","name":"cast","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to cast a numerical value from one type to\n another.\n\n @param from\n            the type of the top stack value\n @param to\n            the type into which this value must be cast.\n","return_type":"void"},{"parameters":"Type:type","name":"getBoxedType","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Type"},{"parameters":"Type:type","name":"box","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to box the top stack value. This value is\n replaced by its boxed equivalent on top of the stack.\n\n @param type\n            the type of the top stack value.\n","return_type":"void"},{"parameters":"Type:type","name":"valueOf","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to box the top stack value using Java 5's\n valueOf() method. This value is replaced by its boxed equivalent on top\n of the stack.\n\n @param type\n            the type of the top stack value.\n","return_type":"void"},{"parameters":"Type:type","name":"unbox","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to unbox the top stack value. This value is\n replaced by its unboxed equivalent on top of the stack.\n\n @param type\n            the type of the top stack value.\n","return_type":"void"},{"parameters":null,"name":"newLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link Label}.\n\n @return a new {@link Label}.\n","return_type":"Label"},{"parameters":"Label:label","name":"mark","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Marks the current code position with the given label.\n\n @param label\n            a label.\n","return_type":"void"},{"parameters":null,"name":"mark","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Marks the current code position with a new label.\n\n @return the label that was created to mark the current code position.\n","return_type":"Label"},{"parameters":"Type:type,int:mode,Label:label","name":"ifCmp","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to jump to a label based on the comparison of\n the top two stack values.\n\n @param type\n            the type of the top two stack values.\n @param mode\n            how these values must be compared. One of EQ, NE, LT, GE, GT,\n            LE.\n @param label\n            where to jump if the comparison result is <tt>true</tt>.\n","return_type":"void"},{"parameters":"int:mode,Label:label","name":"ifICmp","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to jump to a label based on the comparison of\n the top two integer stack values.\n\n @param mode\n            how these values must be compared. One of EQ, NE, LT, GE, GT,\n            LE.\n @param label\n            where to jump if the comparison result is <tt>true</tt>.\n","return_type":"void"},{"parameters":"int:mode,Label:label","name":"ifZCmp","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to jump to a label based on the comparison of\n the top integer stack value with zero.\n\n @param mode\n            how these values must be compared. One of EQ, NE, LT, GE, GT,\n            LE.\n @param label\n            where to jump if the comparison result is <tt>true</tt>.\n","return_type":"void"},{"parameters":"Label:label","name":"ifNull","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to jump to the given label if the top stack\n value is null.\n\n @param label\n            where to jump if the condition is <tt>true</tt>.\n","return_type":"void"},{"parameters":"Label:label","name":"ifNonNull","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to jump to the given label if the top stack\n value is not null.\n\n @param label\n            where to jump if the condition is <tt>true</tt>.\n","return_type":"void"},{"parameters":"Label:label","name":"goTo","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to jump to the given label.\n\n @param label\n            where to jump if the condition is <tt>true</tt>.\n","return_type":"void"},{"parameters":"int:local","name":"ret","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a RET instruction.\n\n @param local\n            a local variable identifier, as returned by\n            {@link LocalVariablesSorter#newLocal(Type) newLocal()}.\n","return_type":"void"},{"parameters":"int[]:keys,TableSwitchGenerator:generator","name":"tableSwitch","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions for a switch statement.\n\n @param keys\n            the switch case keys.\n @param generator\n            a generator to generate the code for the switch cases.\n","return_type":"void"},{"parameters":"int[]:keys,TableSwitchGenerator:generator,boolean:useTable","name":"tableSwitch","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions for a switch statement.\n\n @param keys\n            the switch case keys.\n @param generator\n            a generator to generate the code for the switch cases.\n @param useTable\n            <tt>true</tt> to use a TABLESWITCH instruction, or\n            <tt>false</tt> to use a LOOKUPSWITCH instruction.\n","return_type":"void"},{"parameters":null,"name":"returnValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to return the top stack value to the caller.\n","return_type":"void"},{"parameters":"int:opcode,Type:ownerType,String:name,Type:fieldType","name":"fieldInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a get field or set field instruction.\n\n @param opcode\n            the instruction's opcode.\n @param ownerType\n            the class in which the field is defined.\n @param name\n            the name of the field.\n @param fieldType\n            the type of the field.\n","return_type":"void"},{"parameters":"Type:owner,String:name,Type:type","name":"getStatic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the value of a static field on the\n stack.\n\n @param owner\n            the class in which the field is defined.\n @param name\n            the name of the field.\n @param type\n            the type of the field.\n","return_type":"void"},{"parameters":"Type:owner,String:name,Type:type","name":"putStatic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to store the top stack value in a static field.\n\n @param owner\n            the class in which the field is defined.\n @param name\n            the name of the field.\n @param type\n            the type of the field.\n","return_type":"void"},{"parameters":"Type:owner,String:name,Type:type","name":"getField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to push the value of a non static field on the\n stack.\n\n @param owner\n            the class in which the field is defined.\n @param name\n            the name of the field.\n @param type\n            the type of the field.\n","return_type":"void"},{"parameters":"Type:owner,String:name,Type:type","name":"putField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to store the top stack value in a non static\n field.\n\n @param owner\n            the class in which the field is defined.\n @param name\n            the name of the field.\n @param type\n            the type of the field.\n","return_type":"void"},{"parameters":"int:opcode,Type:type,Method:method,boolean:itf","name":"invokeInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates an invoke method instruction.\n\n @param opcode\n            the instruction's opcode.\n @param type\n            the class in which the method is defined.\n @param method\n            the method to be invoked.\n","return_type":"void"},{"parameters":"Type:owner,Method:method","name":"invokeVirtual","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to invoke a normal method.\n\n @param owner\n            the class in which the method is defined.\n @param method\n            the method to be invoked.\n","return_type":"void"},{"parameters":"Type:type,Method:method","name":"invokeConstructor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to invoke a constructor.\n\n @param type\n            the class in which the constructor is defined.\n @param method\n            the constructor to be invoked.\n","return_type":"void"},{"parameters":"Type:owner,Method:method","name":"invokeStatic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to invoke a static method.\n\n @param owner\n            the class in which the method is defined.\n @param method\n            the method to be invoked.\n","return_type":"void"},{"parameters":"Type:owner,Method:method","name":"invokeInterface","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to invoke an interface method.\n\n @param owner\n            the class in which the method is defined.\n @param method\n            the method to be invoked.\n","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"invokeDynamic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates an invokedynamic instruction.\n\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param bsm\n            the bootstrap method.\n @param bsmArgs\n            the bootstrap method constant arguments. Each argument must be\n            an {@link Integer}, {@link Float}, {@link Long},\n            {@link Double}, {@link String}, {@link Type} or {@link Handle}\n            value. This method is allowed to modify the content of the\n            array so a caller should expect that this array may change.\n","return_type":"void"},{"parameters":"int:opcode,Type:type","name":"typeInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates a type dependent instruction.\n\n @param opcode\n            the instruction's opcode.\n @param type\n            the instruction's operand.\n","return_type":"void"},{"parameters":"Type:type","name":"newInstance","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to create a new object.\n\n @param type\n            the class of the object to be created.\n","return_type":"void"},{"parameters":"Type:type","name":"newArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to create a new array.\n\n @param type\n            the type of the array elements.\n","return_type":"void"},{"parameters":null,"name":"arrayLength","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to compute the length of an array.\n","return_type":"void"},{"parameters":null,"name":"throwException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to throw an exception.\n","return_type":"void"},{"parameters":"Type:type,String:msg","name":"throwException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instructions to create and throw an exception. The\n exception class must have a constructor with a single String argument.\n\n @param type\n            the class of the exception to be thrown.\n @param msg\n            the detailed message of the exception.\n","return_type":"void"},{"parameters":"Type:type","name":"checkCast","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to check that the top stack value is of the\n given type.\n\n @param type\n            a class or interface type.\n","return_type":"void"},{"parameters":"Type:type","name":"instanceOf","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to test if the top stack value is of the given\n type.\n\n @param type\n            a class or interface type.\n","return_type":"void"},{"parameters":null,"name":"monitorEnter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to get the monitor of the top stack value.\n","return_type":"void"},{"parameters":null,"name":"monitorExit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Generates the instruction to release the monitor of the top stack value.\n","return_type":"void"},{"parameters":null,"name":"endMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Marks the end of the visited method.\n","return_type":"void"},{"parameters":"Label:start,Label:end,Type:exception","name":"catchException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Marks the start of an exception handler.\n\n @param start\n            beginning of the exception handler's scope (inclusive).\n @param end\n            end of the exception handler's scope (exclusive).\n @param exception\n            internal name of the type of exceptions handled by the\n            handler.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"CLDESC","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"BYTE_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"BOOLEAN_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"SHORT_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"CHARACTER_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"INTEGER_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"FLOAT_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"LONG_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"DOUBLE_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"NUMBER_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"OBJECT_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"BOOLEAN_VALUE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"CHAR_VALUE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"INT_VALUE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"FLOAT_VALUE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"LONG_VALUE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"DOUBLE_VALUE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"ADD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"SUB","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"MUL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"DIV","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"REM","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"NEG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"SHL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"SHR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"USHR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"AND","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"OR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"XOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #math math} method.\n","return_type":null},{"parameters":null,"name":"EQ","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #ifCmp ifCmp} method.\n","return_type":null},{"parameters":null,"name":"NE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #ifCmp ifCmp} method.\n","return_type":null},{"parameters":null,"name":"LT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #ifCmp ifCmp} method.\n","return_type":null},{"parameters":null,"name":"GE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #ifCmp ifCmp} method.\n","return_type":null},{"parameters":null,"name":"GT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #ifCmp ifCmp} method.\n","return_type":null},{"parameters":null,"name":"LE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Constant for the {@link #ifCmp ifCmp} method.\n","return_type":null},{"parameters":null,"name":"access","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Access flags of the method visited by this adapter.\n","return_type":null},{"parameters":null,"name":"returnType","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Return type of the method visited by this adapter.\n","return_type":null},{"parameters":null,"name":"argumentTypes","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Argument types of the method visited by this adapter.\n","return_type":null},{"parameters":null,"name":"localTypes","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":" Types of the local variables of the method visited by this adapter.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link jdk.internal.org.objectweb.asm.MethodVisitor} with convenient methods to generate\n code. For example, using this adapter, the class below\n\n <pre>\n public class Example {\n     public static void main(String[] args) {\n         System.out.println(&quot;Hello world!&quot;);\n     }\n }\n </pre>\n\n can be generated as follows:\n\n <pre>\n ClassWriter cw = new ClassWriter(true);\n cw.visit(V1_1, ACC_PUBLIC, &quot;Example&quot;, null, &quot;java/lang/Object&quot;, null);\n\n Method m = Method.getMethod(&quot;void &lt;init&gt; ()&quot;);\n GeneratorAdapter mg = new GeneratorAdapter(ACC_PUBLIC, m, null, null, cw);\n mg.loadThis();\n mg.invokeConstructor(Type.getType(Object.class), m);\n mg.returnValue();\n mg.endMethod();\n\n m = Method.getMethod(&quot;void main (String[])&quot;);\n mg = new GeneratorAdapter(ACC_PUBLIC + ACC_STATIC, m, null, null, cw);\n mg.getStatic(Type.getType(System.class), &quot;out&quot;, Type.getType(PrintStream.class));\n mg.push(&quot;Hello world!&quot;);\n mg.invokeVirtual(Type.getType(PrintStream.class),\n         Method.getMethod(&quot;void println (String)&quot;));\n mg.returnValue();\n mg.endMethod();\n\n cw.visitEnd();\n </pre>\n\n @author Juozas Baliuka\n @author Chris Nokleberg\n @author Eric Bruneton\n @author Prashant Deva\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"CodeSizeEvaluator","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"MethodVisitor:mv","name":"CodeSizeEvaluator","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":"int:api,MethodVisitor:mv","name":"CodeSizeEvaluator","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"methods":[{"parameters":null,"name":"getMinSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"int"},{"parameters":null,"name":"getMaxSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"int"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"minSize","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"maxSize","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link MethodVisitor} that can be used to approximate method size.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"AnalyzerAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:owner,int:access,String:name,String:desc,MethodVisitor:mv","name":"AnalyzerAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link AnalyzerAdapter}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #AnalyzerAdapter(int, String, int, String, String, MethodVisitor)}\n version.\n\n @param owner\n            the owner's class name.\n @param access\n            the method's access flags (see {@link Opcodes}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param mv\n            the method visitor to which this adapter delegates calls. May\n            be <tt>null</tt>.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,String:owner,int:access,String:name,String:desc,MethodVisitor:mv","name":"AnalyzerAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link AnalyzerAdapter}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param owner\n            the owner's class name.\n @param access\n            the method's access flags (see {@link Opcodes}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param mv\n            the method visitor to which this adapter delegates calls. May\n            be <tt>null</tt>.\n","return_type":null}],"methods":[{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:n,java.lang.Object[]:types,java.util.List:result","name":"visitFrameTypes","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:local","name":"get","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Object"},{"parameters":"int:local,Object:type","name":"set","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Object:type","name":"push","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc","name":"pushDesc","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"pop","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Object"},{"parameters":"int:n","name":"pop","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc","name":"pop","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:iarg,String:sarg","name":"execute","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"locals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" <code>List</code> of the local variable slots for current execution\n frame. Primitive types are represented by {@link Opcodes#TOP},\n {@link Opcodes#INTEGER}, {@link Opcodes#FLOAT}, {@link Opcodes#LONG},\n {@link Opcodes#DOUBLE},{@link Opcodes#NULL} or\n {@link Opcodes#UNINITIALIZED_THIS} (long and double are represented by\n two elements, the second one being TOP). Reference types are represented\n by String objects (representing internal names), and uninitialized types\n by Label objects (this label designates the NEW instruction that created\n this uninitialized value). This field is <tt>null</tt> for unreachable\n instructions.\n","return_type":null},{"parameters":null,"name":"stack","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" <code>List</code> of the operand stack slots for current execution frame.\n Primitive types are represented by {@link Opcodes#TOP},\n {@link Opcodes#INTEGER}, {@link Opcodes#FLOAT}, {@link Opcodes#LONG},\n {@link Opcodes#DOUBLE},{@link Opcodes#NULL} or\n {@link Opcodes#UNINITIALIZED_THIS} (long and double are represented by\n two elements, the second one being TOP). Reference types are represented\n by String objects (representing internal names), and uninitialized types\n by Label objects (this label designates the NEW instruction that created\n this uninitialized value). This field is <tt>null</tt> for unreachable\n instructions.\n","return_type":null},{"parameters":null,"name":"labels","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" The labels that designate the next instruction to be visited. May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"uninitializedTypes","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Information about uninitialized types in the current execution frame.\n This map associates internal names to Label objects. Each label\n designates a NEW instruction that created the currently uninitialized\n types, and the associated internal name represents the NEW operand, i.e.\n the final, initialized type value.\n","return_type":null},{"parameters":null,"name":"maxStack","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" The maximum stack size of this method.\n","return_type":null},{"parameters":null,"name":"maxLocals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" The maximum number of local variables of this method.\n","return_type":null},{"parameters":null,"name":"owner","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" The owner's class name.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link MethodVisitor} that keeps track of stack map frame changes between\n {@link #visitFrame(int, int, Object[], int, Object[]) visitFrame} calls. This\n adapter must be used with the\n {@link jdk.internal.org.objectweb.asm.ClassReader#EXPAND_FRAMES} option. Each\n visit<i>X</i> instruction delegates to the next visitor in the chain, if any,\n and then simulates the effect of this instruction on the stack map frame,\n represented by {@link #locals} and {@link #stack}. The next visitor in the\n chain can get the state of the stack map frame <i>before</i> each instruction\n by reading the value of these fields in its visit<i>X</i> methods (this\n requires a reference to the AnalyzerAdapter that is before it in the chain).\n If this adapter is used with a class that does not contain stack map table\n attributes (i.e., pre Java 6 classes) then this adapter may not be able to\n compute the stack map frame for each instruction. In this case no exception\n is thrown but the {@link #locals} and {@link #stack} fields will be null for\n these instructions.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"AdviceAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api,MethodVisitor:mv,int:access,String:name,String:desc","name":"AdviceAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Creates a new {@link AdviceAdapter}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param mv\n            the method visitor to which this adapter delegates calls.\n @param access\n            the method's access flags (see {@link Opcodes}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n","return_type":null}],"methods":[{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"addBranches","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":"Label:label","name":"addBranch","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"popValue","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Object"},{"parameters":null,"name":"peekValue","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"Object"},{"parameters":"Object:o","name":"pushValue","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":"void"},{"parameters":null,"name":"onMethodEnter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Called at the beginning of the method or after super class class call in\n the constructor. <br>\n <br>\n\n <i>Custom code can use or change all the local variables, but should not\n change state of the stack.</i>\n","return_type":"void"},{"parameters":"int:opcode","name":"onMethodExit","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" Called before explicit exit from the method using either return or throw.\n Top element on the stack contains the return value or exception instance.\n For example:\n\n <pre>\n   public void onMethodExit(int opcode) {\n     if(opcode==RETURN) {\n         visitInsn(ACONST_NULL);\n     } else if(opcode==ARETURN || opcode==ATHROW) {\n         dup();\n     } else {\n         if(opcode==LRETURN || opcode==DRETURN) {\n             dup2();\n         } else {\n             dup();\n         }\n         box(Type.getReturnType(this.methodDesc));\n     }\n     visitIntInsn(SIPUSH, opcode);\n     visitMethodInsn(INVOKESTATIC, owner, \"onExit\", \"(Ljava/lang/Object;I)V\");\n   }\n\n   // an actual call back method\n   public static void onExit(Object param, int opcode) {\n     ...\n </pre>\n\n <br>\n <br>\n\n <i>Custom code can use or change all the local variables, but should not\n change state of the stack.</i>\n\n @param opcode\n            one of the RETURN, IRETURN, FRETURN, ARETURN, LRETURN, DRETURN\n            or ATHROW\n\n","return_type":"void"}],"fields":[{"parameters":null,"name":"THIS","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"OTHER","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"methodAccess","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"methodDesc","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"constructor","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"superInitialized","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"stackFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null},{"parameters":null,"name":"branches","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":"","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.commons","description":" A {@link jdk.internal.org.objectweb.asm.MethodVisitor} to insert before, after and around\n advices in methods and constructors.\n <p>\n The behavior for constructors is like this:\n <ol>\n\n <li>as long as the INVOKESPECIAL for the object initialization has not been\n reached, every bytecode instruction is dispatched in the ctor code visitor</li>\n\n <li>when this one is reached, it is only added in the ctor code visitor and a\n JP invoke is added</li>\n\n <li>after that, only the other code visitor receives the instructions</li>\n\n </ol>\n\n @author Eugene Kuleshov\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SignatureWriter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SignatureWriter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Constructs a new {@link SignatureWriter} object.\n","return_type":null}],"methods":[{"parameters":"String:name","name":"visitFormalTypeParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"void"},{"parameters":null,"name":"visitClassBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterfaceBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitSuperclass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterface","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitParameterType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitExceptionType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":"char:descriptor","name":"visitBaseType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"void"},{"parameters":"String:name","name":"visitTypeVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"void"},{"parameters":null,"name":"visitArrayType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":"String:name","name":"visitClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"void"},{"parameters":"String:name","name":"visitInnerClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"void"},{"parameters":null,"name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"void"},{"parameters":"char:wildcard","name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":"","return_type":"void"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Returns the signature that was built by this signature writer.\n\n @return the signature that was built by this signature writer.\n","return_type":"String"},{"parameters":null,"name":"endFormals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Ends the formal type parameters section of the signature.\n","return_type":"void"},{"parameters":null,"name":"endArguments","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Ends the type arguments of a class or inner class type.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"buf","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.signature","description":" Buffer used to construct the signature.\n","return_type":null},{"parameters":null,"name":"hasFormals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Indicates if the signature contains formal type parameters.\n","return_type":null},{"parameters":null,"name":"hasParameters","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Indicates if the signature contains method parameter types.\n","return_type":null},{"parameters":null,"name":"argumentStack","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Stack used to keep track of class types that have arguments. Each element\n of this stack is a boolean encoded in one bit. The top of the stack is\n the lowest order bit. Pushing false = *2, pushing true = *2+1, popping =\n /2.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" A signature visitor that generates signatures in string format.\n\n @author Thomas Hallgren\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SignatureVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api","name":"SignatureVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Constructs a new {@link SignatureVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null}],"methods":[{"parameters":"String:name","name":"visitFormalTypeParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits a formal type parameter.\n\n @param name\n            the name of the formal parameter.\n","return_type":"void"},{"parameters":null,"name":"visitClassBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits the class bound of the last visited formal type parameter.\n\n @return a non null visitor to visit the signature of the class bound.\n","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterfaceBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits an interface bound of the last visited formal type parameter.\n\n @return a non null visitor to visit the signature of the interface bound.\n","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitSuperclass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits the type of the super class.\n\n @return a non null visitor to visit the signature of the super class\n         type.\n","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterface","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits the type of an interface implemented by the class.\n\n @return a non null visitor to visit the signature of the interface type.\n","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitParameterType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits the type of a method parameter.\n\n @return a non null visitor to visit the signature of the parameter type.\n","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits the return type of the method.\n\n @return a non null visitor to visit the signature of the return type.\n","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitExceptionType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits the type of a method exception.\n\n @return a non null visitor to visit the signature of the exception type.\n","return_type":"SignatureVisitor"},{"parameters":"char:descriptor","name":"visitBaseType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits a signature corresponding to a primitive type.\n\n @param descriptor\n            the descriptor of the primitive type, or 'V' for <tt>void</tt>\n            .\n","return_type":"void"},{"parameters":"String:name","name":"visitTypeVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits a signature corresponding to a type variable.\n\n @param name\n            the name of the type variable.\n","return_type":"void"},{"parameters":null,"name":"visitArrayType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits a signature corresponding to an array type.\n\n @return a non null visitor to visit the signature of the array element\n         type.\n","return_type":"SignatureVisitor"},{"parameters":"String:name","name":"visitClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Starts the visit of a signature corresponding to a class or interface\n type.\n\n @param name\n            the internal name of the class or interface.\n","return_type":"void"},{"parameters":"String:name","name":"visitInnerClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits an inner class.\n\n @param name\n            the local name of the inner class in its enclosing class.\n","return_type":"void"},{"parameters":null,"name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits an unbounded type argument of the last visited class or inner\n class type.\n","return_type":"void"},{"parameters":"char:wildcard","name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Visits a type argument of the last visited class or inner class type.\n\n @param wildcard\n            '+', '-' or '='.\n @return a non null visitor to visit the signature of the type argument.\n","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Ends the visit of a signature corresponding to a class or interface type.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"EXTENDS","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.signature","description":" Wildcard for an \"extends\" type argument.\n","return_type":null},{"parameters":null,"name":"SUPER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.signature","description":" Wildcard for a \"super\" type argument.\n","return_type":null},{"parameters":null,"name":"INSTANCEOF","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.signature","description":" Wildcard for a normal type argument.\n","return_type":null},{"parameters":null,"name":"api","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.signature","description":" The ASM API version implemented by this visitor. The value of this field\n must be one of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" A visitor to visit a generic signature. The methods of this interface must be\n called in one of the three following orders (the last one is the only valid\n order for a {@link SignatureVisitor} that is returned by a method of this\n interface):\n <ul>\n <li><i>ClassSignature</i> = ( <tt>visitFormalTypeParameter</tt>\n <tt>visitClassBound</tt>? <tt>visitInterfaceBound</tt>* )* (\n <tt>visitSuperClass</tt> <tt>visitInterface</tt>* )</li>\n <li><i>MethodSignature</i> = ( <tt>visitFormalTypeParameter</tt>\n <tt>visitClassBound</tt>? <tt>visitInterfaceBound</tt>* )* (\n <tt>visitParameterType</tt>* <tt>visitReturnType</tt>\n <tt>visitExceptionType</tt>* )</li>\n <li><i>TypeSignature</i> = <tt>visitBaseType</tt> |\n <tt>visitTypeVariable</tt> | <tt>visitArrayType</tt> | (\n <tt>visitClassType</tt> <tt>visitTypeArgument</tt>* (\n <tt>visitInnerClassType</tt> <tt>visitTypeArgument</tt>* )* <tt>visitEnd</tt>\n ) )</li>\n </ul>\n\n @author Thomas Hallgren\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SignatureReader","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:signature","name":"SignatureReader","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Constructs a {@link SignatureReader} for the given signature.\n\n @param signature\n            A <i>ClassSignature</i>, <i>MethodTypeSignature</i>, or\n            <i>FieldTypeSignature</i>.\n","return_type":null}],"methods":[{"parameters":"SignatureVisitor:v","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Makes the given visitor visit the signature of this\n {@link SignatureReader}. This signature is the one specified in the\n constructor (see {@link #SignatureReader(String) SignatureReader}). This\n method is intended to be called on a {@link SignatureReader} that was\n created using a <i>ClassSignature</i> (such as the <code>signature</code>\n parameter of the {@link jdk.internal.org.objectweb.asm.ClassVisitor#visit\n ClassVisitor.visit} method) or a <i>MethodTypeSignature</i> (such as the\n <code>signature</code> parameter of the\n {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitMethod\n ClassVisitor.visitMethod} method).\n\n @param v\n            the visitor that must visit this signature.\n","return_type":"void"},{"parameters":"SignatureVisitor:v","name":"acceptType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Makes the given visitor visit the signature of this\n {@link SignatureReader}. This signature is the one specified in the\n constructor (see {@link #SignatureReader(String) SignatureReader}). This\n method is intended to be called on a {@link SignatureReader} that was\n created using a <i>FieldTypeSignature</i>, such as the\n <code>signature</code> parameter of the\n {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitField ClassVisitor.visitField}\n or {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitLocalVariable\n MethodVisitor.visitLocalVariable} methods.\n\n @param v\n            the visitor that must visit this signature.\n","return_type":"void"},{"parameters":"String:signature,int:pos,SignatureVisitor:v","name":"parseType","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" Parses a field type signature and makes the given visitor visit it.\n\n @param signature\n            a string containing the signature that must be parsed.\n @param pos\n            index of the first character of the signature to parsed.\n @param v\n            the visitor that must visit this signature.\n @return the index of the first character after the parsed signature.\n","return_type":"int"}],"fields":[{"parameters":null,"name":"signature","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.signature","description":" The signature to be read.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.signature","description":" A type signature parser to make a signature visitor visit an existing\n signature.\n\n @author Thomas Hallgren\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"VarInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode,int:var","name":"VarInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link VarInsnNode}.\n\n @param opcode\n            the opcode of the local variable instruction to be\n            constructed. This opcode must be ILOAD, LLOAD, FLOAD, DLOAD,\n            ALOAD, ISTORE, LSTORE, FSTORE, DSTORE, ASTORE or RET.\n @param var\n            the operand of the instruction to be constructed. This operand\n            is the index of a local variable.\n","return_type":null}],"methods":[{"parameters":"int:opcode","name":"setOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Sets the opcode of this instruction.\n\n @param opcode\n            the new instruction opcode. This opcode must be ILOAD, LLOAD,\n            FLOAD, DLOAD, ALOAD, ISTORE, LSTORE, FSTORE, DSTORE, ASTORE or\n            RET.\n","return_type":"void"},{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"var","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The operand of this instruction. This operand is the index of a local\n variable.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a local variable instruction. A local variable\n instruction is an instruction that loads or stores the value of a local\n variable.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TypeInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode,String:desc","name":"TypeInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link TypeInsnNode}.\n\n @param opcode\n            the opcode of the type instruction to be constructed. This\n            opcode must be NEW, ANEWARRAY, CHECKCAST or INSTANCEOF.\n @param desc\n            the operand of the instruction to be constructed. This operand\n            is an internal name (see {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null}],"methods":[{"parameters":"int:opcode","name":"setOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Sets the opcode of this instruction.\n\n @param opcode\n            the new instruction opcode. This opcode must be NEW,\n            ANEWARRAY, CHECKCAST or INSTANCEOF.\n","return_type":"void"},{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The operand of this instruction. This operand is an internal name (see\n {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a type instruction. A type instruction is an\n instruction that takes a type descriptor as parameter.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TypeAnnotationNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:typeRef,TypePath:typePath,String:desc","name":"TypeAnnotationNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link AnnotationNode}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #TypeAnnotationNode(int, int, TypePath, String)} version.\n\n @param typeRef\n            a reference to the annotated type. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,int:typeRef,TypePath:typePath,String:desc","name":"TypeAnnotationNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link AnnotationNode}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param typeRef\n            a reference to the annotated type. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"typeRef","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A reference to the annotated type. See {@link TypeReference}.\n","return_type":null},{"parameters":null,"name":"typePath","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The path to the annotated type argument, wildcard bound, array element\n type, or static outer type within the referenced type. May be\n <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a type annotationn.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TryCatchBlockNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"LabelNode:start,LabelNode:end,LabelNode:handler,String:type","name":"TryCatchBlockNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link TryCatchBlockNode}.\n\n @param start\n            beginning of the exception handler's scope (inclusive).\n @param end\n            end of the exception handler's scope (exclusive).\n @param handler\n            beginning of the exception handler's code.\n @param type\n            internal name of the type of exceptions handled by the\n            handler, or <tt>null</tt> to catch any exceptions (for\n            \"finally\" blocks).\n","return_type":null}],"methods":[{"parameters":"int:index","name":"updateIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Updates the index of this try catch block in the method's list of try\n catch block nodes. This index maybe stored in the 'target' field of the\n type annotations of this block.\n\n @param index\n            the new index of this try catch block in the method's list of\n            try catch block nodes.\n","return_type":"void"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit this try catch block.\n\n @param mv\n            a method visitor.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"start","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Beginning of the exception handler's scope (inclusive).\n","return_type":null},{"parameters":null,"name":"end","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" End of the exception handler's scope (exclusive).\n","return_type":null},{"parameters":null,"name":"handler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Beginning of the exception handler's code.\n","return_type":null},{"parameters":null,"name":"type","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Internal name of the type of exceptions handled by the handler. May be\n <tt>null</tt> to catch any exceptions (for \"finally\" blocks).\n","return_type":null},{"parameters":null,"name":"visibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible type annotations on the exception handler type. This\n list is a list of {@link TypeAnnotationNode} objects. May be\n <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible type annotations on the exception handler type.\n This list is a list of {@link TypeAnnotationNode} objects. May be\n <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label invisible\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a try catch block.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TableSwitchInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:min,int:max,LabelNode:dflt,jdk.internal.org.objectweb.asm.tree.LabelNode[]:labels","name":"TableSwitchInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link TableSwitchInsnNode}.\n\n @param min\n            the minimum key value.\n @param max\n            the maximum key value.\n @param dflt\n            beginning of the default handler block.\n @param labels\n            beginnings of the handler blocks. <tt>labels[i]</tt> is the\n            beginning of the handler block for the <tt>min + i</tt> key.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"min","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The minimum key value.\n","return_type":null},{"parameters":null,"name":"max","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The maximum key value.\n","return_type":null},{"parameters":null,"name":"dflt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Beginning of the default handler block.\n","return_type":null},{"parameters":null,"name":"labels","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Beginnings of the handler blocks. This list is a list of\n {@link LabelNode} objects.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a TABLESWITCH instruction.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ParameterNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name,int:access","name":"ParameterNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link ParameterNode}.\n\n @param access\n            The parameter's access flags. Valid values are\n            <tt>ACC_FINAL</tt>, <tt>ACC_SYNTHETIC</tt> or/and\n            <tt>ACC_MANDATED</tt> (see {@link jdk.internal.org.objectweb.asm.Opcodes}).\n @param name\n            the parameter's name.\n","return_type":null}],"methods":[{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit this parameter declaration.\n\n @param mv\n            a method visitor.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The parameter's name.\n","return_type":null},{"parameters":null,"name":"access","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The parameter's access flags (see {@link jdk.internal.org.objectweb.asm.Opcodes}).\n Valid values are <tt>ACC_FINAL</tt>, <tt>ACC_SYNTHETIC</tt> and\n <tt>ACC_MANDATED</tt>.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a parameter access and name.\n\n @author Remi Forax\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"MultiANewArrayInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:desc,int:dims","name":"MultiANewArrayInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link MultiANewArrayInsnNode}.\n\n @param desc\n            an array type descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n @param dims\n            number of dimensions of the array to allocate.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" An array type descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null},{"parameters":null,"name":"dims","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Number of dimensions of the array to allocate.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a MULTIANEWARRAY instruction.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"MethodNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"MethodNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs an uninitialized {@link MethodNode}. <i>Subclasses must not\n use this constructor</i>. Instead, they must use the\n {@link #MethodNode(int)} version.\n\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api","name":"MethodNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs an uninitialized {@link MethodNode}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"MethodNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link MethodNode}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #MethodNode(int, int, String, String, String, String[])} version.\n\n @param access\n            the method's access flags (see {@link Opcodes}). This\n            parameter also indicates if the method is synthetic and/or\n            deprecated.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type}).\n @param signature\n            the method's signature. May be <tt>null</tt>.\n @param exceptions\n            the internal names of the method's exception classes (see\n            {@link Type#getInternalName() getInternalName}). May be\n            <tt>null</tt>.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"MethodNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link MethodNode}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param access\n            the method's access flags (see {@link Opcodes}). This\n            parameter also indicates if the method is synthetic and/or\n            deprecated.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type}).\n @param signature\n            the method's signature. May be <tt>null</tt>.\n @param exceptions\n            the internal names of the method's exception classes (see\n            {@link Type#getInternalName() getInternalName}). May be\n            <tt>null</tt>.\n","return_type":null}],"methods":[{"parameters":"String:name,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"Label:l","name":"getLabelNode","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the LabelNode corresponding to the given Label. Creates a new\n LabelNode if necessary. The default implementation of this method uses\n the {@link Label#info} field to store associations between labels and\n label nodes.\n\n @param l\n            a Label.\n @return the LabelNode corresponding to l.\n","return_type":"LabelNode"},{"parameters":"jdk.internal.org.objectweb.asm.Label[]:l","name":"getLabelNodes","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"LabelNode"},{"parameters":"java.lang.Object[]:objs","name":"getLabelNodes","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"Object"},{"parameters":"int:api","name":"check","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Checks that this method node is compatible with the given ASM API\n version. This methods checks that this node, and all its nodes\n recursively, do not contain elements that were introduced in more recent\n versions of the ASM API than the given version.\n\n @param api\n            an ASM API version. Must be one of {@link Opcodes#ASM4} or\n            {@link Opcodes#ASM5}.\n","return_type":"void"},{"parameters":"ClassVisitor:cv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given class visitor visit this method.\n\n @param cv\n            a class visitor.\n","return_type":"void"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given method visitor visit this method.\n\n @param mv\n            a method visitor.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"access","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The method's access flags (see {@link Opcodes}). This field also\n indicates if the method is synthetic and/or deprecated.\n","return_type":null},{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The method's name.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The method's descriptor (see {@link Type}).\n","return_type":null},{"parameters":null,"name":"signature","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The method's signature. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"exceptions","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal names of the method's exception classes (see\n {@link Type#getInternalName() getInternalName}). This list is a list of\n {@link String} objects.\n","return_type":null},{"parameters":null,"name":"parameters","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The method parameter info (access flags and name)\n","return_type":null},{"parameters":null,"name":"visibleAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible annotations of this method. This list is a list of\n {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible annotations of this method. This list is a list of\n {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label invisible\n","return_type":null},{"parameters":null,"name":"visibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible type annotations of this method. This list is a list\n of {@link TypeAnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible type annotations of this method. This list is a\n list of {@link TypeAnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label invisible\n","return_type":null},{"parameters":null,"name":"attrs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The non standard attributes of this method. This list is a list of\n {@link Attribute} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.Attribute\n","return_type":null},{"parameters":null,"name":"annotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The default value of this annotation interface method. This field must be\n a {@link Byte}, {@link Boolean}, {@link Character}, {@link Short},\n {@link Integer}, {@link Long}, {@link Float}, {@link Double},\n {@link String} or {@link Type}, or an two elements String array (for\n enumeration values), a {@link AnnotationNode}, or a {@link List} of\n values of one of the preceding types. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"visibleParameterAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible parameter annotations of this method. These lists are\n lists of {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label invisible parameters\n","return_type":null},{"parameters":null,"name":"invisibleParameterAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible parameter annotations of this method. These lists\n are lists of {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label visible parameters\n","return_type":null},{"parameters":null,"name":"instructions","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The instructions of this method. This list is a list of\n {@link AbstractInsnNode} objects.\n\n @associates jdk.internal.org.objectweb.asm.tree.AbstractInsnNode\n @label instructions\n","return_type":null},{"parameters":null,"name":"tryCatchBlocks","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The try catch blocks of this method. This list is a list of\n {@link TryCatchBlockNode} objects.\n\n @associates jdk.internal.org.objectweb.asm.tree.TryCatchBlockNode\n","return_type":null},{"parameters":null,"name":"maxStack","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The maximum stack size of this method.\n","return_type":null},{"parameters":null,"name":"maxLocals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The maximum number of local variables of this method.\n","return_type":null},{"parameters":null,"name":"localVariables","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The local variables of this method. This list is a list of\n {@link LocalVariableNode} objects. May be <tt>null</tt>\n\n @associates jdk.internal.org.objectweb.asm.tree.LocalVariableNode\n","return_type":null},{"parameters":null,"name":"visibleLocalVariableAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The visible local variable annotations of this method. This list is a\n list of {@link LocalVariableAnnotationNode} objects. May be <tt>null</tt>\n\n @associates jdk.internal.org.objectweb.asm.tree.LocalVariableAnnotationNode\n","return_type":null},{"parameters":null,"name":"invisibleLocalVariableAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The invisible local variable annotations of this method. This list is a\n list of {@link LocalVariableAnnotationNode} objects. May be <tt>null</tt>\n\n @associates jdk.internal.org.objectweb.asm.tree.LocalVariableAnnotationNode\n","return_type":null},{"parameters":null,"name":"visited","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" If the accept method has been called on this object.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a method.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"MethodInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"MethodInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link MethodInsnNode}.\n\n @param opcode\n            the opcode of the type instruction to be constructed. This\n            opcode must be INVOKEVIRTUAL, INVOKESPECIAL, INVOKESTATIC or\n            INVOKEINTERFACE.\n @param owner\n            the internal name of the method's owner class (see\n            {@link jdk.internal.org.objectweb.asm.Type#getInternalName()\n            getInternalName}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"MethodInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link MethodInsnNode}.\n\n @param opcode\n            the opcode of the type instruction to be constructed. This\n            opcode must be INVOKEVIRTUAL, INVOKESPECIAL, INVOKESTATIC or\n            INVOKEINTERFACE.\n @param owner\n            the internal name of the method's owner class (see\n            {@link jdk.internal.org.objectweb.asm.Type#getInternalName()\n            getInternalName}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n @param itf\n            if the method's owner class is an interface.\n","return_type":null}],"methods":[{"parameters":"int:opcode","name":"setOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Sets the opcode of this instruction.\n\n @param opcode\n            the new instruction opcode. This opcode must be INVOKEVIRTUAL,\n            INVOKESPECIAL, INVOKESTATIC or INVOKEINTERFACE.\n","return_type":"void"},{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"owner","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal name of the method's owner class (see\n {@link jdk.internal.org.objectweb.asm.Type#getInternalName() getInternalName}).\n","return_type":null},{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The method's name.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The method's descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null},{"parameters":null,"name":"itf","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" If the method's owner class if an interface.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a method instruction. A method instruction is an\n instruction that invokes a method.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"LookupSwitchInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"LabelNode:dflt,int[]:keys,jdk.internal.org.objectweb.asm.tree.LabelNode[]:labels","name":"LookupSwitchInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link LookupSwitchInsnNode}.\n\n @param dflt\n            beginning of the default handler block.\n @param keys\n            the values of the keys.\n @param labels\n            beginnings of the handler blocks. <tt>labels[i]</tt> is the\n            beginning of the handler block for the <tt>keys[i]</tt> key.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"dflt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Beginning of the default handler block.\n","return_type":null},{"parameters":null,"name":"keys","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The values of the keys. This list is a list of {@link Integer} objects.\n","return_type":null},{"parameters":null,"name":"labels","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Beginnings of the handler blocks. This list is a list of\n {@link LabelNode} objects.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a LOOKUPSWITCH instruction.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"LocalVariableNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name,String:desc,String:signature,LabelNode:start,LabelNode:end,int:index","name":"LocalVariableNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link LocalVariableNode}.\n\n @param name\n            the name of a local variable.\n @param desc\n            the type descriptor of this local variable.\n @param signature\n            the signature of this local variable. May be <tt>null</tt>.\n @param start\n            the first instruction corresponding to the scope of this local\n            variable (inclusive).\n @param end\n            the last instruction corresponding to the scope of this local\n            variable (exclusive).\n @param index\n            the local variable's index.\n","return_type":null}],"methods":[{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit this local variable declaration.\n\n @param mv\n            a method visitor.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The name of a local variable.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type descriptor of this local variable.\n","return_type":null},{"parameters":null,"name":"signature","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The signature of this local variable. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"start","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The first instruction corresponding to the scope of this local variable\n (inclusive).\n","return_type":null},{"parameters":null,"name":"end","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The last instruction corresponding to the scope of this local variable\n (exclusive).\n","return_type":null},{"parameters":null,"name":"index","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The local variable's index.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a local variable declaration.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"LocalVariableAnnotationNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.tree.LabelNode[]:start,jdk.internal.org.objectweb.asm.tree.LabelNode[]:end,int[]:index,String:desc","name":"LocalVariableAnnotationNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link LocalVariableAnnotationNode}. <i>Subclasses must\n not use this constructor</i>. Instead, they must use the\n {@link #LocalVariableAnnotationNode(int, TypePath, LabelNode[], LabelNode[], int[], String)}\n version.\n\n @param typeRef\n            a reference to the annotated type. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param start\n            the fist instructions corresponding to the continuous ranges\n            that make the scope of this local variable (inclusive).\n @param end\n            the last instructions corresponding to the continuous ranges\n            that make the scope of this local variable (exclusive). This\n            array must have the same size as the 'start' array.\n @param index\n            the local variable's index in each range. This array must have\n            the same size as the 'start' array.\n @param desc\n            the class descriptor of the annotation class.\n","return_type":null},{"parameters":"int:api,int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.tree.LabelNode[]:start,jdk.internal.org.objectweb.asm.tree.LabelNode[]:end,int[]:index,String:desc","name":"LocalVariableAnnotationNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link LocalVariableAnnotationNode}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param typeRef\n            a reference to the annotated type. See {@link TypeReference}.\n @param start\n            the fist instructions corresponding to the continuous ranges\n            that make the scope of this local variable (inclusive).\n @param end\n            the last instructions corresponding to the continuous ranges\n            that make the scope of this local variable (exclusive). This\n            array must have the same size as the 'start' array.\n @param index\n            the local variable's index in each range. This array must have\n            the same size as the 'start' array.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n","return_type":null}],"methods":[{"parameters":"MethodVisitor:mv,boolean:visible","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit this type annotation.\n\n @param mv\n            the visitor that must visit this annotation.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"start","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The fist instructions corresponding to the continuous ranges that make\n the scope of this local variable (inclusive). Must not be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"end","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The last instructions corresponding to the continuous ranges that make\n the scope of this local variable (exclusive). This list must have the\n same size as the 'start' list. Must not be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"index","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The local variable's index in each range. This list must have the same\n size as the 'start' list. Must not be <tt>null</tt>.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a type annotation on a local or resource variable.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"LineNumberNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:line,LabelNode:start","name":"LineNumberNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link LineNumberNode}.\n\n @param line\n            a line number. This number refers to the source file from\n            which the class was compiled.\n @param start\n            the first instruction corresponding to this line number.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"line","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A line number. This number refers to the source file from which the class\n was compiled.\n","return_type":null},{"parameters":null,"name":"start","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The first instruction corresponding to this line number.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a line number declaration. These nodes are pseudo\n instruction nodes in order to be inserted in an instruction list.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"LdcInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"Object:cst","name":"LdcInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link LdcInsnNode}.\n\n @param cst\n            the constant to be loaded on the stack. This parameter must be\n            a non null {@link Integer}, a {@link Float}, a {@link Long}, a\n            {@link Double} or a {@link String}.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"cst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The constant to be loaded on the stack. This parameter must be a non null\n {@link Integer}, a {@link Float}, a {@link Long}, a {@link Double}, a\n {@link String} or a {@link jdk.internal.org.objectweb.asm.Type}.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents an LDC instruction.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"LabelNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"LabelNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null},{"parameters":"Label:label","name":"LabelNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":null,"name":"getLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"Label"},{"parameters":"MethodVisitor:cv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"},{"parameters":null,"name":"resetLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"label","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" An {@link AbstractInsnNode} that encapsulates a {@link Label}.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"JumpInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode,LabelNode:label","name":"JumpInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link JumpInsnNode}.\n\n @param opcode\n            the opcode of the type instruction to be constructed. This\n            opcode must be IFEQ, IFNE, IFLT, IFGE, IFGT, IFLE, IF_ICMPEQ,\n            IF_ICMPNE, IF_ICMPLT, IF_ICMPGE, IF_ICMPGT, IF_ICMPLE,\n            IF_ACMPEQ, IF_ACMPNE, GOTO, JSR, IFNULL or IFNONNULL.\n @param label\n            the operand of the instruction to be constructed. This operand\n            is a label that designates the instruction to which the jump\n            instruction may jump.\n","return_type":null}],"methods":[{"parameters":"int:opcode","name":"setOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Sets the opcode of this instruction.\n\n @param opcode\n            the new instruction opcode. This opcode must be IFEQ, IFNE,\n            IFLT, IFGE, IFGT, IFLE, IF_ICMPEQ, IF_ICMPNE, IF_ICMPLT,\n            IF_ICMPGE, IF_ICMPGT, IF_ICMPLE, IF_ACMPEQ, IF_ACMPNE, GOTO,\n            JSR, IFNULL or IFNONNULL.\n","return_type":"void"},{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"label","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The operand of this instruction. This operand is a label that designates\n the instruction to which this instruction may jump.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a jump instruction. A jump instruction is an\n instruction that may jump to another instruction.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"InvokeDynamicInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"InvokeDynamicInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link InvokeDynamicInsnNode}.\n\n @param name\n            invokedynamic name.\n @param desc\n            invokedynamic descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n @param bsm\n            the bootstrap method.\n @param bsmArgs\n            the boostrap constant arguments.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Invokedynamic name.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Invokedynamic descriptor.\n","return_type":null},{"parameters":null,"name":"bsm","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Bootstrap method\n","return_type":null},{"parameters":null,"name":"bsmArgs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Bootstrap constant arguments\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents an invokedynamic instruction.\n\n @author Remi Forax\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"IntInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode,int:operand","name":"IntInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link IntInsnNode}.\n\n @param opcode\n            the opcode of the instruction to be constructed. This opcode\n            must be BIPUSH, SIPUSH or NEWARRAY.\n @param operand\n            the operand of the instruction to be constructed.\n","return_type":null}],"methods":[{"parameters":"int:opcode","name":"setOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Sets the opcode of this instruction.\n\n @param opcode\n            the new instruction opcode. This opcode must be BIPUSH, SIPUSH\n            or NEWARRAY.\n","return_type":"void"},{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"operand","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The operand of this instruction.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents an instruction with a single int operand.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"InsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode","name":"InsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link InsnNode}.\n\n @param opcode\n            the opcode of the instruction to be constructed. This opcode\n            must be NOP, ACONST_NULL, ICONST_M1, ICONST_0, ICONST_1,\n            ICONST_2, ICONST_3, ICONST_4, ICONST_5, LCONST_0, LCONST_1,\n            FCONST_0, FCONST_1, FCONST_2, DCONST_0, DCONST_1, IALOAD,\n            LALOAD, FALOAD, DALOAD, AALOAD, BALOAD, CALOAD, SALOAD,\n            IASTORE, LASTORE, FASTORE, DASTORE, AASTORE, BASTORE, CASTORE,\n            SASTORE, POP, POP2, DUP, DUP_X1, DUP_X2, DUP2, DUP2_X1,\n            DUP2_X2, SWAP, IADD, LADD, FADD, DADD, ISUB, LSUB, FSUB, DSUB,\n            IMUL, LMUL, FMUL, DMUL, IDIV, LDIV, FDIV, DDIV, IREM, LREM,\n            FREM, DREM, INEG, LNEG, FNEG, DNEG, ISHL, LSHL, ISHR, LSHR,\n            IUSHR, LUSHR, IAND, LAND, IOR, LOR, IXOR, LXOR, I2L, I2F, I2D,\n            L2I, L2F, L2D, F2I, F2L, F2D, D2I, D2L, D2F, I2B, I2C, I2S,\n            LCMP, FCMPL, FCMPG, DCMPL, DCMPG, IRETURN, LRETURN, FRETURN,\n            DRETURN, ARETURN, RETURN, ARRAYLENGTH, ATHROW, MONITORENTER,\n            or MONITOREXIT.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit this instruction.\n\n @param mv\n            a method visitor.\n","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a zero operand instruction.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"InsnList","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"InsnList","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null}],"methods":[{"parameters":null,"name":"size","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the number of instructions in this list.\n\n @return the number of instructions in this list.\n","return_type":"int"},{"parameters":null,"name":"getFirst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the first instruction in this list.\n\n @return the first instruction in this list, or <tt>null</tt> if the list\n         is empty.\n","return_type":"AbstractInsnNode"},{"parameters":null,"name":"getLast","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the last instruction in this list.\n\n @return the last instruction in this list, or <tt>null</tt> if the list\n         is empty.\n","return_type":"AbstractInsnNode"},{"parameters":"int:index","name":"get","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the instruction whose index is given. This method builds a cache\n of the instructions in this list to avoid scanning the whole list each\n time it is called. Once the cache is built, this method run in constant\n time. This cache is invalidated by all the methods that modify the list.\n\n @param index\n            the index of the instruction that must be returned.\n @return the instruction whose index is given.\n @throws IndexOutOfBoundsException\n             if (index &lt; 0 || index &gt;= size()).\n","return_type":"AbstractInsnNode"},{"parameters":"AbstractInsnNode:insn","name":"contains","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns <tt>true</tt> if the given instruction belongs to this list. This\n method always scans the instructions of this list until it finds the\n given instruction or reaches the end of the list.\n\n @param insn\n            an instruction.\n @return <tt>true</tt> if the given instruction belongs to this list.\n","return_type":"boolean"},{"parameters":"AbstractInsnNode:insn","name":"indexOf","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the index of the given instruction in this list. This method\n builds a cache of the instruction indexes to avoid scanning the whole\n list each time it is called. Once the cache is built, this method run in\n constant time. The cache is invalidated by all the methods that modify\n the list.\n\n @param insn\n            an instruction <i>of this list</i>.\n @return the index of the given instruction in this list. <i>The result of\n         this method is undefined if the given instruction does not belong\n         to this list</i>. Use {@link #contains contains} to test if an\n         instruction belongs to an instruction list or not.\n","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit all of the instructions in this list.\n\n @param mv\n            the method visitor that must visit the instructions.\n","return_type":"void"},{"parameters":null,"name":"iterator","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns an iterator over the instructions in this list.\n\n @return an iterator over the instructions in this list.\n","return_type":"ListIterator"},{"parameters":"int:index","name":"iterator","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns an iterator over the instructions in this list.\n\n @return an iterator over the instructions in this list.\n","return_type":"ListIterator"},{"parameters":null,"name":"toArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns an array containing all of the instructions in this list.\n\n @return an array containing all of the instructions in this list.\n","return_type":"AbstractInsnNode"},{"parameters":"AbstractInsnNode:location,AbstractInsnNode:insn","name":"set","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Replaces an instruction of this list with another instruction.\n\n @param location\n            an instruction <i>of this list</i>.\n @param insn\n            another instruction, <i>which must not belong to any\n            {@link InsnList}</i>.\n","return_type":"void"},{"parameters":"AbstractInsnNode:insn","name":"add","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Adds the given instruction to the end of this list.\n\n @param insn\n            an instruction, <i>which must not belong to any\n            {@link InsnList}</i>.\n","return_type":"void"},{"parameters":"InsnList:insns","name":"add","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Adds the given instructions to the end of this list.\n\n @param insns\n            an instruction list, which is cleared during the process. This\n            list must be different from 'this'.\n","return_type":"void"},{"parameters":"AbstractInsnNode:insn","name":"insert","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Inserts the given instruction at the begining of this list.\n\n @param insn\n            an instruction, <i>which must not belong to any\n            {@link InsnList}</i>.\n","return_type":"void"},{"parameters":"InsnList:insns","name":"insert","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Inserts the given instructions at the begining of this list.\n\n @param insns\n            an instruction list, which is cleared during the process. This\n            list must be different from 'this'.\n","return_type":"void"},{"parameters":"AbstractInsnNode:location,AbstractInsnNode:insn","name":"insert","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Inserts the given instruction after the specified instruction.\n\n @param location\n            an instruction <i>of this list</i> after which insn must be\n            inserted.\n @param insn\n            the instruction to be inserted, <i>which must not belong to\n            any {@link InsnList}</i>.\n","return_type":"void"},{"parameters":"AbstractInsnNode:location,InsnList:insns","name":"insert","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Inserts the given instructions after the specified instruction.\n\n @param location\n            an instruction <i>of this list</i> after which the\n            instructions must be inserted.\n @param insns\n            the instruction list to be inserted, which is cleared during\n            the process. This list must be different from 'this'.\n","return_type":"void"},{"parameters":"AbstractInsnNode:location,AbstractInsnNode:insn","name":"insertBefore","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Inserts the given instruction before the specified instruction.\n\n @param location\n            an instruction <i>of this list</i> before which insn must be\n            inserted.\n @param insn\n            the instruction to be inserted, <i>which must not belong to\n            any {@link InsnList}</i>.\n","return_type":"void"},{"parameters":"AbstractInsnNode:location,InsnList:insns","name":"insertBefore","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Inserts the given instructions before the specified instruction.\n\n @param location\n            an instruction <i>of this list</i> before which the\n            instructions must be inserted.\n @param insns\n            the instruction list to be inserted, which is cleared during\n            the process. This list must be different from 'this'.\n","return_type":"void"},{"parameters":"AbstractInsnNode:insn","name":"remove","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Removes the given instruction from this list.\n\n @param insn\n            the instruction <i>of this list</i> that must be removed.\n","return_type":"void"},{"parameters":"boolean:mark","name":"removeAll","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Removes all of the instructions of this list.\n\n @param mark\n            if the instructions must be marked as no longer belonging to\n            any {@link InsnList}.\n","return_type":"void"},{"parameters":null,"name":"clear","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Removes all of the instructions of this list.\n","return_type":"void"},{"parameters":null,"name":"resetLabels","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Reset all labels in the instruction list. This method should be called\n before reusing same instructions list between several\n <code>ClassWriter</code>s.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"size","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The number of instructions in this list.\n","return_type":null},{"parameters":null,"name":"first","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The first instruction in this list. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"last","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The last instruction in this list. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"cache","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A cache of the instructions of this list. This cache is used to improve\n the performance of the {@link #get} method.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A doubly linked list of {@link AbstractInsnNode} objects. <i>This\n implementation is not thread safe</i>.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"InsnList.InsnListIterator","modifier":"private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:index","name":"InsnListIterator","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null}],"methods":[{"parameters":null,"name":"hasNext","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"boolean"},{"parameters":null,"name":"next","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"Object"},{"parameters":null,"name":"remove","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":null,"name":"hasPrevious","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"boolean"},{"parameters":null,"name":"previous","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"Object"},{"parameters":null,"name":"nextIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":null,"name":"previousIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"Object:o","name":"add","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"Object:o","name":"set","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null},{"parameters":null,"name":"prev","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null},{"parameters":null,"name":"remove","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"InnerClassNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"InnerClassNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link InnerClassNode}.\n\n @param name\n            the internal name of an inner class (see\n            {@link jdk.internal.org.objectweb.asm.Type#getInternalName()\n            getInternalName}).\n @param outerName\n            the internal name of the class to which the inner class\n            belongs (see {@link jdk.internal.org.objectweb.asm.Type#getInternalName()\n            getInternalName}). May be <tt>null</tt>.\n @param innerName\n            the (simple) name of the inner class inside its enclosing\n            class. May be <tt>null</tt> for anonymous inner classes.\n @param access\n            the access flags of the inner class as originally declared in\n            the enclosing class.\n","return_type":null}],"methods":[{"parameters":"ClassVisitor:cv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given class visitor visit this inner class.\n\n @param cv\n            a class visitor.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal name of an inner class (see\n {@link jdk.internal.org.objectweb.asm.Type#getInternalName() getInternalName}).\n","return_type":null},{"parameters":null,"name":"outerName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal name of the class to which the inner class belongs (see\n {@link jdk.internal.org.objectweb.asm.Type#getInternalName() getInternalName}). May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"innerName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The (simple) name of the inner class inside its enclosing class. May be\n <tt>null</tt> for anonymous inner classes.\n","return_type":null},{"parameters":null,"name":"access","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The access flags of the inner class as originally declared in the\n enclosing class.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents an inner class.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"IincInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:var,int:incr","name":"IincInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link IincInsnNode}.\n\n @param var\n            index of the local variable to be incremented.\n @param incr\n            increment amount to increment the local variable by.\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"var","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Index of the local variable to be incremented.\n","return_type":null},{"parameters":null,"name":"incr","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Amount to increment the local variable by.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents an IINC instruction.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"FrameNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"FrameNode","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":null},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"FrameNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link FrameNode}.\n\n @param type\n            the type of this frame. Must be {@link Opcodes#F_NEW} for\n            expanded frames, or {@link Opcodes#F_FULL},\n            {@link Opcodes#F_APPEND}, {@link Opcodes#F_CHOP},\n            {@link Opcodes#F_SAME} or {@link Opcodes#F_APPEND},\n            {@link Opcodes#F_SAME1} for compressed frames.\n @param nLocal\n            number of local variables of this stack map frame.\n @param local\n            the types of the local variables of this stack map frame.\n            Elements of this list can be Integer, String or LabelNode\n            objects (for primitive, reference and uninitialized types\n            respectively - see {@link MethodVisitor}).\n @param nStack\n            number of operand stack elements of this stack map frame.\n @param stack\n            the types of the operand stack elements of this stack map\n            frame. Elements of this list can be Integer, String or\n            LabelNode objects (for primitive, reference and uninitialized\n            types respectively - see {@link MethodVisitor}).\n","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit this stack map frame.\n\n @param mv\n            a method visitor.\n","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"},{"parameters":"int:n,java.lang.Object[]:o","name":"asList","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"List"},{"parameters":"java.util.List:l","name":"asArray","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"Object"}],"fields":[{"parameters":null,"name":"type","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of this frame. Must be {@link Opcodes#F_NEW} for expanded\n frames, or {@link Opcodes#F_FULL}, {@link Opcodes#F_APPEND},\n {@link Opcodes#F_CHOP}, {@link Opcodes#F_SAME} or\n {@link Opcodes#F_APPEND}, {@link Opcodes#F_SAME1} for compressed frames.\n","return_type":null},{"parameters":null,"name":"local","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The types of the local variables of this stack map frame. Elements of\n this list can be Integer, String or LabelNode objects (for primitive,\n reference and uninitialized types respectively - see\n {@link MethodVisitor}).\n","return_type":null},{"parameters":null,"name":"stack","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The types of the operand stack elements of this stack map frame. Elements\n of this list can be Integer, String or LabelNode objects (for primitive,\n reference and uninitialized types respectively - see\n {@link MethodVisitor}).\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a stack map frame. These nodes are pseudo instruction\n nodes in order to be inserted in an instruction list. In fact these nodes\n must(*) be inserted <i>just before</i> any instruction node <b>i</b> that\n follows an unconditionnal branch instruction such as GOTO or THROW, that is\n the target of a jump instruction, or that starts an exception handler block.\n The stack map frame types must describe the values of the local variables and\n of the operand stack elements <i>just before</i> <b>i</b> is executed. <br>\n <br>\n (*) this is mandatory only for classes whose version is greater than or equal\n to {@link Opcodes#V1_6 V1_6}.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"FieldNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"FieldNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link FieldNode}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #FieldNode(int, int, String, String, String, Object)} version.\n\n @param access\n            the field's access flags (see\n            {@link jdk.internal.org.objectweb.asm.Opcodes}). This parameter also\n            indicates if the field is synthetic and/or deprecated.\n @param name\n            the field's name.\n @param desc\n            the field's descriptor (see {@link jdk.internal.org.objectweb.asm.Type\n            Type}).\n @param signature\n            the field's signature.\n @param value\n            the field's initial value. This parameter, which may be\n            <tt>null</tt> if the field does not have an initial value,\n            must be an {@link Integer}, a {@link Float}, a {@link Long}, a\n            {@link Double} or a {@link String}.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,int:access,String:name,String:desc,String:signature,Object:value","name":"FieldNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link FieldNode}. <i>Subclasses must not use this\n constructor</i>.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param access\n            the field's access flags (see\n            {@link jdk.internal.org.objectweb.asm.Opcodes}). This parameter also\n            indicates if the field is synthetic and/or deprecated.\n @param name\n            the field's name.\n @param desc\n            the field's descriptor (see {@link jdk.internal.org.objectweb.asm.Type\n            Type}).\n @param signature\n            the field's signature.\n @param value\n            the field's initial value. This parameter, which may be\n            <tt>null</tt> if the field does not have an initial value,\n            must be an {@link Integer}, a {@link Float}, a {@link Long}, a\n            {@link Double} or a {@link String}.\n","return_type":null}],"methods":[{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:api","name":"check","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Checks that this field node is compatible with the given ASM API version.\n This methods checks that this node, and all its nodes recursively, do not\n contain elements that were introduced in more recent versions of the ASM\n API than the given version.\n\n @param api\n            an ASM API version. Must be one of {@link Opcodes#ASM4} or\n            {@link Opcodes#ASM5}.\n","return_type":"void"},{"parameters":"ClassVisitor:cv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given class visitor visit this field.\n\n @param cv\n            a class visitor.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"access","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The field's access flags (see {@link jdk.internal.org.objectweb.asm.Opcodes}). This\n field also indicates if the field is synthetic and/or deprecated.\n","return_type":null},{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The field's name.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The field's descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null},{"parameters":null,"name":"signature","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The field's signature. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"value","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The field's initial value. This field, which may be <tt>null</tt> if the\n field does not have an initial value, must be an {@link Integer}, a\n {@link Float}, a {@link Long}, a {@link Double} or a {@link String}.\n","return_type":null},{"parameters":null,"name":"visibleAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible annotations of this field. This list is a list of\n {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible annotations of this field. This list is a list of\n {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label invisible\n","return_type":null},{"parameters":null,"name":"visibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible type annotations of this field. This list is a list\n of {@link TypeAnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible type annotations of this field. This list is a list\n of {@link TypeAnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label invisible\n","return_type":null},{"parameters":null,"name":"attrs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The non standard attributes of this field. This list is a list of\n {@link Attribute} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.Attribute\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a field.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"FieldInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"FieldInsnNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link FieldInsnNode}.\n\n @param opcode\n            the opcode of the type instruction to be constructed. This\n            opcode must be GETSTATIC, PUTSTATIC, GETFIELD or PUTFIELD.\n @param owner\n            the internal name of the field's owner class (see\n            {@link jdk.internal.org.objectweb.asm.Type#getInternalName()\n            getInternalName}).\n @param name\n            the field's name.\n @param desc\n            the field's descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null}],"methods":[{"parameters":"int:opcode","name":"setOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Sets the opcode of this instruction.\n\n @param opcode\n            the new instruction opcode. This opcode must be GETSTATIC,\n            PUTSTATIC, GETFIELD or PUTFIELD.\n","return_type":"void"},{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"int"},{"parameters":"MethodVisitor:mv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"owner","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal name of the field's owner class (see\n {@link jdk.internal.org.objectweb.asm.Type#getInternalName() getInternalName}).\n","return_type":null},{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The field's name.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The field's descriptor (see {@link jdk.internal.org.objectweb.asm.Type}).\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a field instruction. A field instruction is an\n instruction that loads or stores the value of a field of an object.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ClassNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"ClassNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link ClassNode}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the {@link #ClassNode(int)}\n version.\n\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api","name":"ClassNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link ClassNode}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:file,String:debug","name":"visitSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"FieldVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"MethodVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:api","name":"check","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Checks that this class node is compatible with the given ASM API version.\n This methods checks that this node, and all its nodes recursively, do not\n contain elements that were introduced in more recent versions of the ASM\n API than the given version.\n\n @param api\n            an ASM API version. Must be one of {@link Opcodes#ASM4} or\n            {@link Opcodes#ASM5}.\n","return_type":"void"},{"parameters":"ClassVisitor:cv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given class visitor visit this class.\n\n @param cv\n            a class visitor.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"version","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The class version.\n","return_type":null},{"parameters":null,"name":"access","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The class's access flags (see {@link jdk.internal.org.objectweb.asm.Opcodes}). This\n field also indicates if the class is deprecated.\n","return_type":null},{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal name of the class (see\n {@link jdk.internal.org.objectweb.asm.Type#getInternalName() getInternalName}).\n","return_type":null},{"parameters":null,"name":"signature","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The signature of the class. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"superName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal of name of the super class (see\n {@link jdk.internal.org.objectweb.asm.Type#getInternalName() getInternalName}). For\n interfaces, the super class is {@link Object}. May be <tt>null</tt>, but\n only for the {@link Object} class.\n","return_type":null},{"parameters":null,"name":"interfaces","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal names of the class's interfaces (see\n {@link jdk.internal.org.objectweb.asm.Type#getInternalName() getInternalName}). This\n list is a list of {@link String} objects.\n","return_type":null},{"parameters":null,"name":"sourceFile","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The name of the source file from which this class was compiled. May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"sourceDebug","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Debug information to compute the correspondence between source and\n compiled elements of the class. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"outerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The internal name of the enclosing class of the class. May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"outerMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The name of the method that contains the class, or <tt>null</tt> if the\n class is not enclosed in a method.\n","return_type":null},{"parameters":null,"name":"outerMethodDesc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The descriptor of the method that contains the class, or <tt>null</tt> if\n the class is not enclosed in a method.\n","return_type":null},{"parameters":null,"name":"visibleAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible annotations of this class. This list is a list of\n {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible annotations of this class. This list is a list of\n {@link AnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.AnnotationNode\n @label invisible\n","return_type":null},{"parameters":null,"name":"visibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible type annotations of this class. This list is a list\n of {@link TypeAnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible type annotations of this class. This list is a list\n of {@link TypeAnnotationNode} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label invisible\n","return_type":null},{"parameters":null,"name":"attrs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The non standard attributes of this class. This list is a list of\n {@link Attribute} objects. May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.Attribute\n","return_type":null},{"parameters":null,"name":"innerClasses","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Informations about the inner classes of this class. This list is a list\n of {@link InnerClassNode} objects.\n\n @associates jdk.internal.org.objectweb.asm.tree.InnerClassNode\n","return_type":null},{"parameters":null,"name":"fields","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The fields of this class. This list is a list of {@link FieldNode}\n objects.\n\n @associates jdk.internal.org.objectweb.asm.tree.FieldNode\n","return_type":null},{"parameters":null,"name":"methods","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The methods of this class. This list is a list of {@link MethodNode}\n objects.\n\n @associates jdk.internal.org.objectweb.asm.tree.MethodNode\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a class.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"AnnotationNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:desc","name":"AnnotationNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link AnnotationNode}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #AnnotationNode(int, String)} version.\n\n @param desc\n            the class descriptor of the annotation class.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,String:desc","name":"AnnotationNode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link AnnotationNode}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param desc\n            the class descriptor of the annotation class.\n","return_type":null},{"parameters":"java.util.List:values","name":"AnnotationNode","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link AnnotationNode} to visit an array value.\n\n @param values\n            where the visited values must be stored.\n","return_type":null}],"methods":[{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"AnnotationVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":"","return_type":"void"},{"parameters":"int:api","name":"check","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Checks that this annotation node is compatible with the given ASM API\n version. This methods checks that this node, and all its nodes\n recursively, do not contain elements that were introduced in more recent\n versions of the ASM API than the given version.\n\n @param api\n            an ASM API version. Must be one of {@link Opcodes#ASM4} or\n            {@link Opcodes#ASM5}.\n","return_type":"void"},{"parameters":"AnnotationVisitor:av","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit this annotation.\n\n @param av\n            an annotation visitor. Maybe <tt>null</tt>.\n","return_type":"void"},{"parameters":"AnnotationVisitor:av,String:name,Object:value","name":"accept","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit a given annotation value.\n\n @param av\n            an annotation visitor. Maybe <tt>null</tt>.\n @param name\n            the value name.\n @param value\n            the actual value.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"desc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The class descriptor of the annotation class.\n","return_type":null},{"parameters":null,"name":"values","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The name value pairs of this annotation. Each name value pair is stored\n as two consecutive elements in the list. The name is a {@link String},\n and the value may be a {@link Byte}, {@link Boolean}, {@link Character},\n {@link Short}, {@link Integer}, {@link Long}, {@link Float},\n {@link Double}, {@link String} or {@link jdk.internal.org.objectweb.asm.Type}, or an\n two elements String array (for enumeration values), a\n {@link AnnotationNode}, or a {@link List} of values of one of the\n preceding types. The list may be <tt>null</tt> if there is no name value\n pair.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents an annotationn.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"AbstractInsnNode","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:opcode","name":"AbstractInsnNode","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Constructs a new {@link AbstractInsnNode}.\n\n @param opcode\n            the opcode of the instruction to be constructed.\n","return_type":null}],"methods":[{"parameters":null,"name":"getOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the opcode of this instruction.\n\n @return the opcode of this instruction.\n","return_type":"int"},{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the type of this instruction.\n\n @return the type of this instruction, i.e. one the constants defined in\n         this class.\n","return_type":"int"},{"parameters":null,"name":"getPrevious","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the previous instruction in the list to which this instruction\n belongs, if any.\n\n @return the previous instruction in the list to which this instruction\n         belongs, if any. May be <tt>null</tt>.\n","return_type":"AbstractInsnNode"},{"parameters":null,"name":"getNext","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the next instruction in the list to which this instruction\n belongs, if any.\n\n @return the next instruction in the list to which this instruction\n         belongs, if any. May be <tt>null</tt>.\n","return_type":"AbstractInsnNode"},{"parameters":"MethodVisitor:cv","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given code visitor visit this instruction.\n\n @param cv\n            a code visitor.\n","return_type":"void"},{"parameters":"MethodVisitor:mv","name":"acceptAnnotations","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" Makes the given visitor visit the annotations of this instruction.\n\n @param mv\n            a method visitor.\n","return_type":"void"},{"parameters":"java.util.Map:labels","name":"clone","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns a copy of this instruction.\n\n @param labels\n            a map from LabelNodes to cloned LabelNodes.\n @return a copy of this instruction. The returned instruction does not\n         belong to any {@link InsnList}.\n","return_type":"AbstractInsnNode"},{"parameters":"LabelNode:label,java.util.Map:map","name":"clone","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the clone of the given label.\n\n @param label\n            a label.\n @param map\n            a map from LabelNodes to cloned LabelNodes.\n @return the clone of the given label.\n","return_type":"LabelNode"},{"parameters":"java.util.List:labels,java.util.Map:map","name":"clone","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Returns the clones of the given labels.\n\n @param labels\n            a list of labels.\n @param map\n            a map from LabelNodes to cloned LabelNodes.\n @return the clones of the given labels.\n","return_type":"LabelNode"},{"parameters":"AbstractInsnNode:insn","name":"cloneAnnotations","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" Clones the annotations of the given instruction into this instruction.\n\n @param insn\n            the source instruction.\n @return this instruction.\n","return_type":"AbstractInsnNode"}],"fields":[{"parameters":null,"name":"INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link InsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"INT_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link IntInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"VAR_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link VarInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"TYPE_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link TypeInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"FIELD_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link FieldInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"METHOD_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link MethodInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"INVOKE_DYNAMIC_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link InvokeDynamicInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"JUMP_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link JumpInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"LABEL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link LabelNode} \"instructions\".\n","return_type":null},{"parameters":null,"name":"LDC_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link LdcInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"IINC_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link IincInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"TABLESWITCH_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link TableSwitchInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"LOOKUPSWITCH_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link LookupSwitchInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"MULTIANEWARRAY_INSN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link MultiANewArrayInsnNode} instructions.\n","return_type":null},{"parameters":null,"name":"FRAME","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link FrameNode} \"instructions\".\n","return_type":null},{"parameters":null,"name":"LINE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree","description":" The type of {@link LineNumberNode} \"instructions\".\n","return_type":null},{"parameters":null,"name":"opcode","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The opcode of this instruction.\n","return_type":null},{"parameters":null,"name":"visibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime visible type annotations of this instruction. This field is\n only used for real instructions (i.e. not for labels, frames, or line\n number nodes). This list is a list of {@link TypeAnnotationNode} objects.\n May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label visible\n","return_type":null},{"parameters":null,"name":"invisibleTypeAnnotations","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" The runtime invisible type annotations of this instruction. This field is\n only used for real instructions (i.e. not for labels, frames, or line\n number nodes). This list is a list of {@link TypeAnnotationNode} objects.\n May be <tt>null</tt>.\n\n @associates jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode\n @label invisible\n","return_type":null},{"parameters":null,"name":"prev","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Previous instruction in the list to which this instruction belongs.\n","return_type":null},{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Next instruction in the list to which this instruction belongs.\n","return_type":null},{"parameters":null,"name":"index","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" Index of this instruction in the list to which it belongs. The value of\n this field is correct only when {@link InsnList#cache} is not null. A\n value of -1 indicates that this instruction does not belong to any\n {@link InsnList}.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree","description":" A node that represents a bytecode instruction. <i>An instruction can appear\n at most once in at most one {@link InsnList} at a time</i>.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Value","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":null,"name":"getSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the size of this value in words.\n\n @return either 1 or 2.\n","return_type":"int"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" An immutable symbolic value for semantic interpretation of bytecode.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Subroutine","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Subroutine","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"LabelNode:start,int:maxLocals,JumpInsnNode:caller","name":"Subroutine","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":null,"name":"copy","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Subroutine"},{"parameters":"Subroutine:subroutine","name":"merge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"}],"fields":[{"parameters":null,"name":"start","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"access","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"callers","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" A method subroutine (corresponds to a JSR instruction).\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SourceValue","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:size","name":"SourceValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"int:size,AbstractInsnNode:insn","name":"SourceValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"int:size,java.util.Set:insns","name":"SourceValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":null,"name":"getSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"int"},{"parameters":"Object:value","name":"equals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":null,"name":"hashCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"int"}],"fields":[{"parameters":null,"name":"size","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The size of this value.\n","return_type":null},{"parameters":null,"name":"insns","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The instructions that can produce this value. For example, for the Java\n code below, the instructions that can produce the value of <tt>i</tt> at\n line 5 are the txo ISTORE instructions at line 1 and 3:\n\n <pre>\n 1: i = 0;\n 2: if (...) {\n 3:   i = 1;\n 4: }\n 5: return i;\n </pre>\n\n This field is a set of {@link AbstractInsnNode} objects.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" A {@link Value} that is represented by its type in a two types type system.\n This type system distinguishes the ONEWORD and TWOWORDS types.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SourceInterpreter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SourceInterpreter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"int:api","name":"SourceInterpreter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":"Type:type","name":"newValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"},{"parameters":"AbstractInsnNode:insn","name":"newOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"},{"parameters":"AbstractInsnNode:insn,SourceValue:value","name":"copyOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"},{"parameters":"AbstractInsnNode:insn,SourceValue:value","name":"unaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"},{"parameters":"AbstractInsnNode:insn,SourceValue:value1,SourceValue:value2","name":"binaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"},{"parameters":"AbstractInsnNode:insn,SourceValue:value1,SourceValue:value2,SourceValue:value3","name":"ternaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"},{"parameters":"AbstractInsnNode:insn,java.util.List:values","name":"naryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"},{"parameters":"AbstractInsnNode:insn,SourceValue:value,SourceValue:expected","name":"returnOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"},{"parameters":"SourceValue:d,SourceValue:w","name":"merge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"SourceValue"}],"fields":[],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" An {@link Interpreter} for {@link SourceValue} values.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SmallSet","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"Object:e1,Object:e2","name":"SmallSet","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":null,"name":"emptySet","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Set"},{"parameters":null,"name":"iterator","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Iterator"},{"parameters":null,"name":"size","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"int"},{"parameters":null,"name":"hasNext","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":null,"name":"next","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Object"},{"parameters":null,"name":"remove","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"},{"parameters":"jdk.internal.org.objectweb.asm.tree.analysis.SmallSet:s","name":"union","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Set"}],"fields":[{"parameters":null,"name":"e1","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"e2","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" A set of at most two elements.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SimpleVerifier","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SimpleVerifier","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new {@link SimpleVerifier}.\n","return_type":null},{"parameters":"Type:currentClass,Type:currentSuperClass,boolean:isInterface","name":"SimpleVerifier","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new {@link SimpleVerifier} to verify a specific class. This\n class will not be loaded into the JVM since it may be incorrect.\n\n @param currentClass\n            the class that is verified.\n @param currentSuperClass\n            the super class of the class that is verified.\n @param isInterface\n            if the class that is verified is an interface.\n","return_type":null},{"parameters":"Type:currentClass,Type:currentSuperClass,java.util.List:currentClassInterfaces,boolean:isInterface","name":"SimpleVerifier","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new {@link SimpleVerifier} to verify a specific class. This\n class will not be loaded into the JVM since it may be incorrect.\n\n @param currentClass\n            the class that is verified.\n @param currentSuperClass\n            the super class of the class that is verified.\n @param currentClassInterfaces\n            the interfaces implemented by the class that is verified.\n @param isInterface\n            if the class that is verified is an interface.\n","return_type":null},{"parameters":"int:api,Type:currentClass,Type:currentSuperClass,java.util.List:currentClassInterfaces,boolean:isInterface","name":"SimpleVerifier","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":"ClassLoader:loader","name":"setClassLoader","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Set the <code>ClassLoader</code> which will be used to load referenced\n classes. This is useful if you are verifying multiple interdependent\n classes.\n\n @param loader\n            a <code>ClassLoader</code> to use\n","return_type":"void"},{"parameters":"Type:type","name":"newValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"BasicValue:value","name":"isArrayValue","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":"BasicValue:objectArrayValue","name":"getElementValue","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"BasicValue:value,BasicValue:expected","name":"isSubTypeOf","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":"BasicValue:v,BasicValue:w","name":"merge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"Type:t","name":"isInterface","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":"Type:t","name":"getSuperClass","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Type"},{"parameters":"Type:t,Type:u","name":"isAssignableFrom","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":"Type:t","name":"getClass","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Class"}],"fields":[{"parameters":null,"name":"currentClass","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The class that is verified.\n","return_type":null},{"parameters":null,"name":"currentSuperClass","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The super class of the class that is verified.\n","return_type":null},{"parameters":null,"name":"currentClassInterfaces","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The interfaces implemented by the class that is verified.\n","return_type":null},{"parameters":null,"name":"isInterface","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" If the class that is verified is an interface.\n","return_type":null},{"parameters":null,"name":"loader","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The loader to use for referenced classes.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" An extended {@link BasicVerifier} that performs more precise verifications.\n This verifier computes exact class types, instead of using a single \"object\n reference\" type (as done in the {@link BasicVerifier}).\n\n @author Eric Bruneton\n @author Bing Ran\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Interpreter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api","name":"Interpreter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":"Type:type","name":"newValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Creates a new value that represents the given type.\n\n Called for method parameters (including <code>this</code>), exception\n handler variable and with <code>null</code> type for variables reserved\n by long and double types.\n\n @param type\n            a primitive or reference type, or <tt>null</tt> to represent\n            an uninitialized value.\n @return a value that represents the given type. The size of the returned\n         value must be equal to the size of the given type.\n","return_type":"Value"},{"parameters":"AbstractInsnNode:insn","name":"newOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Interprets a bytecode instruction without arguments. This method is\n called for the following opcodes:\n\n ACONST_NULL, ICONST_M1, ICONST_0, ICONST_1, ICONST_2, ICONST_3, ICONST_4,\n ICONST_5, LCONST_0, LCONST_1, FCONST_0, FCONST_1, FCONST_2, DCONST_0,\n DCONST_1, BIPUSH, SIPUSH, LDC, JSR, GETSTATIC, NEW\n\n @param insn\n            the bytecode instruction to be interpreted.\n @return the result of the interpretation of the given instruction.\n @throws AnalyzerException\n             if an error occured during the interpretation.\n","return_type":"Value"},{"parameters":"AbstractInsnNode:insn,Value:value","name":"copyOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Interprets a bytecode instruction that moves a value on the stack or to\n or from local variables. This method is called for the following opcodes:\n\n ILOAD, LLOAD, FLOAD, DLOAD, ALOAD, ISTORE, LSTORE, FSTORE, DSTORE,\n ASTORE, DUP, DUP_X1, DUP_X2, DUP2, DUP2_X1, DUP2_X2, SWAP\n\n @param insn\n            the bytecode instruction to be interpreted.\n @param value\n            the value that must be moved by the instruction.\n @return the result of the interpretation of the given instruction. The\n         returned value must be <tt>equal</tt> to the given value.\n @throws AnalyzerException\n             if an error occured during the interpretation.\n","return_type":"Value"},{"parameters":"AbstractInsnNode:insn,Value:value","name":"unaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Interprets a bytecode instruction with a single argument. This method is\n called for the following opcodes:\n\n INEG, LNEG, FNEG, DNEG, IINC, I2L, I2F, I2D, L2I, L2F, L2D, F2I, F2L,\n F2D, D2I, D2L, D2F, I2B, I2C, I2S, IFEQ, IFNE, IFLT, IFGE, IFGT, IFLE,\n TABLESWITCH, LOOKUPSWITCH, IRETURN, LRETURN, FRETURN, DRETURN, ARETURN,\n PUTSTATIC, GETFIELD, NEWARRAY, ANEWARRAY, ARRAYLENGTH, ATHROW, CHECKCAST,\n INSTANCEOF, MONITORENTER, MONITOREXIT, IFNULL, IFNONNULL\n\n @param insn\n            the bytecode instruction to be interpreted.\n @param value\n            the argument of the instruction to be interpreted.\n @return the result of the interpretation of the given instruction.\n @throws AnalyzerException\n             if an error occured during the interpretation.\n","return_type":"Value"},{"parameters":"AbstractInsnNode:insn,Value:value1,Value:value2","name":"binaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Interprets a bytecode instruction with two arguments. This method is\n called for the following opcodes:\n\n IALOAD, LALOAD, FALOAD, DALOAD, AALOAD, BALOAD, CALOAD, SALOAD, IADD,\n LADD, FADD, DADD, ISUB, LSUB, FSUB, DSUB, IMUL, LMUL, FMUL, DMUL, IDIV,\n LDIV, FDIV, DDIV, IREM, LREM, FREM, DREM, ISHL, LSHL, ISHR, LSHR, IUSHR,\n LUSHR, IAND, LAND, IOR, LOR, IXOR, LXOR, LCMP, FCMPL, FCMPG, DCMPL,\n DCMPG, IF_ICMPEQ, IF_ICMPNE, IF_ICMPLT, IF_ICMPGE, IF_ICMPGT, IF_ICMPLE,\n IF_ACMPEQ, IF_ACMPNE, PUTFIELD\n\n @param insn\n            the bytecode instruction to be interpreted.\n @param value1\n            the first argument of the instruction to be interpreted.\n @param value2\n            the second argument of the instruction to be interpreted.\n @return the result of the interpretation of the given instruction.\n @throws AnalyzerException\n             if an error occured during the interpretation.\n","return_type":"Value"},{"parameters":"AbstractInsnNode:insn,Value:value1,Value:value2,Value:value3","name":"ternaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Interprets a bytecode instruction with three arguments. This method is\n called for the following opcodes:\n\n IASTORE, LASTORE, FASTORE, DASTORE, AASTORE, BASTORE, CASTORE, SASTORE\n\n @param insn\n            the bytecode instruction to be interpreted.\n @param value1\n            the first argument of the instruction to be interpreted.\n @param value2\n            the second argument of the instruction to be interpreted.\n @param value3\n            the third argument of the instruction to be interpreted.\n @return the result of the interpretation of the given instruction.\n @throws AnalyzerException\n             if an error occured during the interpretation.\n","return_type":"Value"},{"parameters":"AbstractInsnNode:insn,java.util.List:values","name":"naryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Interprets a bytecode instruction with a variable number of arguments.\n This method is called for the following opcodes:\n\n INVOKEVIRTUAL, INVOKESPECIAL, INVOKESTATIC, INVOKEINTERFACE,\n MULTIANEWARRAY and INVOKEDYNAMIC\n\n @param insn\n            the bytecode instruction to be interpreted.\n @param values\n            the arguments of the instruction to be interpreted.\n @return the result of the interpretation of the given instruction.\n @throws AnalyzerException\n             if an error occured during the interpretation.\n","return_type":"Value"},{"parameters":"AbstractInsnNode:insn,Value:value,Value:expected","name":"returnOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Interprets a bytecode return instruction. This method is called for the\n following opcodes:\n\n IRETURN, LRETURN, FRETURN, DRETURN, ARETURN\n\n @param insn\n            the bytecode instruction to be interpreted.\n @param value\n            the argument of the instruction to be interpreted.\n @param expected\n            the expected return type of the analyzed method.\n @throws AnalyzerException\n             if an error occured during the interpretation.\n","return_type":"void"},{"parameters":"Value:v,Value:w","name":"merge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Merges two values. The merge operation must return a value that\n represents both values (for instance, if the two values are two types,\n the merged value must be a common super type of the two types. If the two\n values are integer intervals, the merged value must be an interval that\n contains the previous ones. Likewise for other types of values).\n\n @param v\n            a value.\n @param w\n            another value.\n @return the merged value. If the merged value is equal to <tt>v</tt>,\n         this method <i>must</i> return <tt>v</tt>.\n","return_type":"Value"}],"fields":[{"parameters":null,"name":"api","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" A semantic bytecode interpreter. More precisely, this interpreter only\n manages the computation of values from other values: it does not manage the\n transfer of values to or from the stack, and to or from the local variables.\n This separation allows a generic bytecode {@link Analyzer} to work with\n various semantic interpreters, without needing to duplicate the code to\n simulate the transfer of values.\n\n @param <V>\n            type of the Value used for the analysis.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Frame","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:nLocals,int:nStack","name":"Frame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new frame with the given size.\n\n @param nLocals\n            the maximum number of local variables of the frame.\n @param nStack\n            the maximum stack size of the frame.\n","return_type":null},{"parameters":"jdk.internal.org.objectweb.asm.tree.analysis.Frame:src","name":"Frame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new frame that is identical to the given frame.\n\n @param src\n            a frame.\n","return_type":null}],"methods":[{"parameters":"jdk.internal.org.objectweb.asm.tree.analysis.Frame:src","name":"init","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Copies the state of the given frame into this frame.\n\n @param src\n            a frame.\n @return this frame.\n","return_type":"Frame"},{"parameters":"Value:v","name":"setReturn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Sets the expected return type of the analyzed method.\n\n @param v\n            the expected return type of the analyzed method, or\n            <tt>null</tt> if the method returns void.\n","return_type":"void"},{"parameters":null,"name":"getLocals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the maximum number of local variables of this frame.\n\n @return the maximum number of local variables of this frame.\n","return_type":"int"},{"parameters":null,"name":"getMaxStackSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the maximum stack size of this frame.\n\n @return the maximum stack size of this frame.\n","return_type":"int"},{"parameters":"int:i","name":"getLocal","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the value of the given local variable.\n\n @param i\n            a local variable index.\n @return the value of the given local variable.\n @throws IndexOutOfBoundsException\n             if the variable does not exist.\n","return_type":"Value"},{"parameters":"int:i,Value:value","name":"setLocal","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Sets the value of the given local variable.\n\n @param i\n            a local variable index.\n @param value\n            the new value of this local variable.\n @throws IndexOutOfBoundsException\n             if the variable does not exist.\n","return_type":"void"},{"parameters":null,"name":"getStackSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the number of values in the operand stack of this frame. Long and\n double values are treated as single values.\n\n @return the number of values in the operand stack of this frame.\n","return_type":"int"},{"parameters":"int:i","name":"getStack","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the value of the given operand stack slot.\n\n @param i\n            the index of an operand stack slot.\n @return the value of the given operand stack slot.\n @throws IndexOutOfBoundsException\n             if the operand stack slot does not exist.\n","return_type":"Value"},{"parameters":null,"name":"clearStack","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Clears the operand stack of this frame.\n","return_type":"void"},{"parameters":null,"name":"pop","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Pops a value from the operand stack of this frame.\n\n @return the value that has been popped from the stack.\n @throws IndexOutOfBoundsException\n             if the operand stack is empty.\n","return_type":"Value"},{"parameters":"Value:value","name":"push","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Pushes a value into the operand stack of this frame.\n\n @param value\n            the value that must be pushed into the stack.\n @throws IndexOutOfBoundsException\n             if the operand stack is full.\n","return_type":"void"},{"parameters":"AbstractInsnNode:insn,jdk.internal.org.objectweb.asm.tree.analysis.Interpreter:interpreter","name":"execute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"},{"parameters":"jdk.internal.org.objectweb.asm.tree.analysis.Frame:frame,jdk.internal.org.objectweb.asm.tree.analysis.Interpreter:interpreter","name":"merge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Merges this frame with the given frame.\n\n @param frame\n            a frame.\n @param interpreter\n            the interpreter used to merge values.\n @return <tt>true</tt> if this frame has been changed as a result of the\n         merge operation, or <tt>false</tt> otherwise.\n @throws AnalyzerException\n             if the frames have incompatible sizes.\n","return_type":"boolean"},{"parameters":"jdk.internal.org.objectweb.asm.tree.analysis.Frame:frame,boolean[]:access","name":"merge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Merges this frame with the given frame (case of a RET instruction).\n\n @param frame\n            a frame\n @param access\n            the local variables that have been accessed by the subroutine\n            to which the RET instruction corresponds.\n @return <tt>true</tt> if this frame has been changed as a result of the\n         merge operation, or <tt>false</tt> otherwise.\n","return_type":"boolean"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns a string representation of this frame.\n\n @return a string representation of this frame.\n","return_type":"String"}],"fields":[{"parameters":null,"name":"returnValue","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The expected return type of the analyzed method, or <tt>null</tt> if the\n method returns void.\n","return_type":null},{"parameters":null,"name":"values","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The local variables and operand stack of this frame.\n","return_type":null},{"parameters":null,"name":"locals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The number of local variables of this frame.\n","return_type":null},{"parameters":null,"name":"top","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" The number of elements in the operand stack.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" A symbolic execution stack frame. A stack frame contains a set of local\n variable slots, and an operand stack. Warning: long and double values are\n represented by <i>two</i> slots in local variables, and by <i>one</i> slot in\n the operand stack.\n\n @param <V>\n            type of the Value used for the analysis.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"BasicVerifier","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"BasicVerifier","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"int:api","name":"BasicVerifier","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":"AbstractInsnNode:insn,BasicValue:value","name":"copyOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value","name":"unaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value1,BasicValue:value2","name":"binaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value1,BasicValue:value2,BasicValue:value3","name":"ternaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,java.util.List:values","name":"naryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value,BasicValue:expected","name":"returnOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"},{"parameters":"BasicValue:value","name":"isArrayValue","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":"BasicValue:objectArrayValue","name":"getElementValue","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"BasicValue:value,BasicValue:expected","name":"isSubTypeOf","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"}],"fields":[],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" An extended {@link BasicInterpreter} that checks that bytecode instructions\n are correctly used.\n\n @author Eric Bruneton\n @author Bing Ran\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"BasicValue","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"Type:type","name":"BasicValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":null,"name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"Type"},{"parameters":null,"name":"getSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"int"},{"parameters":null,"name":"isReference","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":"Object:value","name":"equals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"boolean"},{"parameters":null,"name":"hashCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"int"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"String"}],"fields":[{"parameters":null,"name":"UNINITIALIZED_VALUE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"INT_VALUE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"FLOAT_VALUE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"LONG_VALUE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"DOUBLE_VALUE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"REFERENCE_VALUE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"RETURNADDRESS_VALUE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"type","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" A {@link Value} that is represented by its type in a seven types type system.\n This type system distinguishes the UNINITIALZED, INT, FLOAT, LONG, DOUBLE,\n REFERENCE and RETURNADDRESS types.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"BasicInterpreter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"BasicInterpreter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"int:api","name":"BasicInterpreter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[{"parameters":"Type:type","name":"newValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn","name":"newOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value","name":"copyOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value","name":"unaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value1,BasicValue:value2","name":"binaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value1,BasicValue:value2,BasicValue:value3","name":"ternaryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,java.util.List:values","name":"naryOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"},{"parameters":"AbstractInsnNode:insn,BasicValue:value,BasicValue:expected","name":"returnOperation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"},{"parameters":"BasicValue:v,BasicValue:w","name":"merge","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"BasicValue"}],"fields":[],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" An {@link Interpreter} for {@link BasicValue} values.\n\n @author Eric Bruneton\n @author Bing Ran\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"AnalyzerException","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"AbstractInsnNode:node,String:msg","name":"AnalyzerException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"AbstractInsnNode:node,String:msg,Throwable:exception","name":"AnalyzerException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":"AbstractInsnNode:node,String:msg,Object:expected,Value:encountered","name":"AnalyzerException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"node","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Thrown if a problem occurs during the analysis of a method.\n\n @author Bing Ran\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Analyzer","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"jdk.internal.org.objectweb.asm.tree.analysis.Interpreter:interpreter","name":"Analyzer","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new {@link Analyzer}.\n\n @param interpreter\n            the interpreter to be used to symbolically interpret the\n            bytecode instructions.\n","return_type":null}],"methods":[{"parameters":"String:owner,MethodNode:m","name":"analyze","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Analyzes the given method.\n\n @param owner\n            the internal name of the class to which the method belongs.\n @param m\n            the method to be analyzed.\n @return the symbolic state of the execution stack frame at each bytecode\n         instruction of the method. The size of the returned array is\n         equal to the number of instructions (and labels) of the method. A\n         given frame is <tt>null</tt> if and only if the corresponding\n         instruction cannot be reached (dead code).\n @throws AnalyzerException\n             if a problem occurs during the analysis.\n","return_type":"Frame"},{"parameters":"int:insn,Subroutine:sub,java.util.List:calls","name":"findSubroutine","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"},{"parameters":null,"name":"getFrames","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the symbolic stack frame for each instruction of the last\n recently analyzed method.\n\n @return the symbolic state of the execution stack frame at each bytecode\n         instruction of the method. The size of the returned array is\n         equal to the number of instructions (and labels) of the method. A\n         given frame is <tt>null</tt> if the corresponding instruction\n         cannot be reached, or if an error occured during the analysis of\n         the method.\n","return_type":"Frame"},{"parameters":"int:insn","name":"getHandlers","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Returns the exception handlers for the given instruction.\n\n @param insn\n            the index of an instruction of the last recently analyzed\n            method.\n @return a list of {@link TryCatchBlockNode} objects.\n","return_type":"List"},{"parameters":"String:owner,MethodNode:m","name":"init","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Initializes this analyzer. This method is called just before the\n execution of control flow analysis loop in #analyze. The default\n implementation of this method does nothing.\n\n @param owner\n            the internal name of the class to which the method belongs.\n @param m\n            the method to be analyzed.\n @throws AnalyzerException\n             if a problem occurs.\n","return_type":"void"},{"parameters":"int:nLocals,int:nStack","name":"newFrame","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new frame with the given size.\n\n @param nLocals\n            the maximum number of local variables of the frame.\n @param nStack\n            the maximum stack size of the frame.\n @return the created frame.\n","return_type":"Frame"},{"parameters":"jdk.internal.org.objectweb.asm.tree.analysis.Frame:src","name":"newFrame","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Constructs a new frame that is identical to the given frame.\n\n @param src\n            a frame.\n @return the created frame.\n","return_type":"Frame"},{"parameters":"int:insn,int:successor","name":"newControlFlowEdge","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Creates a control flow graph edge. The default implementation of this\n method does nothing. It can be overriden in order to construct the\n control flow graph of a method (this method is called by the\n {@link #analyze analyze} method during its visit of the method's code).\n\n @param insn\n            an instruction index.\n @param successor\n            index of a successor instruction.\n","return_type":"void"},{"parameters":"int:insn,int:successor","name":"newControlFlowExceptionEdge","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Creates a control flow graph edge corresponding to an exception handler.\n The default implementation of this method does nothing. It can be\n overridden in order to construct the control flow graph of a method (this\n method is called by the {@link #analyze analyze} method during its visit\n of the method's code).\n\n @param insn\n            an instruction index.\n @param successor\n            index of a successor instruction.\n @return true if this edge must be considered in the data flow analysis\n         performed by this analyzer, or false otherwise. The default\n         implementation of this method always returns true.\n","return_type":"boolean"},{"parameters":"int:insn,TryCatchBlockNode:tcb","name":"newControlFlowExceptionEdge","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" Creates a control flow graph edge corresponding to an exception handler.\n The default implementation of this method delegates to\n {@link #newControlFlowExceptionEdge(int, int)\n newControlFlowExceptionEdge(int, int)}. It can be overridden in order to\n construct the control flow graph of a method (this method is called by\n the {@link #analyze analyze} method during its visit of the method's\n code).\n\n @param insn\n            an instruction index.\n @param tcb\n            TryCatchBlockNode corresponding to this edge.\n @return true if this edge must be considered in the data flow analysis\n         performed by this analyzer, or false otherwise. The default\n         implementation of this method delegates to\n         {@link #newControlFlowExceptionEdge(int, int)\n         newControlFlowExceptionEdge(int, int)}.\n","return_type":"boolean"},{"parameters":"int:insn,jdk.internal.org.objectweb.asm.tree.analysis.Frame:frame,Subroutine:subroutine","name":"merge","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"},{"parameters":"int:insn,jdk.internal.org.objectweb.asm.tree.analysis.Frame:beforeJSR,jdk.internal.org.objectweb.asm.tree.analysis.Frame:afterRET,Subroutine:subroutineBeforeJSR,boolean[]:access","name":"merge","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"interpreter","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"n","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"insns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"handlers","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"frames","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"subroutines","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"queued","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"queue","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null},{"parameters":null,"name":"top","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.tree.analysis","description":" A semantic bytecode analyzer. <i>This class does not fully check that JSR and\n RET instructions are valid.</i>\n\n @param <V>\n            type of the Value used for the analysis.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TraceSignatureVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:access","name":"TraceSignatureVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":"StringBuffer:buf","name":"TraceSignatureVisitor","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"methods":[{"parameters":"String:name","name":"visitFormalTypeParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitClassBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterfaceBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitSuperclass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterface","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitParameterType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitExceptionType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":"char:descriptor","name":"visitBaseType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name","name":"visitTypeVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitArrayType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":"String:name","name":"visitClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name","name":"visitInnerClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"char:tag","name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"getDeclaration","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"String"},{"parameters":null,"name":"getReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"String"},{"parameters":null,"name":"getExceptions","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"String"},{"parameters":null,"name":"endFormals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"startType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"endType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"declaration","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"isInterface","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"seenFormalParameter","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"seenInterfaceBound","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"seenParameter","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"seenInterface","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"returnType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"exceptions","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"argumentStack","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Stack used to keep track of class types that have arguments. Each element\n of this stack is a boolean encoded in one bit. The top of the stack is\n the lowest order bit. Pushing false = *2, pushing true = *2+1, popping =\n /2.\n","return_type":null},{"parameters":null,"name":"arrayStack","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Stack used to keep track of array class types. Each element of this stack\n is a boolean encoded in one bit. The top of the stack is the lowest order\n bit. Pushing false = *2, pushing true = *2+1, popping = /2.\n","return_type":null},{"parameters":null,"name":"separator","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link SignatureVisitor} that prints a disassembled view of the signature\n it visits.\n\n @author Eugene Kuleshov\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TraceMethodVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"Printer:p","name":"TraceMethodVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":"MethodVisitor:mv,Printer:p","name":"TraceMethodVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"methods":[{"parameters":"String:name,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"p","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link MethodVisitor} that prints the methods it visits with a\n {@link Printer}.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TraceFieldVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"Printer:p","name":"TraceFieldVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":"FieldVisitor:fv,Printer:p","name":"TraceFieldVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"methods":[{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"p","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link FieldVisitor} that prints the fields it visits with a\n {@link Printer}.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TraceClassVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"PrintWriter:pw","name":"TraceClassVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link TraceClassVisitor}.\n\n @param pw\n            the print writer to be used to print the class.\n","return_type":null},{"parameters":"ClassVisitor:cv,PrintWriter:pw","name":"TraceClassVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link TraceClassVisitor}.\n\n @param cv\n            the {@link ClassVisitor} to which this visitor delegates\n            calls. May be <tt>null</tt>.\n @param pw\n            the print writer to be used to print the class.\n","return_type":null},{"parameters":"ClassVisitor:cv,Printer:p,PrintWriter:pw","name":"TraceClassVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link TraceClassVisitor}.\n\n @param cv\n            the {@link ClassVisitor} to which this visitor delegates\n            calls. May be <tt>null</tt>.\n @param p\n            the object that actually converts visit events into text.\n @param pw\n            the print writer to be used to print the class. May be null if\n            you simply want to use the result via\n            {@link Printer#getText()}, instead of printing it.\n","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:file,String:debug","name":"visitSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"FieldVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"MethodVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"pw","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The print writer to be used to print the class. May be null.\n","return_type":null},{"parameters":null,"name":"p","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The object that actually converts visit events into text.\n","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link ClassVisitor} that prints the classes it visits with a\n {@link Printer}. This class visitor can be used in the middle of a class\n visitor chain to trace the class that is visited at a given point in this\n chain. This may be useful for debugging purposes.\n <p>\n The trace printed when visiting the <tt>Hello</tt> class is the following:\n <p>\n <blockquote>\n\n <pre>\n // class version 49.0 (49) // access flags 0x21 public class Hello {\n\n // compiled from: Hello.java\n\n // access flags 0x1 public &lt;init&gt; ()V ALOAD 0 INVOKESPECIAL\n java/lang/Object &lt;init&gt; ()V RETURN MAXSTACK = 1 MAXLOCALS = 1\n\n // access flags 0x9 public static main ([Ljava/lang/String;)V GETSTATIC\n java/lang/System out Ljava/io/PrintStream; LDC &quot;hello&quot;\n INVOKEVIRTUAL java/io/PrintStream println (Ljava/lang/String;)V RETURN\n MAXSTACK = 2 MAXLOCALS = 1 }\n </pre>\n\n </blockquote> where <tt>Hello</tt> is defined by:\n <p>\n <blockquote>\n\n <pre>\n public class Hello {\n\n     public static void main(String[] args) {\n         System.out.println(&quot;hello&quot;);\n     }\n }\n </pre>\n\n </blockquote>\n\n @author Eric Bruneton\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TraceAnnotationVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"Printer:p","name":"TraceAnnotationVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":"AnnotationVisitor:av,Printer:p","name":"TraceAnnotationVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"methods":[{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"p","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" An {@link AnnotationVisitor} that prints the annotations it visits with a\n {@link Printer}.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Textifier","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Textifier","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link Textifier}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the {@link #Textifier(int)}\n version.\n\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api","name":"Textifier","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link Textifier}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null}],"methods":[{"parameters":"java.lang.String[]:args","name":"main","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints a disassembled view of the given class to the standard output.\n <p>\n Usage: Textifier [-debug] &lt;binary class name or class file name &gt;\n\n @param args\n            the command line arguments.\n\n @throws Exception\n             if the class cannot be found, or if an IO exception occurs.\n","return_type":"void"},{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:file,String:debug","name":"visitSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitClassAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitClassTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Printer"},{"parameters":"Attribute:attr","name":"visitClassAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":null,"name":"visitClassEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:value","name":"visitInt","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"long:value","name":"visitLong","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"float:value","name":"visitFloat","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"double:value","name":"visitDouble","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"char:value","name":"visitChar","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"short:value","name":"visitShort","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"byte:value","name":"visitByte","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"boolean:value","name":"visitBoolean","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:value","name":"visitString","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Type:value","name":"visitType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":null,"name":"visitAnnotationEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitFieldAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitFieldTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Printer"},{"parameters":"Attribute:attr","name":"visitFieldAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitFieldEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":"String:desc,boolean:visible","name":"visitMethodAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitMethodTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Printer"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Textifier"},{"parameters":"Attribute:attr","name":"visitMethodAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Printer"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Printer"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Printer"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitMethodEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints a disassembled view of the given annotation.\n\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values.\n","return_type":"Textifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints a disassembled view of the given type annotation.\n\n @param typeRef\n            a reference to the annotated type. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values.\n","return_type":"Textifier"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints a disassembled view of the given attribute.\n\n @param attr\n            an attribute.\n","return_type":"void"},{"parameters":null,"name":"createTextifier","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Creates a new TraceVisitor instance.\n\n @return a new TraceVisitor.\n","return_type":"Textifier"},{"parameters":"int:type,String:desc","name":"appendDescriptor","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends an internal name, a type descriptor or a type signature to\n {@link #buf buf}.\n\n @param type\n            indicates if desc is an internal name, a field descriptor, a\n            method descriptor, a class signature, ...\n @param desc\n            an internal name, type descriptor, or type signature. May be\n            <tt>null</tt>.\n","return_type":"void"},{"parameters":"Label:l","name":"appendLabel","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends the name of the given label to {@link #buf buf}. Creates a new\n label name if the given label does not yet have one.\n\n @param l\n            a label.\n","return_type":"void"},{"parameters":"Handle:h","name":"appendHandle","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends the information about the given handle to {@link #buf buf}.\n\n @param h\n            a handle, non null.\n","return_type":"void"},{"parameters":"int:access","name":"appendAccess","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends a string representation of the given access modifiers to\n {@link #buf buf}.\n\n @param access\n            some access modifiers.\n","return_type":"void"},{"parameters":"int:i","name":"appendComa","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef","name":"appendTypeReference","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:n,java.lang.Object[]:o","name":"appendFrameTypes","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"INTERNAL_NAME","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for internal\n type names in bytecode notation.\n","return_type":null},{"parameters":null,"name":"FIELD_DESCRIPTOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for field\n descriptors, formatted in bytecode notation\n","return_type":null},{"parameters":null,"name":"FIELD_SIGNATURE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for field\n signatures, formatted in bytecode notation\n","return_type":null},{"parameters":null,"name":"METHOD_DESCRIPTOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for method\n descriptors, formatted in bytecode notation\n","return_type":null},{"parameters":null,"name":"METHOD_SIGNATURE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for method\n signatures, formatted in bytecode notation\n","return_type":null},{"parameters":null,"name":"CLASS_SIGNATURE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for class\n signatures, formatted in bytecode notation\n","return_type":null},{"parameters":null,"name":"TYPE_DECLARATION","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for field or\n method return value signatures, formatted in default Java notation\n (non-bytecode)\n","return_type":null},{"parameters":null,"name":"CLASS_DECLARATION","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for class\n signatures, formatted in default Java notation (non-bytecode)\n","return_type":null},{"parameters":null,"name":"PARAMETERS_DECLARATION","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for method\n parameter signatures, formatted in default Java notation (non-bytecode)\n","return_type":null},{"parameters":null,"name":"HANDLE_DESCRIPTOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Constant used in {@link #appendDescriptor appendDescriptor} for handle\n descriptors, formatted in bytecode notation\n","return_type":null},{"parameters":null,"name":"tab","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Tab for class members.\n","return_type":null},{"parameters":null,"name":"tab2","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Tab for bytecode instructions.\n","return_type":null},{"parameters":null,"name":"tab3","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Tab for table and lookup switch instructions.\n","return_type":null},{"parameters":null,"name":"ltab","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Tab for labels.\n","return_type":null},{"parameters":null,"name":"labelNames","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The label names. This map associate String values to Label keys.\n","return_type":null},{"parameters":null,"name":"access","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class access flags\n","return_type":null},{"parameters":null,"name":"valueNumber","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link Printer} that prints a disassembled view of the classes it visits.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Textifiable","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"StringBuffer:buf,java.util.Map:labelNames","name":"textify","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Build a human readable representation of this attribute.\n\n @param buf\n            a buffer used for printing Java code.\n @param labelNames\n            map of label instances to their names.\n","return_type":"void"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" An {@link jdk.internal.org.objectweb.asm.Attribute Attribute} that can print a readable\n representation of itself.\n\n Implementations should construct readable output from an attribute data\n structure. Such representation could be used in unit test assertions.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Printer","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api","name":"Printer","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link Printer}.\n","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class header. See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visit}.\n","return_type":"void"},{"parameters":"String:file,String:debug","name":"visitSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class source. See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitSource}.\n","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class outer class. See\n {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitOuterClass}.\n","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitClassAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class annotation. See\n {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitAnnotation}.\n","return_type":"Printer"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitClassTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class type annotation. See\n {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitTypeAnnotation}.\n","return_type":"Printer"},{"parameters":"Attribute:attr","name":"visitClassAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class attribute. See\n {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitAttribute}.\n","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class inner name. See\n {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitInnerClass}.\n","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class field. See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitField}.\n","return_type":"Printer"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class method. See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitMethod}.\n","return_type":"Printer"},{"parameters":null,"name":"visitClassEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Class end. See {@link jdk.internal.org.objectweb.asm.ClassVisitor#visitEnd}.\n","return_type":"void"},{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Annotation value. See {@link jdk.internal.org.objectweb.asm.AnnotationVisitor#visit}.\n","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Annotation enum value. See\n {@link jdk.internal.org.objectweb.asm.AnnotationVisitor#visitEnum}.\n","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Nested annotation value. See\n {@link jdk.internal.org.objectweb.asm.AnnotationVisitor#visitAnnotation}.\n","return_type":"Printer"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Annotation array value. See\n {@link jdk.internal.org.objectweb.asm.AnnotationVisitor#visitArray}.\n","return_type":"Printer"},{"parameters":null,"name":"visitAnnotationEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Annotation end. See {@link jdk.internal.org.objectweb.asm.AnnotationVisitor#visitEnd}.\n","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitFieldAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Field annotation. See\n {@link jdk.internal.org.objectweb.asm.FieldVisitor#visitAnnotation}.\n","return_type":"Printer"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitFieldTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Field type annotation. See\n {@link jdk.internal.org.objectweb.asm.FieldVisitor#visitTypeAnnotation}.\n","return_type":"Printer"},{"parameters":"Attribute:attr","name":"visitFieldAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Field attribute. See\n {@link jdk.internal.org.objectweb.asm.FieldVisitor#visitAttribute}.\n","return_type":"void"},{"parameters":null,"name":"visitFieldEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Field end. See {@link jdk.internal.org.objectweb.asm.FieldVisitor#visitEnd}.\n","return_type":"void"},{"parameters":"String:name,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method parameter. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitParameter(String, int)}.\n","return_type":"void"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method default annotation. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitAnnotationDefault}.\n","return_type":"Printer"},{"parameters":"String:desc,boolean:visible","name":"visitMethodAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method annotation. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitAnnotation}.\n","return_type":"Printer"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitMethodTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method type annotation. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitTypeAnnotation}.\n","return_type":"Printer"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method parameter annotation. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitParameterAnnotation}.\n","return_type":"Printer"},{"parameters":"Attribute:attr","name":"visitMethodAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method attribute. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitAttribute}.\n","return_type":"void"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method start. See {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitCode}.\n","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method stack frame. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitFrame}.\n","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitInsn}\n .\n","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitIntInsn}.\n","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitVarInsn}.\n","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitTypeInsn}.\n","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitFieldInsn}.\n","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitMethodInsn}.\n","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitMethodInsn}.\n","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitInvokeDynamicInsn}.\n","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitJumpInsn}.\n","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method label. See {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitLabel}.\n","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitLdcInsn}.\n","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitIincInsn}.\n","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitTableSwitchInsn}.\n","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitLookupSwitchInsn}.\n","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method instruction. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitMultiANewArrayInsn}.\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Instruction type annotation. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitInsnAnnotation}.\n","return_type":"Printer"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method exception handler. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitTryCatchBlock}.\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Try catch block type annotation. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitTryCatchAnnotation}.\n","return_type":"Printer"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method debug info. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitLocalVariable}.\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Local variable type annotation. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitTryCatchAnnotation}.\n","return_type":"Printer"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method debug info. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitLineNumber}.\n","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method max stack and max locals. See\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitMaxs}.\n","return_type":"void"},{"parameters":null,"name":"visitMethodEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Method end. See {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitEnd}.\n","return_type":"void"},{"parameters":null,"name":"getText","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Returns the text constructed by this visitor.\n\n @return the text constructed by this visitor.\n","return_type":"List"},{"parameters":"PrintWriter:pw","name":"print","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints the text constructed by this visitor.\n\n @param pw\n            the print writer to be used.\n","return_type":"void"},{"parameters":"StringBuffer:buf,String:s","name":"appendString","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends a quoted string to a given buffer.\n\n @param buf\n            the buffer where the string must be added.\n @param s\n            the string to be added.\n","return_type":"void"},{"parameters":"PrintWriter:pw,java.util.List:l","name":"printList","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints the given string tree.\n\n @param pw\n            the writer to be used to print the tree.\n @param l\n            a string tree, i.e., a string list that can contain other\n            string lists, and so on recursively.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"OPCODES","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The names of the Java Virtual Machine opcodes.\n","return_type":null},{"parameters":null,"name":"TYPES","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The names of the for <code>operand</code> parameter values of the\n {@link jdk.internal.org.objectweb.asm.MethodVisitor#visitIntInsn} method when\n <code>opcode</code> is <code>NEWARRAY</code>.\n","return_type":null},{"parameters":null,"name":"HANDLE_TAG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The names of the <code>tag</code> field values for\n {@link jdk.internal.org.objectweb.asm.Handle}.\n","return_type":null},{"parameters":null,"name":"api","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The ASM API version implemented by this class. The value of this field\n must be one of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":null,"name":"buf","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" A buffer that can be used to create strings.\n","return_type":null},{"parameters":null,"name":"text","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The text to be printed. Since the code of methods is not necessarily\n visited in sequential order, one method after the other, but can be\n interlaced (some instructions from method one, then some instructions\n from method two, then some instructions from method one again...), it is\n not possible to print the visited instructions directly to a sequential\n stream. A class is therefore printed in a two steps process: a string\n tree is constructed during the visit, and printed to a sequential stream\n at the end of the visit. This string tree is stored in this field, as a\n string list that can contain other string lists, which can themselves\n contain other string lists, and so on.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" An abstract converter from visit events to text.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"CheckSignatureAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:type,SignatureVisitor:sv","name":"CheckSignatureAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Creates a new {@link CheckSignatureAdapter} object. <i>Subclasses must\n not use this constructor</i>. Instead, they must use the\n {@link #CheckSignatureAdapter(int, int, SignatureVisitor)} version.\n\n @param type\n            the type of signature to be checked. See\n            {@link #CLASS_SIGNATURE}, {@link #METHOD_SIGNATURE} and\n            {@link #TYPE_SIGNATURE}.\n @param sv\n            the visitor to which this adapter must delegate calls. May be\n            <tt>null</tt>.\n","return_type":null},{"parameters":"int:api,int:type,SignatureVisitor:sv","name":"CheckSignatureAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Creates a new {@link CheckSignatureAdapter} object.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param type\n            the type of signature to be checked. See\n            {@link #CLASS_SIGNATURE}, {@link #METHOD_SIGNATURE} and\n            {@link #TYPE_SIGNATURE}.\n @param sv\n            the visitor to which this adapter must delegate calls. May be\n            <tt>null</tt>.\n","return_type":null}],"methods":[{"parameters":"String:name","name":"visitFormalTypeParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitClassBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterfaceBound","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitSuperclass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitInterface","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitParameterType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitExceptionType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":"char:descriptor","name":"visitBaseType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name","name":"visitTypeVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitArrayType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":"String:name","name":"visitClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name","name":"visitInnerClassType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"char:wildcard","name":"visitTypeArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"SignatureVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"CLASS_SIGNATURE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Type to be used to check class signatures. See\n {@link #CheckSignatureAdapter(int, SignatureVisitor)\n CheckSignatureAdapter}.\n","return_type":null},{"parameters":null,"name":"METHOD_SIGNATURE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Type to be used to check method signatures. See\n {@link #CheckSignatureAdapter(int, SignatureVisitor)\n CheckSignatureAdapter}.\n","return_type":null},{"parameters":null,"name":"TYPE_SIGNATURE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Type to be used to check type signatures.See\n {@link #CheckSignatureAdapter(int, SignatureVisitor)\n CheckSignatureAdapter}.\n","return_type":null},{"parameters":null,"name":"EMPTY","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"FORMAL","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"BOUND","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"SUPER","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"PARAM","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"RETURN","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"SIMPLE_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"CLASS_TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"END","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"type","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Type of the signature to be checked.\n","return_type":null},{"parameters":null,"name":"state","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" State of the automaton used to check the order of method calls.\n","return_type":null},{"parameters":null,"name":"canBeVoid","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the checked type signature can be 'V'.\n","return_type":null},{"parameters":null,"name":"sv","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The visitor to which this adapter must delegate calls. May be\n <tt>null</tt>.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link SignatureVisitor} that checks that its methods are properly used.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"CheckMethodAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"MethodVisitor:mv","name":"CheckMethodAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckMethodAdapter} object. This method adapter\n will not perform any data flow check (see\n {@link #CheckMethodAdapter(int,String,String,MethodVisitor,Map)}).\n <i>Subclasses must not use this constructor</i>. Instead, they must use\n the {@link #CheckMethodAdapter(int, MethodVisitor, Map)} version.\n\n @param mv\n            the method visitor to which this adapter must delegate calls.\n","return_type":null},{"parameters":"MethodVisitor:mv,java.util.Map:labels","name":"CheckMethodAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckMethodAdapter} object. This method adapter\n will not perform any data flow check (see\n {@link #CheckMethodAdapter(int,String,String,MethodVisitor,Map)}).\n <i>Subclasses must not use this constructor</i>. Instead, they must use\n the {@link #CheckMethodAdapter(int, MethodVisitor, Map)} version.\n\n @param mv\n            the method visitor to which this adapter must delegate calls.\n @param labels\n            a map of already visited labels (in other methods).\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,MethodVisitor:mv,java.util.Map:labels","name":"CheckMethodAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckMethodAdapter} object. This method adapter\n will not perform any data flow check (see\n {@link #CheckMethodAdapter(int,String,String,MethodVisitor,Map)}).\n\n @param mv\n            the method visitor to which this adapter must delegate calls.\n @param labels\n            a map of already visited labels (in other methods).\n","return_type":null},{"parameters":"int:access,String:name,String:desc,MethodVisitor:cmv,java.util.Map:labels","name":"CheckMethodAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckMethodAdapter} object. This method adapter\n will perform basic data flow checks. For instance in a method whose\n signature is <tt>void m ()</tt>, the invalid instruction IRETURN, or the\n invalid sequence IADD L2I will be detected.\n\n @param access\n            the method's access flags.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param cmv\n            the method visitor to which this adapter must delegate calls.\n @param labels\n            a map of already visited labels (in other methods).\n","return_type":null}],"methods":[{"parameters":"String:name,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"checkStartCode","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the visitCode method has been called.\n","return_type":"void"},{"parameters":null,"name":"checkEndCode","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the visitMaxs method has not been called.\n","return_type":"void"},{"parameters":null,"name":"checkEndMethod","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the visitEnd method has not been called.\n","return_type":"void"},{"parameters":"Object:value","name":"checkFrameValue","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a stack frame value.\n\n @param value\n            the value to be checked.\n","return_type":"void"},{"parameters":"int:opcode,int:type","name":"checkOpcode","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the type of the given opcode is equal to the given type.\n\n @param opcode\n            the opcode to be checked.\n @param type\n            the expected opcode type.\n","return_type":"void"},{"parameters":"int:value,String:msg","name":"checkSignedByte","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given value is a signed byte.\n\n @param value\n            the value to be checked.\n @param msg\n            an message to be used in case of error.\n","return_type":"void"},{"parameters":"int:value,String:msg","name":"checkSignedShort","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given value is a signed short.\n\n @param value\n            the value to be checked.\n @param msg\n            an message to be used in case of error.\n","return_type":"void"},{"parameters":"int:value,String:msg","name":"checkUnsignedShort","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given value is an unsigned short.\n\n @param value\n            the value to be checked.\n @param msg\n            an message to be used in case of error.\n","return_type":"void"},{"parameters":"Object:cst","name":"checkConstant","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given value is an {@link Integer}, a{@link Float}, a\n {@link Long}, a {@link Double} or a {@link String}.\n\n @param cst\n            the value to be checked.\n","return_type":"void"},{"parameters":"Object:cst","name":"checkLDCConstant","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:version,String:name,String:msg","name":"checkUnqualifiedName","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given string is a valid unqualified name.\n\n @param version\n            the class version.\n @param name\n            the string to be checked.\n @param msg\n            a message to be used in case of error.\n","return_type":"void"},{"parameters":"String:name,String:msg","name":"checkIdentifier","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given string is a valid Java identifier.\n\n @param name\n            the string to be checked.\n @param msg\n            a message to be used in case of error.\n","return_type":"void"},{"parameters":"String:name,int:start,int:end,String:msg","name":"checkIdentifier","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given substring is a valid Java identifier.\n\n @param name\n            the string to be checked.\n @param start\n            index of the first character of the identifier (inclusive).\n @param end\n            index of the last character of the identifier (exclusive). -1\n            is equivalent to <tt>name.length()</tt> if name is not\n            <tt>null</tt>.\n @param msg\n            a message to be used in case of error.\n","return_type":"void"},{"parameters":"int:version,String:name,String:msg","name":"checkMethodIdentifier","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given string is a valid Java identifier.\n\n @param version\n            the class version.\n @param name\n            the string to be checked.\n @param msg\n            a message to be used in case of error.\n","return_type":"void"},{"parameters":"String:name,String:msg","name":"checkInternalName","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given string is a valid internal class name.\n\n @param name\n            the string to be checked.\n @param msg\n            a message to be used in case of error.\n","return_type":"void"},{"parameters":"String:name,int:start,int:end,String:msg","name":"checkInternalName","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given substring is a valid internal class name.\n\n @param name\n            the string to be checked.\n @param start\n            index of the first character of the identifier (inclusive).\n @param end\n            index of the last character of the identifier (exclusive). -1\n            is equivalent to <tt>name.length()</tt> if name is not\n            <tt>null</tt>.\n @param msg\n            a message to be used in case of error.\n","return_type":"void"},{"parameters":"String:desc,boolean:canBeVoid","name":"checkDesc","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given string is a valid type descriptor.\n\n @param desc\n            the string to be checked.\n @param canBeVoid\n            <tt>true</tt> if <tt>V</tt> can be considered valid.\n","return_type":"void"},{"parameters":"String:desc,int:start,boolean:canBeVoid","name":"checkDesc","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that a the given substring is a valid type descriptor.\n\n @param desc\n            the string to be checked.\n @param start\n            index of the first character of the identifier (inclusive).\n @param canBeVoid\n            <tt>true</tt> if <tt>V</tt> can be considered valid.\n @return the index of the last character of the type decriptor, plus one.\n","return_type":"int"},{"parameters":"String:desc","name":"checkMethodDesc","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given string is a valid method descriptor.\n\n @param desc\n            the string to be checked.\n","return_type":"void"},{"parameters":"Label:label,boolean:checkVisited,String:msg","name":"checkLabel","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given label is not null. This method can also check that\n the label has been visited.\n\n @param label\n            the label to be checked.\n @param checkVisited\n            <tt>true</tt> to check that the label has been visited.\n @param msg\n            a message to be used in case of error.\n","return_type":"void"},{"parameters":"Label:label","name":"checkNonDebugLabel","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given label is not a label used only for debug purposes.\n\n @param label\n            the label to be checked.\n","return_type":"void"},{"parameters":null,"name":"getLabelStatusField","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Returns the Field object corresponding to the Label.status field.\n\n @return the Field object corresponding to the Label.status field.\n","return_type":"Field"},{"parameters":"String:name","name":"getLabelField","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Returns the field of the Label class whose name is given.\n\n @param name\n            a field name.\n @return the field of the Label class whose name is given, or null.\n","return_type":"Field"}],"fields":[{"parameters":null,"name":"version","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The class version number.\n","return_type":null},{"parameters":null,"name":"access","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The access flags of the method.\n","return_type":null},{"parameters":null,"name":"startCode","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the visitCode method has been called.\n","return_type":null},{"parameters":null,"name":"endCode","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the visitMaxs method has been called.\n","return_type":null},{"parameters":null,"name":"endMethod","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the visitEnd method has been called.\n","return_type":null},{"parameters":null,"name":"insnCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Number of visited instructions.\n","return_type":null},{"parameters":null,"name":"labels","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The already visited labels. This map associate Integer values to pseudo\n code offsets.\n","return_type":null},{"parameters":null,"name":"usedLabels","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The labels used in this method. Every used label must be visited with\n visitLabel before the end of the method (i.e. should be in #labels).\n","return_type":null},{"parameters":null,"name":"expandedFrames","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Number of visited frames in expanded form.\n","return_type":null},{"parameters":null,"name":"compressedFrames","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Number of visited frames in compressed form.\n","return_type":null},{"parameters":null,"name":"lastFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Number of instructions before the last visited frame.\n","return_type":null},{"parameters":null,"name":"handlers","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The exception handler ranges. Each pair of list element contains the\n start and end labels of an exception handler block.\n","return_type":null},{"parameters":null,"name":"TYPE","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Code of the visit method to be used for each opcode.\n","return_type":null},{"parameters":null,"name":"labelStatusField","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The Label.status field.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link MethodVisitor} that checks that its methods are properly used. More\n precisely this method adapter checks each instruction individually, i.e.,\n each visit method checks some preconditions based <i>only</i> on its\n arguments - such as the fact that the given opcode is correct for a given\n visit method. This adapter can also perform some basic data flow checks (more\n precisely those that can be performed without the full class hierarchy - see\n {@link jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier}). For instance in a\n method whose signature is <tt>void m ()</tt>, the invalid instruction\n IRETURN, or the invalid sequence IADD L2I will be detected if the data flow\n checks are enabled. These checks are enabled by using the\n {@link #CheckMethodAdapter(int,String,String,MethodVisitor,Map)} constructor.\n They are not performed if any other constructor is used.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"CheckFieldAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"FieldVisitor:fv","name":"CheckFieldAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckFieldAdapter}. <i>Subclasses must not use\n this constructor</i>. Instead, they must use the\n {@link #CheckFieldAdapter(int, FieldVisitor)} version.\n\n @param fv\n            the field visitor to which this adapter must delegate calls.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,FieldVisitor:fv","name":"CheckFieldAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckFieldAdapter}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param fv\n            the field visitor to which this adapter must delegate calls.\n","return_type":null}],"methods":[{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"checkEnd","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"end","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link FieldVisitor} that checks that its methods are properly used.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"CheckClassAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"ClassVisitor:cv","name":"CheckClassAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckClassAdapter}. <i>Subclasses must not use\n this constructor</i>. Instead, they must use the\n {@link #CheckClassAdapter(int, ClassVisitor, boolean)} version.\n\n @param cv\n            the class visitor to which this adapter must delegate calls.\n","return_type":null},{"parameters":"ClassVisitor:cv,boolean:checkDataFlow","name":"CheckClassAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckClassAdapter}. <i>Subclasses must not use\n this constructor</i>. Instead, they must use the\n {@link #CheckClassAdapter(int, ClassVisitor, boolean)} version.\n\n @param cv\n            the class visitor to which this adapter must delegate calls.\n @param checkDataFlow\n            <tt>true</tt> to perform basic data flow checks, or\n            <tt>false</tt> to not perform any data flow check (see\n            {@link CheckMethodAdapter}). This option requires valid\n            maxLocals and maxStack values.\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,ClassVisitor:cv,boolean:checkDataFlow","name":"CheckClassAdapter","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link CheckClassAdapter}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param cv\n            the class visitor to which this adapter must delegate calls.\n @param checkDataFlow\n            <tt>true</tt> to perform basic data flow checks, or\n            <tt>false</tt> to not perform any data flow check (see\n            {@link CheckMethodAdapter}). This option requires valid\n            maxLocals and maxStack values.\n","return_type":null}],"methods":[{"parameters":"java.lang.String[]:args","name":"main","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a given class.\n <p>\n Usage: CheckClassAdapter &lt;binary class name or class file name&gt;\n\n @param args\n            the command line arguments.\n\n @throws Exception\n             if the class cannot be found, or if an IO exception occurs.\n","return_type":"void"},{"parameters":"ClassReader:cr,ClassLoader:loader,boolean:dump,PrintWriter:pw","name":"verify","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a given class.\n\n @param cr\n            a <code>ClassReader</code> that contains bytecode for the\n            analysis.\n @param loader\n            a <code>ClassLoader</code> which will be used to load\n            referenced classes. This is useful if you are verifiying\n            multiple interdependent classes.\n @param dump\n            true if bytecode should be printed out not only when errors\n            are found.\n @param pw\n            write where results going to be printed\n","return_type":"void"},{"parameters":"ClassReader:cr,boolean:dump,PrintWriter:pw","name":"verify","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a given class\n\n @param cr\n            a <code>ClassReader</code> that contains bytecode for the\n            analysis.\n @param dump\n            true if bytecode should be printed out not only when errors\n            are found.\n @param pw\n            write where results going to be printed\n","return_type":"void"},{"parameters":"MethodNode:method,jdk.internal.org.objectweb.asm.tree.analysis.Analyzer:a,PrintWriter:pw","name":"printAnalyzerResult","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name","name":"getShortName","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"String"},{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:file,String:debug","name":"visitSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"FieldVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"MethodVisitor"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"checkState","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the visit method has been called and that visitEnd has not\n been called.\n","return_type":"void"},{"parameters":"int:access,int:possibleAccess","name":"checkAccess","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks that the given access flags do not contain invalid flags. This\n method also checks that mutually incompatible flags are not set\n simultaneously.\n\n @param access\n            the access flags to be checked\n @param possibleAccess\n            the valid access flags.\n","return_type":"void"},{"parameters":"String:signature","name":"checkClassSignature","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a class signature.\n\n @param signature\n            a string containing the signature that must be checked.\n","return_type":"void"},{"parameters":"String:signature","name":"checkMethodSignature","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a method signature.\n\n @param signature\n            a string containing the signature that must be checked.\n","return_type":"void"},{"parameters":"String:signature","name":"checkFieldSignature","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a field signature.\n\n @param signature\n            a string containing the signature that must be checked.\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath","name":"checkTypeRefAndPath","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks the reference to a type in a type annotation.\n\n @param typeRef\n            a reference to an annotated type.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n","return_type":"void"},{"parameters":"String:signature,int:pos","name":"checkFormalTypeParameters","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks the formal type parameters of a class or method signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkFormalTypeParameter","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a formal type parameter of a class or method signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkFieldTypeSignature","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a field type signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkClassTypeSignature","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a class type signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkTypeArguments","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks the type arguments in a class type signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkTypeArgument","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a type argument in a class type signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkTypeVariableSignature","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a type variable signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkTypeSignature","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a type signature.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"checkIdentifier","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks an identifier.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"char:c,String:signature,int:pos","name":"checkChar","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Checks a single character.\n\n @param signature\n            a string containing the signature that must be checked.\n @param pos\n            index of first character to be checked.\n @return the index of the first character after the checked part.\n","return_type":"int"},{"parameters":"String:signature,int:pos","name":"getChar","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Returns the signature car at the given index.\n\n @param signature\n            a signature.\n @param pos\n            an index in signature.\n @return the character at the given index, or 0 if there is no such\n         character.\n","return_type":"char"}],"fields":[{"parameters":null,"name":"version","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The class version number.\n","return_type":null},{"parameters":null,"name":"start","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the visit method has been called.\n","return_type":null},{"parameters":null,"name":"source","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the visitSource method has been called.\n","return_type":null},{"parameters":null,"name":"outer","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the visitOuterClass method has been called.\n","return_type":null},{"parameters":null,"name":"end","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the visitEnd method has been called.\n","return_type":null},{"parameters":null,"name":"labels","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The already visited labels. This map associate Integer values to Label\n keys.\n","return_type":null},{"parameters":null,"name":"checkDataFlow","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" <tt>true</tt> if the method code must be checked with a BasicVerifier.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link ClassVisitor} that checks that its methods are properly used. More\n precisely this class adapter checks each method call individually, based\n <i>only</i> on its arguments, but does <i>not</i> check the <i>sequence</i>\n of method calls. For example, the invalid sequence\n <tt>visitField(ACC_PUBLIC, \"i\", \"I\", null)</tt> <tt>visitField(ACC_PUBLIC,\n \"i\", \"D\", null)</tt> will <i>not</i> be detected by this class adapter.\n\n <p>\n <code>CheckClassAdapter</code> can be also used to verify bytecode\n transformations in order to make sure transformed bytecode is sane. For\n example:\n\n <pre>\n   InputStream is = ...; // get bytes for the source class\n   ClassReader cr = new ClassReader(is);\n   ClassWriter cw = new ClassWriter(cr, ClassWriter.COMPUTE_MAXS);\n   ClassVisitor cv = new <b>MyClassAdapter</b>(new CheckClassAdapter(cw));\n   cr.accept(cv, 0);\n\n   StringWriter sw = new StringWriter();\n   PrintWriter pw = new PrintWriter(sw);\n   CheckClassAdapter.verify(new ClassReader(cw.toByteArray()), false, pw);\n   assertTrue(sw.toString(), sw.toString().length()==0);\n </pre>\n\n Above code runs transformed bytecode trough the\n <code>CheckClassAdapter</code>. It won't be exactly the same verification as\n JVM does, but it run data flow analysis for the code of each method and\n checks that expectations are met for each method instruction.\n\n <p>\n If method bytecode has errors, assertion text will show the erroneous\n instruction number and dump of the failed method with information about\n locals and stack slot for each instruction. For example (format is -\n insnNumber locals : stack):\n\n <pre>\n jdk.internal.org.objectweb.asm.tree.analysis.AnalyzerException: Error at instruction 71: Expected I, but found .\n   at jdk.internal.org.objectweb.asm.tree.analysis.Analyzer.analyze(Analyzer.java:289)\n   at jdk.internal.org.objectweb.asm.util.CheckClassAdapter.verify(CheckClassAdapter.java:135)\n ...\n remove()V\n 00000 LinkedBlockingQueue$Itr . . . . . . . .  :\n   ICONST_0\n 00001 LinkedBlockingQueue$Itr . . . . . . . .  : I\n   ISTORE 2\n 00001 LinkedBlockingQueue$Itr <b>.</b> I . . . . . .  :\n ...\n\n 00071 LinkedBlockingQueue$Itr <b>.</b> I . . . . . .  :\n   ILOAD 1\n 00072 <b>?</b>\n   INVOKESPECIAL java/lang/Integer.&lt;init&gt; (I)V\n ...\n </pre>\n\n In the above output you can see that variable 1 loaded by\n <code>ILOAD 1</code> instruction at position <code>00071</code> is not\n initialized. You can also see that at the beginning of the method (code\n inserted by the transformation) variable 2 is initialized.\n\n <p>\n Note that when used like that, <code>CheckClassAdapter.verify()</code> can\n trigger additional class loading, because it is using\n <code>SimpleVerifier</code>.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"CheckAnnotationAdapter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"AnnotationVisitor:av","name":"CheckAnnotationAdapter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":"AnnotationVisitor:av,boolean:named","name":"CheckAnnotationAdapter","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"methods":[{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"AnnotationVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"checkEnd","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name","name":"checkName","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"named","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null},{"parameters":null,"name":"end","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" An {@link AnnotationVisitor} that checks that its methods are properly used.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ASMifier","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"ASMifier","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link ASMifier}. <i>Subclasses must not use this\n constructor</i>. Instead, they must use the\n {@link #ASMifier(int, String, int)} version.\n\n @throws IllegalStateException\n             If a subclass calls this constructor.\n","return_type":null},{"parameters":"int:api,String:name,int:id","name":"ASMifier","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Constructs a new {@link ASMifier}.\n\n @param api\n            the ASM API version implemented by this class. Must be one of\n            {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param name\n            the name of the visitor variable in the produced code.\n @param id\n            identifier of the annotation visitor variable in the produced\n            code.\n","return_type":null}],"methods":[{"parameters":"java.lang.String[]:args","name":"main","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints the ASM source code to generate the given class to the standard\n output.\n <p>\n Usage: ASMifier [-debug] &lt;binary class name or class file name&gt;\n\n @param args\n            the command line arguments.\n\n @throws Exception\n             if the class cannot be found, or if an IO exception occurs.\n","return_type":"void"},{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:file,String:debug","name":"visitSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitClassAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitClassTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"Attribute:attr","name":"visitClassAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":null,"name":"visitClassEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":null,"name":"visitAnnotationEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitFieldAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitFieldTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"Attribute:attr","name":"visitFieldAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitFieldEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:parameterName,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"String:desc,boolean:visible","name":"visitMethodAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitMethodTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"Attribute:attr","name":"visitMethodAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"doVisitMethodInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"Printer"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":null,"name":"visitMethodEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"String:method,int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"String:name,int:id","name":"createASMifier","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"ASMifier"},{"parameters":"int:access","name":"appendAccess","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends a string representation of the given access modifiers to\n {@link #buf buf}.\n\n @param access\n            some access modifiers.\n","return_type":"void"},{"parameters":"Object:cst","name":"appendConstant","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends a string representation of the given constant to the given\n buffer.\n\n @param cst\n            an {@link Integer}, {@link Float}, {@link Long},\n            {@link Double} or {@link String} object. May be <tt>null</tt>.\n","return_type":"void"},{"parameters":"StringBuffer:buf,Object:cst","name":"appendConstant","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends a string representation of the given constant to the given\n buffer.\n\n @param buf\n            a string buffer.\n @param cst\n            an {@link Integer}, {@link Float}, {@link Long},\n            {@link Double} or {@link String} object. May be <tt>null</tt>.\n","return_type":"void"},{"parameters":"int:n,java.lang.Object[]:o","name":"declareFrameTypes","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"int:n,java.lang.Object[]:o","name":"appendFrameTypes","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":"","return_type":"void"},{"parameters":"Label:l","name":"declareLabel","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends a declaration of the given label to {@link #buf buf}. This\n declaration is of the form \"Label lXXX = new Label();\". Does nothing if\n the given label has already been declared.\n\n @param l\n            a label.\n","return_type":"void"},{"parameters":"Label:l","name":"appendLabel","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Appends the name of the given label to {@link #buf buf}. The given label\n <i>must</i> already have a name. One way to ensure this is to always call\n {@link #declareLabel declared} before calling this method.\n\n @param l\n            a label.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"name","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" The name of the visitor variable in the produced code.\n","return_type":null},{"parameters":null,"name":"id","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Identifier of the annotation visitor variable in the produced code.\n","return_type":null},{"parameters":null,"name":"labelNames","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" The label names. This map associates String values to Label keys. It is\n used only in ASMifierMethodVisitor.\n","return_type":null},{"parameters":null,"name":"ACCESS_CLASS","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Pseudo access flag used to distinguish class access flags.\n","return_type":null},{"parameters":null,"name":"ACCESS_FIELD","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Pseudo access flag used to distinguish field access flags.\n","return_type":null},{"parameters":null,"name":"ACCESS_INNER","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm.util","description":" Pseudo access flag used to distinguish inner class flags.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" A {@link Printer} that prints the ASM code to generate the classes if visits.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ASMifiable","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"StringBuffer:buf,String:varName,java.util.Map:labelNames","name":"asmify","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" Prints the ASM code to create an attribute equal to this attribute.\n\n @param buf\n            a buffer used for printing Java code.\n @param varName\n            name of the variable in a printed code used to store attribute\n            instance.\n @param labelNames\n            map of label instances to their names.\n","return_type":"void"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm.util","description":" An {@link jdk.internal.org.objectweb.asm.Attribute Attribute} that can print the ASM code\n to create an equivalent attribute.\n\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"XMLReader","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"String:name","name":"getFeature","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up the value of a feature flag.\n\n <p>The feature name is any fully-qualified URI.  It is\n possible for an XMLReader to recognize a feature name but\n temporarily be unable to return its value.\n Some feature values may be available only in specific\n contexts, such as before, during, or after a parse.\n Also, some feature values may not be programmatically accessible.\n (In the case of an adapter for SAX1 {@link Parser}, there is no\n implementation-independent way to expose whether the underlying\n parser is performing validation, expanding external entities,\n and so forth.) </p>\n\n <p>All XMLReaders are required to recognize the\n http://xml.org/sax/features/namespaces and the\n http://xml.org/sax/features/namespace-prefixes feature names.</p>\n\n <p>Typical usage is something like this:</p>\n\n <pre>\n XMLReader r = new MySAXDriver();\n\n                         // try to activate validation\n try {\n   r.setFeature(\"http://xml.org/sax/features/validation\", true);\n } catch (SAXException e) {\n   System.err.println(\"Cannot activate validation.\");\n }\n\n                         // register event handlers\n r.setContentHandler(new MyContentHandler());\n r.setErrorHandler(new MyErrorHandler());\n\n                         // parse the first document\n try {\n   r.parse(\"http://www.foo.com/mydoc.xml\");\n } catch (IOException e) {\n   System.err.println(\"I/O exception reading XML document\");\n } catch (SAXException e) {\n   System.err.println(\"XML exception reading document.\");\n }\n </pre>\n\n <p>Implementors are free (and encouraged) to invent their own features,\n using names built on their own URIs.</p>\n\n @param name The feature name, which is a fully-qualified URI.\n @return The current value of the feature (true or false).\n @exception org.xml.sax.SAXNotRecognizedException If the feature\n            value can't be assigned or retrieved.\n @exception org.xml.sax.SAXNotSupportedException When the\n            XMLReader recognizes the feature name but\n            cannot determine its value at this time.\n @see #setFeature\n","return_type":"boolean"},{"parameters":"String:name,boolean:value","name":"setFeature","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Set the value of a feature flag.\n\n <p>The feature name is any fully-qualified URI.  It is\n possible for an XMLReader to expose a feature value but\n to be unable to change the current value.\n Some feature values may be immutable or mutable only\n in specific contexts, such as before, during, or after\n a parse.</p>\n\n <p>All XMLReaders are required to support setting\n http://xml.org/sax/features/namespaces to true and\n http://xml.org/sax/features/namespace-prefixes to false.</p>\n\n @param name The feature name, which is a fully-qualified URI.\n @param value The requested value of the feature (true or false).\n @exception org.xml.sax.SAXNotRecognizedException If the feature\n            value can't be assigned or retrieved.\n @exception org.xml.sax.SAXNotSupportedException When the\n            XMLReader recognizes the feature name but\n            cannot set the requested value.\n @see #getFeature\n","return_type":"void"},{"parameters":"String:name","name":"getProperty","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up the value of a property.\n\n <p>The property name is any fully-qualified URI.  It is\n possible for an XMLReader to recognize a property name but\n temporarily be unable to return its value.\n Some property values may be available only in specific\n contexts, such as before, during, or after a parse.</p>\n\n <p>XMLReaders are not required to recognize any specific\n property names, though an initial core set is documented for\n SAX2.</p>\n\n <p>Implementors are free (and encouraged) to invent their own properties,\n using names built on their own URIs.</p>\n\n @param name The property name, which is a fully-qualified URI.\n @return The current value of the property.\n @exception org.xml.sax.SAXNotRecognizedException If the property\n            value can't be assigned or retrieved.\n @exception org.xml.sax.SAXNotSupportedException When the\n            XMLReader recognizes the property name but\n            cannot determine its value at this time.\n @see #setProperty\n","return_type":"Object"},{"parameters":"String:name,Object:value","name":"setProperty","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Set the value of a property.\n\n <p>The property name is any fully-qualified URI.  It is\n possible for an XMLReader to recognize a property name but\n to be unable to change the current value.\n Some property values may be immutable or mutable only\n in specific contexts, such as before, during, or after\n a parse.</p>\n\n <p>XMLReaders are not required to recognize setting\n any specific property names, though a core set is defined by\n SAX2.</p>\n\n <p>This method is also the standard mechanism for setting\n extended handlers.</p>\n\n @param name The property name, which is a fully-qualified URI.\n @param value The requested value for the property.\n @exception org.xml.sax.SAXNotRecognizedException If the property\n            value can't be assigned or retrieved.\n @exception org.xml.sax.SAXNotSupportedException When the\n            XMLReader recognizes the property name but\n            cannot set the requested value.\n","return_type":"void"},{"parameters":"EntityResolver:resolver","name":"setEntityResolver","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Allow an application to register an entity resolver.\n\n <p>If the application does not register an entity resolver,\n the XMLReader will perform its own default resolution.</p>\n\n <p>Applications may register a new or different resolver in the\n middle of a parse, and the SAX parser must begin using the new\n resolver immediately.</p>\n\n @param resolver The entity resolver.\n @see #getEntityResolver\n","return_type":"void"},{"parameters":null,"name":"getEntityResolver","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the current entity resolver.\n\n @return The current entity resolver, or null if none\n         has been registered.\n @see #setEntityResolver\n","return_type":"EntityResolver"},{"parameters":"DTDHandler:handler","name":"setDTDHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Allow an application to register a DTD event handler.\n\n <p>If the application does not register a DTD handler, all DTD\n events reported by the SAX parser will be silently ignored.</p>\n\n <p>Applications may register a new or different handler in the\n middle of a parse, and the SAX parser must begin using the new\n handler immediately.</p>\n\n @param handler The DTD handler.\n @see #getDTDHandler\n","return_type":"void"},{"parameters":null,"name":"getDTDHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the current DTD handler.\n\n @return The current DTD handler, or null if none\n         has been registered.\n @see #setDTDHandler\n","return_type":"DTDHandler"},{"parameters":"ContentHandler:handler","name":"setContentHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Allow an application to register a content event handler.\n\n <p>If the application does not register a content handler, all\n content events reported by the SAX parser will be silently\n ignored.</p>\n\n <p>Applications may register a new or different handler in the\n middle of a parse, and the SAX parser must begin using the new\n handler immediately.</p>\n\n @param handler The content handler.\n @see #getContentHandler\n","return_type":"void"},{"parameters":null,"name":"getContentHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the current content handler.\n\n @return The current content handler, or null if none\n         has been registered.\n @see #setContentHandler\n","return_type":"ContentHandler"},{"parameters":"ErrorHandler:handler","name":"setErrorHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Allow an application to register an error event handler.\n\n <p>If the application does not register an error handler, all\n error events reported by the SAX parser will be silently\n ignored; however, normal processing may not continue.  It is\n highly recommended that all SAX applications implement an\n error handler to avoid unexpected bugs.</p>\n\n <p>Applications may register a new or different handler in the\n middle of a parse, and the SAX parser must begin using the new\n handler immediately.</p>\n\n @param handler The error handler.\n @see #getErrorHandler\n","return_type":"void"},{"parameters":null,"name":"getErrorHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the current error handler.\n\n @return The current error handler, or null if none\n         has been registered.\n @see #setErrorHandler\n","return_type":"ErrorHandler"},{"parameters":"InputSource:input","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Parse an XML document.\n\n <p>The application can use this method to instruct the XML\n reader to begin parsing an XML document from any valid input\n source (a character stream, a byte stream, or a URI).</p>\n\n <p>Applications may not invoke this method while a parse is in\n progress (they should create a new XMLReader instead for each\n nested XML document).  Once a parse is complete, an\n application may reuse the same XMLReader object, possibly with a\n different input source.\n Configuration of the XMLReader object (such as handler bindings and\n values established for feature flags and properties) is unchanged\n by completion of a parse, unless the definition of that aspect of\n the configuration explicitly specifies other behavior.\n (For example, feature flags or properties exposing\n characteristics of the document being parsed.)\n </p>\n\n <p>During the parse, the XMLReader will provide information\n about the XML document through the registered event\n handlers.</p>\n\n <p>This method is synchronous: it will not return until parsing\n has ended.  If a client application wants to terminate\n parsing early, it should throw an exception.</p>\n\n @param input The input source for the top-level of the\n        XML document.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @exception java.io.IOException An IO exception from the parser,\n            possibly from a byte stream or character stream\n            supplied by the application.\n @see org.xml.sax.InputSource\n @see #parse(java.lang.String)\n @see #setEntityResolver\n @see #setDTDHandler\n @see #setContentHandler\n @see #setErrorHandler\n","return_type":"void"},{"parameters":"String:systemId","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Parse an XML document from a system identifier (URI).\n\n <p>This method is a shortcut for the common case of reading a\n document from a system identifier.  It is the exact\n equivalent of the following:</p>\n\n <pre>\n parse(new InputSource(systemId));\n </pre>\n\n <p>If the system identifier is a URL, it must be fully resolved\n by the application before it is passed to the parser.</p>\n\n @param systemId The system identifier (URI).\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @exception java.io.IOException An IO exception from the parser,\n            possibly from a byte stream or character stream\n            supplied by the application.\n @see #parse(org.xml.sax.InputSource)\n","return_type":"void"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Interface for reading an XML document using callbacks.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p><strong>Note:</strong> despite its name, this interface does\n <em>not</em> extend the standard Java {@link java.io.Reader Reader}\n interface, because reading XML is a fundamentally different activity\n than reading character data.</p>\n\n <p>XMLReader is the interface that an XML parser's SAX2 driver must\n implement.  This interface allows an application to set and\n query features and properties in the parser, to register\n event handlers for document processing, and to initiate\n a document parse.</p>\n\n <p>All SAX interfaces are assumed to be synchronous: the\n {@link #parse parse} methods must not return until parsing\n is complete, and readers must wait for an event-handler callback\n to return before reporting the next event.</p>\n\n <p>This interface replaces the (now deprecated) SAX 1.0 {@link\n org.xml.sax.Parser Parser} interface.  The XMLReader interface\n contains two important enhancements over the old Parser\n interface (as well as some minor ones):</p>\n\n <ol>\n <li>it adds a standard way to query and set features and\n  properties; and</li>\n <li>it adds Namespace support, which is required for many\n  higher-level XML standards.</li>\n </ol>\n\n <p>There are adapters available to convert a SAX1 Parser to\n a SAX2 XMLReader and vice-versa.</p>\n\n @since SAX 2.0\n @author David Megginson\n @see org.xml.sax.XMLFilter\n @see org.xml.sax.helpers.ParserAdapter\n @see org.xml.sax.helpers.XMLReaderAdapter\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SAXParseException","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:message,Locator:locator","name":"SAXParseException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new SAXParseException from a message and a Locator.\n\n <p>This constructor is especially useful when an application is\n creating its own exception from within a {@link org.xml.sax.ContentHandler\n ContentHandler} callback.</p>\n\n @param message The error or warning message.\n @param locator The locator object for the error or warning (may be\n        null).\n @see org.xml.sax.Locator\n","return_type":null},{"parameters":"String:message,Locator:locator,Exception:e","name":"SAXParseException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Wrap an existing exception in a SAXParseException.\n\n <p>This constructor is especially useful when an application is\n creating its own exception from within a {@link org.xml.sax.ContentHandler\n ContentHandler} callback, and needs to wrap an existing exception that is not a\n subclass of {@link org.xml.sax.SAXException SAXException}.</p>\n\n @param message The error or warning message, or null to\n                use the message from the embedded exception.\n @param locator The locator object for the error or warning (may be\n        null).\n @param e Any exception.\n @see org.xml.sax.Locator\n","return_type":null},{"parameters":"String:message,String:publicId,String:systemId,int:lineNumber,int:columnNumber","name":"SAXParseException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new SAXParseException.\n\n <p>This constructor is most useful for parser writers.</p>\n\n <p>All parameters except the message are as if\n they were provided by a {@link Locator}.  For example, if the\n system identifier is a URL (including relative filename), the\n caller must resolve it fully before creating the exception.</p>\n\n\n @param message The error or warning message.\n @param publicId The public identifier of the entity that generated\n                 the error or warning.\n @param systemId The system identifier of the entity that generated\n                 the error or warning.\n @param lineNumber The line number of the end of the text that\n                   caused the error or warning.\n @param columnNumber The column number of the end of the text that\n                     cause the error or warning.\n","return_type":null},{"parameters":"String:message,String:publicId,String:systemId,int:lineNumber,int:columnNumber,Exception:e","name":"SAXParseException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new SAXParseException with an embedded exception.\n\n <p>This constructor is most useful for parser writers who\n need to wrap an exception that is not a subclass of\n {@link org.xml.sax.SAXException SAXException}.</p>\n\n <p>All parameters except the message and exception are as if\n they were provided by a {@link Locator}.  For example, if the\n system identifier is a URL (including relative filename), the\n caller must resolve it fully before creating the exception.</p>\n\n @param message The error or warning message, or null to use\n                the message from the embedded exception.\n @param publicId The public identifier of the entity that generated\n                 the error or warning.\n @param systemId The system identifier of the entity that generated\n                 the error or warning.\n @param lineNumber The line number of the end of the text that\n                   caused the error or warning.\n @param columnNumber The column number of the end of the text that\n                     cause the error or warning.\n @param e Another exception to embed in this one.\n","return_type":null}],"methods":[{"parameters":"String:publicId,String:systemId,int:lineNumber,int:columnNumber","name":"init","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Internal initialization method.\n\n @param publicId The public identifier of the entity which generated the exception,\n        or null.\n @param systemId The system identifier of the entity which generated the exception,\n        or null.\n @param lineNumber The line number of the error, or -1.\n @param columnNumber The column number of the error, or -1.\n","return_type":"void"},{"parameters":null,"name":"getPublicId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Get the public identifier of the entity where the exception occurred.\n\n @return A string containing the public identifier, or null\n         if none is available.\n @see org.xml.sax.Locator#getPublicId\n","return_type":"String"},{"parameters":null,"name":"getSystemId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Get the system identifier of the entity where the exception occurred.\n\n <p>If the system identifier is a URL, it will have been resolved\n fully.</p>\n\n @return A string containing the system identifier, or null\n         if none is available.\n @see org.xml.sax.Locator#getSystemId\n","return_type":"String"},{"parameters":null,"name":"getLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" The line number of the end of the text where the exception occurred.\n\n <p>The first line is line 1.</p>\n\n @return An integer representing the line number, or -1\n         if none is available.\n @see org.xml.sax.Locator#getLineNumber\n","return_type":"int"},{"parameters":null,"name":"getColumnNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" The column number of the end of the text where the exception occurred.\n\n <p>The first column in a line is position 1.</p>\n\n @return An integer representing the column number, or -1\n         if none is available.\n @see org.xml.sax.Locator#getColumnNumber\n","return_type":"int"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Override toString to provide more detailed error message.\n\n @return A string representation of this exception.\n","return_type":"String"}],"fields":[{"parameters":null,"name":"publicId","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" @serial The public identifier, or null.\n @see #getPublicId\n","return_type":null},{"parameters":null,"name":"systemId","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" @serial The system identifier, or null.\n @see #getSystemId\n","return_type":null},{"parameters":null,"name":"lineNumber","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" @serial The line number, or -1.\n @see #getLineNumber\n","return_type":null},{"parameters":null,"name":"columnNumber","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" @serial The column number, or -1.\n @see #getColumnNumber\n","return_type":null},{"parameters":null,"name":"serialVersionUID","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.xml.sax","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Encapsulate an XML parse error or warning.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>This exception may include information for locating the error\n in the original XML document, as if it came from a {@link Locator}\n object.  Note that although the application\n will receive a SAXParseException as the argument to the handlers\n in the {@link org.xml.sax.ErrorHandler ErrorHandler} interface,\n the application is not actually required to throw the exception;\n instead, it can simply read the information in it and take a\n different action.</p>\n\n <p>Since this exception is a subclass of {@link org.xml.sax.SAXException\n SAXException}, it inherits the ability to wrap another exception.</p>\n\n @since SAX 1.0\n @author David Megginson\n @version 2.0.1 (sax2r2)\n @see org.xml.sax.SAXException\n @see org.xml.sax.Locator\n @see org.xml.sax.ErrorHandler\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SAXNotSupportedException","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SAXNotSupportedException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Construct a new exception with no message.\n","return_type":null},{"parameters":"String:message","name":"SAXNotSupportedException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Construct a new exception with the given message.\n\n @param message The text message of the exception.\n","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"serialVersionUID","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.xml.sax","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Exception class for an unsupported operation.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>An XMLReader will throw this exception when it recognizes a\n feature or property identifier, but cannot perform the requested\n operation (setting a state or value).  Other SAX2 applications and\n extensions may use this class for similar purposes.</p>\n\n @since SAX 2.0\n @author David Megginson\n @see org.xml.sax.SAXNotRecognizedException\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SAXNotRecognizedException","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SAXNotRecognizedException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Default constructor.\n","return_type":null},{"parameters":"String:message","name":"SAXNotRecognizedException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Construct a new exception with the given message.\n\n @param message The text message of the exception.\n","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"serialVersionUID","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.xml.sax","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Exception class for an unrecognized identifier.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>An XMLReader will throw this exception when it finds an\n unrecognized feature or property identifier; SAX applications and\n extensions may use this class for other, similar purposes.</p>\n\n @since SAX 2.0\n @author David Megginson\n @see org.xml.sax.SAXNotSupportedException\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SAXException","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SAXException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new SAXException.\n","return_type":null},{"parameters":"String:message","name":"SAXException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new SAXException.\n\n @param message The error or warning message.\n","return_type":null},{"parameters":"Exception:e","name":"SAXException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new SAXException wrapping an existing exception.\n\n <p>The existing exception will be embedded in the new\n one, and its message will become the default message for\n the SAXException.</p>\n\n @param e The exception to be wrapped in a SAXException.\n","return_type":null},{"parameters":"String:message,Exception:e","name":"SAXException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new SAXException from an existing exception.\n\n <p>The existing exception will be embedded in the new\n one, but the new exception will have its own message.</p>\n\n @param message The detail message.\n @param e The exception to be wrapped in a SAXException.\n","return_type":null}],"methods":[{"parameters":null,"name":"getMessage","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return a detail message for this exception.\n\n <p>If there is an embedded exception, and if the SAXException\n has no detail message of its own, this method will return\n the detail message from the embedded exception.</p>\n\n @return The error or warning message.\n","return_type":"String"},{"parameters":null,"name":"getException","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the embedded exception, if any.\n\n @return The embedded exception, or null if there is none.\n","return_type":"Exception"},{"parameters":null,"name":"getCause","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the cause of the exception\n\n @return Return the cause of the exception\n","return_type":"Throwable"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Override toString to pick up any embedded exception.\n\n @return A string representation of this exception.\n","return_type":"String"}],"fields":[{"parameters":null,"name":"exception","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" @serial The embedded exception if tunnelling, or null.\n","return_type":null},{"parameters":null,"name":"serialVersionUID","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.xml.sax","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Encapsulate a general SAX error or warning.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>This class can contain basic error or warning information from\n either the XML parser or the application: a parser writer or\n application writer can subclass it to provide additional\n functionality.  SAX handlers may throw this exception or\n any exception subclassed from it.</p>\n\n <p>If the application needs to pass through other types of\n exceptions, it must wrap those exceptions in a SAXException\n or an exception derived from a SAXException.</p>\n\n <p>If the parser or application needs to include information about a\n specific location in an XML document, it should use the\n {@link org.xml.sax.SAXParseException SAXParseException} subclass.</p>\n\n @since SAX 1.0\n @author David Megginson\n @version 2.0.1 (sax2r2)\n @see org.xml.sax.SAXParseException\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Locator","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":null,"name":"getPublicId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the public identifier for the current document event.\n\n <p>The return value is the public identifier of the document\n entity or of the external parsed entity in which the markup\n triggering the event appears.</p>\n\n @return A string containing the public identifier, or\n         null if none is available.\n @see #getSystemId\n","return_type":"String"},{"parameters":null,"name":"getSystemId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the system identifier for the current document event.\n\n <p>The return value is the system identifier of the document\n entity or of the external parsed entity in which the markup\n triggering the event appears.</p>\n\n <p>If the system identifier is a URL, the parser must resolve it\n fully before passing it to the application.  For example, a file\n name must always be provided as a <em>file:...</em> URL, and other\n kinds of relative URI are also resolved against their bases.</p>\n\n @return A string containing the system identifier, or null\n         if none is available.\n @see #getPublicId\n","return_type":"String"},{"parameters":null,"name":"getLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the line number where the current document event ends.\n Lines are delimited by line ends, which are defined in\n the XML specification.\n\n <p><strong>Warning:</strong> The return value from the method\n is intended only as an approximation for the sake of diagnostics;\n it is not intended to provide sufficient information\n to edit the character content of the original XML document.\n In some cases, these \"line\" numbers match what would be displayed\n as columns, and in others they may not match the source text\n due to internal entity expansion.  </p>\n\n <p>The return value is an approximation of the line number\n in the document entity or external parsed entity where the\n markup triggering the event appears.</p>\n\n <p>If possible, the SAX driver should provide the line position\n of the first character after the text associated with the document\n event.  The first line is line 1.</p>\n\n @return The line number, or -1 if none is available.\n @see #getColumnNumber\n","return_type":"int"},{"parameters":null,"name":"getColumnNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the column number where the current document event ends.\n This is one-based number of Java <code>char</code> values since\n the last line end.\n\n <p><strong>Warning:</strong> The return value from the method\n is intended only as an approximation for the sake of diagnostics;\n it is not intended to provide sufficient information\n to edit the character content of the original XML document.\n For example, when lines contain combining character sequences, wide\n characters, surrogate pairs, or bi-directional text, the value may\n not correspond to the column in a text editor's display. </p>\n\n <p>The return value is an approximation of the column number\n in the document entity or external parsed entity where the\n markup triggering the event appears.</p>\n\n <p>If possible, the SAX driver should provide the line position\n of the first character after the text associated with the document\n event.  The first column in each line is column 1.</p>\n\n @return The column number, or -1 if none is available.\n @see #getLineNumber\n","return_type":"int"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Interface for associating a SAX event with a document location.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>If a SAX parser provides location information to the SAX\n application, it does so by implementing this interface and then\n passing an instance to the application using the content\n handler's {@link org.xml.sax.ContentHandler#setDocumentLocator\n setDocumentLocator} method.  The application can use the\n object to obtain the location of any other SAX event\n in the XML source document.</p>\n\n <p>Note that the results returned by the object will be valid only\n during the scope of each callback method: the application\n will receive unpredictable results if it attempts to use the\n locator at any other time, or after parsing completes.</p>\n\n <p>SAX parsers are not required to supply a locator, but they are\n very strongly encouraged to do so.  If the parser supplies a\n locator, it must do so before reporting any other document events.\n If no locator has been set by the time the application receives\n the {@link org.xml.sax.ContentHandler#startDocument startDocument}\n event, the application should assume that a locator is not\n available.</p>\n\n @since SAX 1.0\n @author David Megginson\n @see org.xml.sax.ContentHandler#setDocumentLocator\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"InputSource","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"InputSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Zero-argument default constructor.\n\n @see #setPublicId\n @see #setSystemId\n @see #setByteStream\n @see #setCharacterStream\n @see #setEncoding\n","return_type":null},{"parameters":"String:systemId","name":"InputSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new input source with a system identifier.\n\n <p>Applications may use setPublicId to include a\n public identifier as well, or setEncoding to specify\n the character encoding, if known.</p>\n\n <p>If the system identifier is a URL, it must be fully\n resolved (it may not be a relative URL).</p>\n\n @param systemId The system identifier (URI).\n @see #setPublicId\n @see #setSystemId\n @see #setByteStream\n @see #setEncoding\n @see #setCharacterStream\n","return_type":null},{"parameters":"InputStream:byteStream","name":"InputSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new input source with a byte stream.\n\n <p>Application writers should use setSystemId() to provide a base\n for resolving relative URIs, may use setPublicId to include a\n public identifier, and may use setEncoding to specify the object's\n character encoding.</p>\n\n @param byteStream The raw byte stream containing the document.\n @see #setPublicId\n @see #setSystemId\n @see #setEncoding\n @see #setByteStream\n @see #setCharacterStream\n","return_type":null},{"parameters":"Reader:characterStream","name":"InputSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Create a new input source with a character stream.\n\n <p>Application writers should use setSystemId() to provide a base\n for resolving relative URIs, and may use setPublicId to include a\n public identifier.</p>\n\n <p>The character stream shall not include a byte order mark.</p>\n\n @see #setPublicId\n @see #setSystemId\n @see #setByteStream\n @see #setCharacterStream\n","return_type":null}],"methods":[{"parameters":"String:publicId","name":"setPublicId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Set the public identifier for this input source.\n\n <p>The public identifier is always optional: if the application\n writer includes one, it will be provided as part of the\n location information.</p>\n\n @param publicId The public identifier as a string.\n @see #getPublicId\n @see org.xml.sax.Locator#getPublicId\n @see org.xml.sax.SAXParseException#getPublicId\n","return_type":"void"},{"parameters":null,"name":"getPublicId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Get the public identifier for this input source.\n\n @return The public identifier, or null if none was supplied.\n @see #setPublicId\n","return_type":"String"},{"parameters":"String:systemId","name":"setSystemId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Set the system identifier for this input source.\n\n <p>The system identifier is optional if there is a byte stream\n or a character stream, but it is still useful to provide one,\n since the application can use it to resolve relative URIs\n and can include it in error messages and warnings (the parser\n will attempt to open a connection to the URI only if\n there is no byte stream or character stream specified).</p>\n\n <p>If the application knows the character encoding of the\n object pointed to by the system identifier, it can register\n the encoding using the setEncoding method.</p>\n\n <p>If the system identifier is a URL, it must be fully\n resolved (it may not be a relative URL).</p>\n\n @param systemId The system identifier as a string.\n @see #setEncoding\n @see #getSystemId\n @see org.xml.sax.Locator#getSystemId\n @see org.xml.sax.SAXParseException#getSystemId\n","return_type":"void"},{"parameters":null,"name":"getSystemId","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Get the system identifier for this input source.\n\n <p>The getEncoding method will return the character encoding\n of the object pointed to, or null if unknown.</p>\n\n <p>If the system ID is a URL, it will be fully resolved.</p>\n\n @return The system identifier, or null if none was supplied.\n @see #setSystemId\n @see #getEncoding\n","return_type":"String"},{"parameters":"InputStream:byteStream","name":"setByteStream","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Set the byte stream for this input source.\n\n <p>The SAX parser will ignore this if there is also a character\n stream specified, but it will use a byte stream in preference\n to opening a URI connection itself.</p>\n\n <p>If the application knows the character encoding of the\n byte stream, it should set it with the setEncoding method.</p>\n\n @param byteStream A byte stream containing an XML document or\n        other entity.\n @see #setEncoding\n @see #getByteStream\n @see #getEncoding\n @see java.io.InputStream\n","return_type":"void"},{"parameters":null,"name":"getByteStream","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Get the byte stream for this input source.\n\n <p>The getEncoding method will return the character\n encoding for this byte stream, or null if unknown.</p>\n\n @return The byte stream, or null if none was supplied.\n @see #getEncoding\n @see #setByteStream\n","return_type":"InputStream"},{"parameters":"String:encoding","name":"setEncoding","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Set the character encoding, if known.\n\n <p>The encoding must be a string acceptable for an\n XML encoding declaration (see section 4.3.3 of the XML 1.0\n recommendation).</p>\n\n <p>This method has no effect when the application provides a\n character stream.</p>\n\n @param encoding A string describing the character encoding.\n @see #setSystemId\n @see #setByteStream\n @see #getEncoding\n","return_type":"void"},{"parameters":null,"name":"getEncoding","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Get the character encoding for a byte stream or URI.\n This value will be ignored when the application provides a\n character stream.\n\n @return The encoding, or null if none was supplied.\n @see #setByteStream\n @see #getSystemId\n @see #getByteStream\n","return_type":"String"},{"parameters":"Reader:characterStream","name":"setCharacterStream","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Set the character stream for this input source.\n\n <p>If there is a character stream specified, the SAX parser\n will ignore any byte stream and will not attempt to open\n a URI connection to the system identifier.</p>\n\n @param characterStream The character stream containing the\n        XML document or other entity.\n @see #getCharacterStream\n @see java.io.Reader\n","return_type":"void"},{"parameters":null,"name":"getCharacterStream","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Get the character stream for this input source.\n\n @return The character stream, or null if none was supplied.\n @see #setCharacterStream\n","return_type":"Reader"}],"fields":[{"parameters":null,"name":"publicId","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":"","return_type":null},{"parameters":null,"name":"systemId","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":"","return_type":null},{"parameters":null,"name":"byteStream","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":"","return_type":null},{"parameters":null,"name":"encoding","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":"","return_type":null},{"parameters":null,"name":"characterStream","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" A single input source for an XML entity.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>This class allows a SAX application to encapsulate information\n about an input source in a single object, which may include\n a public identifier, a system identifier, a byte stream (possibly\n with a specified encoding), and/or a character stream.</p>\n\n <p>There are two places that the application can deliver an\n input source to the parser: as the argument to the Parser.parse\n method, or as the return value of the EntityResolver.resolveEntity\n method.</p>\n\n <p>The SAX parser will use the InputSource object to determine how\n to read XML input.  If there is a character stream available, the\n parser will read that stream directly, disregarding any text\n encoding declaration found in that stream.\n If there is no character stream, but there is\n a byte stream, the parser will use that byte stream, using the\n encoding specified in the InputSource or else (if no encoding is\n specified) autodetecting the character encoding using an algorithm\n such as the one in the XML specification.  If neither a character\n stream nor a\n byte stream is available, the parser will attempt to open a URI\n connection to the resource identified by the system\n identifier.</p>\n\n <p>An InputSource object belongs to the application: the SAX parser\n shall never modify it in any way (it may modify a copy if\n necessary).  However, standard processing of both byte and\n character streams is to close them on as part of end-of-parse cleanup,\n so applications should not attempt to re-use such streams after they\n have been handed to a parser.  </p>\n\n @since SAX 1.0\n @author David Megginson\n @see org.xml.sax.XMLReader#parse(org.xml.sax.InputSource)\n @see org.xml.sax.EntityResolver#resolveEntity\n @see java.io.InputStream\n @see java.io.Reader\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ErrorHandler","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"SAXParseException:exception","name":"warning","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of a warning.\n\n <p>SAX parsers will use this method to report conditions that\n are not errors or fatal errors as defined by the XML\n recommendation.  The default behaviour is to take no\n action.</p>\n\n <p>The SAX parser must continue to provide normal parsing events\n after invoking this method: it should still be possible for the\n application to process the document through to the end.</p>\n\n <p>Filters may use this method to report other, non-XML warnings\n as well.</p>\n\n @param exception The warning information encapsulated in a\n                  SAX parse exception.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.SAXParseException\n","return_type":"void"},{"parameters":"SAXParseException:exception","name":"error","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of a recoverable error.\n\n <p>This corresponds to the definition of \"error\" in section 1.2\n of the W3C XML 1.0 Recommendation.  For example, a validating\n parser would use this callback to report the violation of a\n validity constraint.  The default behaviour is to take no\n action.</p>\n\n <p>The SAX parser must continue to provide normal parsing\n events after invoking this method: it should still be possible\n for the application to process the document through to the end.\n If the application cannot do so, then the parser should report\n a fatal error even if the XML recommendation does not require\n it to do so.</p>\n\n <p>Filters may use this method to report other, non-XML errors\n as well.</p>\n\n @param exception The error information encapsulated in a\n                  SAX parse exception.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.SAXParseException\n","return_type":"void"},{"parameters":"SAXParseException:exception","name":"fatalError","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of a non-recoverable error.\n\n <p><strong>There is an apparent contradiction between the\n documentation for this method and the documentation for {@link\n org.xml.sax.ContentHandler#endDocument}.  Until this ambiguity\n is resolved in a future major release, clients should make no\n assumptions about whether endDocument() will or will not be\n invoked when the parser has reported a fatalError() or thrown\n an exception.</strong></p>\n\n <p>This corresponds to the definition of \"fatal error\" in\n section 1.2 of the W3C XML 1.0 Recommendation.  For example, a\n parser would use this callback to report the violation of a\n well-formedness constraint.</p>\n\n <p>The application must assume that the document is unusable\n after the parser has invoked this method, and should continue\n (if at all) only for the sake of collecting additional error\n messages: in fact, SAX parsers are free to stop reporting any\n other events once this method has been invoked.</p>\n\n @param exception The error information encapsulated in a\n                  SAX parse exception.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.SAXParseException\n","return_type":"void"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Basic interface for SAX error handlers.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>If a SAX application needs to implement customized error\n handling, it must implement this interface and then register an\n instance with the XML reader using the\n {@link org.xml.sax.XMLReader#setErrorHandler setErrorHandler}\n method.  The parser will then report all errors and warnings\n through this interface.</p>\n\n <p><strong>WARNING:</strong> If an application does <em>not</em>\n register an ErrorHandler, XML parsing errors will go unreported,\n except that <em>SAXParseException</em>s will be thrown for fatal errors.\n In order to detect validity errors, an ErrorHandler that does something\n with {@link #error error()} calls must be registered.</p>\n\n <p>For XML processing errors, a SAX driver must use this interface\n in preference to throwing an exception: it is up to the application\n to decide whether to throw an exception for different types of\n errors and warnings.  Note, however, that there is no requirement that\n the parser continue to report additional errors after a call to\n {@link #fatalError fatalError}.  In other words, a SAX driver class\n may throw an exception after reporting any fatalError.\n Also parsers may throw appropriate exceptions for non-XML errors.\n For example, {@link XMLReader#parse XMLReader.parse()} would throw\n an IOException for errors accessing entities or the document.</p>\n\n @since SAX 1.0\n @author David Megginson\n @see org.xml.sax.XMLReader#setErrorHandler\n @see org.xml.sax.SAXParseException\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"EntityResolver","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"String:publicId,String:systemId","name":"resolveEntity","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Allow the application to resolve external entities.\n\n <p>The parser will call this method before opening any external\n entity except the top-level document entity.  Such entities include\n the external DTD subset and external parameter entities referenced\n within the DTD (in either case, only if the parser reads external\n parameter entities), and external general entities referenced\n within the document element (if the parser reads external general\n entities).  The application may request that the parser locate\n the entity itself, that it use an alternative URI, or that it\n use data provided by the application (as a character or byte\n input stream).</p>\n\n <p>Application writers can use this method to redirect external\n system identifiers to secure and/or local URIs, to look up\n public identifiers in a catalogue, or to read an entity from a\n database or other input source (including, for example, a dialog\n box).  Neither XML nor SAX specifies a preferred policy for using\n public or system IDs to resolve resources.  However, SAX specifies\n how to interpret any InputSource returned by this method, and that\n if none is returned, then the system ID will be dereferenced as\n a URL.  </p>\n\n <p>If the system identifier is a URL, the SAX parser must\n resolve it fully before reporting it to the application.</p>\n\n @param publicId The public identifier of the external entity\n        being referenced, or null if none was supplied.\n @param systemId The system identifier of the external entity\n        being referenced.\n @return An InputSource object describing the new input source,\n         or null to request that the parser open a regular\n         URI connection to the system identifier.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @exception java.io.IOException A Java-specific IO exception,\n            possibly the result of creating a new InputStream\n            or Reader for the InputSource.\n @see org.xml.sax.InputSource\n","return_type":"InputSource"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Basic interface for resolving entities.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>If a SAX application needs to implement customized handling\n for external entities, it must implement this interface and\n register an instance with the SAX driver using the\n {@link org.xml.sax.XMLReader#setEntityResolver setEntityResolver}\n method.</p>\n\n <p>The XML reader will then allow the application to intercept any\n external entities (including the external DTD subset and external\n parameter entities, if any) before including them.</p>\n\n <p>Many SAX applications will not need to implement this interface,\n but it will be especially useful for applications that build\n XML documents from databases or other specialized input sources,\n or for applications that use URI types other than URLs.</p>\n\n <p>The following resolver would provide the application\n with a special character stream for the entity with the system\n identifier \"http://www.myhost.com/today\":</p>\n\n <pre>\n import org.xml.sax.EntityResolver;\n import org.xml.sax.InputSource;\n\n public class MyResolver implements EntityResolver {\n   public InputSource resolveEntity (String publicId, String systemId)\n   {\n     if (systemId.equals(\"http://www.myhost.com/today\")) {\n              // return a special input source\n       MyReader reader = new MyReader();\n       return new InputSource(reader);\n     } else {\n              // use the default behaviour\n       return null;\n     }\n   }\n }\n </pre>\n\n <p>The application can also use this interface to redirect system\n identifiers to local URIs or to look up replacements in a catalog\n (possibly by using the public identifier).</p>\n\n @since SAX 1.0\n @author David Megginson\n @see org.xml.sax.XMLReader#setEntityResolver\n @see org.xml.sax.InputSource\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"DTDHandler","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"String:name,String:publicId,String:systemId","name":"notationDecl","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of a notation declaration event.\n\n <p>It is up to the application to record the notation for later\n reference, if necessary;\n notations may appear as attribute values and in unparsed entity\n declarations, and are sometime used with processing instruction\n target names.</p>\n\n <p>At least one of publicId and systemId must be non-null.\n If a system identifier is present, and it is a URL, the SAX\n parser must resolve it fully before passing it to the\n application through this event.</p>\n\n <p>There is no guarantee that the notation declaration will be\n reported before any unparsed entities that use it.</p>\n\n @param name The notation name.\n @param publicId The notation's public identifier, or null if\n        none was given.\n @param systemId The notation's system identifier, or null if\n        none was given.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see #unparsedEntityDecl\n @see org.xml.sax.Attributes\n","return_type":"void"},{"parameters":"String:name,String:publicId,String:systemId,String:notationName","name":"unparsedEntityDecl","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of an unparsed entity declaration event.\n\n <p>Note that the notation name corresponds to a notation\n reported by the {@link #notationDecl notationDecl} event.\n It is up to the application to record the entity for later\n reference, if necessary;\n unparsed entities may appear as attribute values.\n </p>\n\n <p>If the system identifier is a URL, the parser must resolve it\n fully before passing it to the application.</p>\n\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @param name The unparsed entity's name.\n @param publicId The entity's public identifier, or null if none\n        was given.\n @param systemId The entity's system identifier.\n @param notationName The name of the associated notation.\n @see #notationDecl\n @see org.xml.sax.Attributes\n","return_type":"void"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of basic DTD-related events.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>If a SAX application needs information about notations and\n unparsed entities, then the application implements this\n interface and registers an instance with the SAX parser using\n the parser's setDTDHandler method.  The parser uses the\n instance to report notation and unparsed entity declarations to\n the application.</p>\n\n <p>Note that this interface includes only those DTD events that\n the XML recommendation <em>requires</em> processors to report:\n notation and unparsed entity declarations.</p>\n\n <p>The SAX parser may report these events in any order, regardless\n of the order in which the notations and unparsed entities were\n declared; however, all DTD events must be reported after the\n document handler's startDocument event, and before the first\n startElement event.\n (If the {@link org.xml.sax.ext.LexicalHandler LexicalHandler} is\n used, these events must also be reported before the endDTD event.)\n </p>\n\n <p>It is up to the application to store the information for\n future use (perhaps in a hash table or object tree).\n If the application encounters attributes of type \"NOTATION\",\n \"ENTITY\", or \"ENTITIES\", it can use the information that it\n obtained through this interface to find the entity and/or\n notation corresponding with the attribute value.</p>\n\n @since SAX 1.0\n @author David Megginson\n @see org.xml.sax.XMLReader#setDTDHandler\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ContentHandler","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"Locator:locator","name":"setDocumentLocator","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive an object for locating the origin of SAX document events.\n\n <p>SAX parsers are strongly encouraged (though not absolutely\n required) to supply a locator: if it does so, it must supply\n the locator to the application by invoking this method before\n invoking any of the other methods in the ContentHandler\n interface.</p>\n\n <p>The locator allows the application to determine the end\n position of any document-related event, even if the parser is\n not reporting an error.  Typically, the application will\n use this information for reporting its own errors (such as\n character content that does not match an application's\n business rules).  The information returned by the locator\n is probably not sufficient for use with a search engine.</p>\n\n <p>Note that the locator will return correct information only\n during the invocation SAX event callbacks after\n {@link #startDocument startDocument} returns and before\n {@link #endDocument endDocument} is called.  The\n application should not attempt to use it at any other time.</p>\n\n @param locator an object that can return the location of\n                any SAX document event\n @see org.xml.sax.Locator\n","return_type":"void"},{"parameters":null,"name":"startDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of the beginning of a document.\n\n <p>The SAX parser will invoke this method only once, before any\n other event callbacks (except for {@link #setDocumentLocator\n setDocumentLocator}).</p>\n\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n @see #endDocument\n","return_type":"void"},{"parameters":null,"name":"endDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of the end of a document.\n\n <p><strong>There is an apparent contradiction between the\n documentation for this method and the documentation for {@link\n org.xml.sax.ErrorHandler#fatalError}.  Until this ambiguity is\n resolved in a future major release, clients should make no\n assumptions about whether endDocument() will or will not be\n invoked when the parser has reported a fatalError() or thrown\n an exception.</strong></p>\n\n <p>The SAX parser will invoke this method only once, and it will\n be the last method invoked during the parse.  The parser shall\n not invoke this method until it has either abandoned parsing\n (because of an unrecoverable error) or reached the end of\n input.</p>\n\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n @see #startDocument\n","return_type":"void"},{"parameters":"String:prefix,String:uri","name":"startPrefixMapping","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Begin the scope of a prefix-URI Namespace mapping.\n\n <p>The information from this event is not necessary for\n normal Namespace processing: the SAX XML reader will\n automatically replace prefixes for element and attribute\n names when the <code>http://xml.org/sax/features/namespaces</code>\n feature is <var>true</var> (the default).</p>\n\n <p>There are cases, however, when applications need to\n use prefixes in character data or in attribute values,\n where they cannot safely be expanded automatically; the\n start/endPrefixMapping event supplies the information\n to the application to expand prefixes in those contexts\n itself, if necessary.</p>\n\n <p>Note that start/endPrefixMapping events are not\n guaranteed to be properly nested relative to each other:\n all startPrefixMapping events will occur immediately before the\n corresponding {@link #startElement startElement} event,\n and all {@link #endPrefixMapping endPrefixMapping}\n events will occur immediately after the corresponding\n {@link #endElement endElement} event,\n but their order is not otherwise\n guaranteed.</p>\n\n <p>There should never be start/endPrefixMapping events for the\n \"xml\" prefix, since it is predeclared and immutable.</p>\n\n @param prefix the Namespace prefix being declared.\n  An empty string is used for the default element namespace,\n  which has no prefix.\n @param uri the Namespace URI the prefix is mapped to\n @throws org.xml.sax.SAXException the client may throw\n            an exception during processing\n @see #endPrefixMapping\n @see #startElement\n","return_type":"void"},{"parameters":"String:prefix","name":"endPrefixMapping","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" End the scope of a prefix-URI mapping.\n\n <p>See {@link #startPrefixMapping startPrefixMapping} for\n details.  These events will always occur immediately after the\n corresponding {@link #endElement endElement} event, but the order of\n {@link #endPrefixMapping endPrefixMapping} events is not otherwise\n guaranteed.</p>\n\n @param prefix the prefix that was being mapped.\n  This is the empty string when a default mapping scope ends.\n @throws org.xml.sax.SAXException the client may throw\n            an exception during processing\n @see #startPrefixMapping\n @see #endElement\n","return_type":"void"},{"parameters":"String:uri,String:localName,String:qName,Attributes:atts","name":"startElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of the beginning of an element.\n\n <p>The Parser will invoke this method at the beginning of every\n element in the XML document; there will be a corresponding\n {@link #endElement endElement} event for every startElement event\n (even when the element is empty). All of the element's content will be\n reported, in order, before the corresponding endElement\n event.</p>\n\n <p>This event allows up to three name components for each\n element:</p>\n\n <ol>\n <li>the Namespace URI;</li>\n <li>the local name; and</li>\n <li>the qualified (prefixed) name.</li>\n </ol>\n\n <p>Any or all of these may be provided, depending on the\n values of the <var>http://xml.org/sax/features/namespaces</var>\n and the <var>http://xml.org/sax/features/namespace-prefixes</var>\n properties:</p>\n\n <ul>\n <li>the Namespace URI and local name are required when\n the namespaces property is <var>true</var> (the default), and are\n optional when the namespaces property is <var>false</var> (if one is\n specified, both must be);</li>\n <li>the qualified name is required when the namespace-prefixes property\n is <var>true</var>, and is optional when the namespace-prefixes property\n is <var>false</var> (the default).</li>\n </ul>\n\n <p>Note that the attribute list provided will contain only\n attributes with explicit values (specified or defaulted):\n #IMPLIED attributes will be omitted.  The attribute list\n will contain attributes used for Namespace declarations\n (xmlns* attributes) only if the\n <code>http://xml.org/sax/features/namespace-prefixes</code>\n property is true (it is false by default, and support for a\n true value is optional).</p>\n\n <p>Like {@link #characters characters()}, attribute values may have\n characters that need more than one <code>char</code> value.  </p>\n\n @param uri the Namespace URI, or the empty string if the\n        element has no Namespace URI or if Namespace\n        processing is not being performed\n @param localName the local name (without prefix), or the\n        empty string if Namespace processing is not being\n        performed\n @param qName the qualified name (with prefix), or the\n        empty string if qualified names are not available\n @param atts the attributes attached to the element.  If\n        there are no attributes, it shall be an empty\n        Attributes object.  The value of this object after\n        startElement returns is undefined\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n @see #endElement\n @see org.xml.sax.Attributes\n @see org.xml.sax.helpers.AttributesImpl\n","return_type":"void"},{"parameters":"String:uri,String:localName,String:qName","name":"endElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of the end of an element.\n\n <p>The SAX parser will invoke this method at the end of every\n element in the XML document; there will be a corresponding\n {@link #startElement startElement} event for every endElement\n event (even when the element is empty).</p>\n\n <p>For information on the names, see startElement.</p>\n\n @param uri the Namespace URI, or the empty string if the\n        element has no Namespace URI or if Namespace\n        processing is not being performed\n @param localName the local name (without prefix), or the\n        empty string if Namespace processing is not being\n        performed\n @param qName the qualified XML name (with prefix), or the\n        empty string if qualified names are not available\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n","return_type":"void"},{"parameters":"char[]:ch,int:start,int:length","name":"characters","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of character data.\n\n <p>The Parser will call this method to report each chunk of\n character data.  SAX parsers may return all contiguous character\n data in a single chunk, or they may split it into several\n chunks; however, all of the characters in any single event\n must come from the same external entity so that the Locator\n provides useful information.</p>\n\n <p>The application must not attempt to read from the array\n outside of the specified range.</p>\n\n <p>Individual characters may consist of more than one Java\n <code>char</code> value.  There are two important cases where this\n happens, because characters can't be represented in just sixteen bits.\n In one case, characters are represented in a <em>Surrogate Pair</em>,\n using two special Unicode values. Such characters are in the so-called\n \"Astral Planes\", with a code point above U+FFFF.  A second case involves\n composite characters, such as a base character combining with one or\n more accent characters. </p>\n\n <p> Your code should not assume that algorithms using\n <code>char</code>-at-a-time idioms will be working in character\n units; in some cases they will split characters.  This is relevant\n wherever XML permits arbitrary characters, such as attribute values,\n processing instruction data, and comments as well as in data reported\n from this method.  It's also generally relevant whenever Java code\n manipulates internationalized text; the issue isn't unique to XML.</p>\n\n <p>Note that some parsers will report whitespace in element\n content using the {@link #ignorableWhitespace ignorableWhitespace}\n method rather than this one (validating parsers <em>must</em>\n do so).</p>\n\n @param ch the characters from the XML document\n @param start the start position in the array\n @param length the number of characters to read from the array\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n @see #ignorableWhitespace\n @see org.xml.sax.Locator\n","return_type":"void"},{"parameters":"char[]:ch,int:start,int:length","name":"ignorableWhitespace","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of ignorable whitespace in element content.\n\n <p>Validating Parsers must use this method to report each chunk\n of whitespace in element content (see the W3C XML 1.0\n recommendation, section 2.10): non-validating parsers may also\n use this method if they are capable of parsing and using\n content models.</p>\n\n <p>SAX parsers may return all contiguous whitespace in a single\n chunk, or they may split it into several chunks; however, all of\n the characters in any single event must come from the same\n external entity, so that the Locator provides useful\n information.</p>\n\n <p>The application must not attempt to read from the array\n outside of the specified range.</p>\n\n @param ch the characters from the XML document\n @param start the start position in the array\n @param length the number of characters to read from the array\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n @see #characters\n","return_type":"void"},{"parameters":"String:target,String:data","name":"processingInstruction","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of a processing instruction.\n\n <p>The Parser will invoke this method once for each processing\n instruction found: note that processing instructions may occur\n before or after the main document element.</p>\n\n <p>A SAX parser must never report an XML declaration (XML 1.0,\n section 2.8) or a text declaration (XML 1.0, section 4.3.1)\n using this method.</p>\n\n <p>Like {@link #characters characters()}, processing instruction\n data may have characters that need more than one <code>char</code>\n value. </p>\n\n @param target the processing instruction target\n @param data the processing instruction data, or null if\n        none was supplied.  The data does not include any\n        whitespace separating it from the target\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n","return_type":"void"},{"parameters":"String:name","name":"skippedEntity","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of a skipped entity.\n This is not called for entity references within markup constructs\n such as element start tags or markup declarations.  (The XML\n recommendation requires reporting skipped external entities.\n SAX also reports internal entity expansion/non-expansion, except\n within markup constructs.)\n\n <p>The Parser will invoke this method each time the entity is\n skipped.  Non-validating processors may skip entities if they\n have not seen the declarations (because, for example, the\n entity was declared in an external DTD subset).  All processors\n may skip external entities, depending on the values of the\n <code>http://xml.org/sax/features/external-general-entities</code>\n and the\n <code>http://xml.org/sax/features/external-parameter-entities</code>\n properties.</p>\n\n @param name the name of the skipped entity.  If it is a\n        parameter entity, the name will begin with '%', and if\n        it is the external DTD subset, it will be the string\n        \"[dtd]\"\n @throws org.xml.sax.SAXException any SAX exception, possibly\n            wrapping another exception\n","return_type":"void"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Receive notification of the logical content of a document.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>This is the main interface that most SAX applications\n implement: if the application needs to be informed of basic parsing\n events, it implements this interface and registers an instance with\n the SAX parser using the {@link org.xml.sax.XMLReader#setContentHandler\n setContentHandler} method.  The parser uses the instance to report\n basic document-related events like the start and end of elements\n and character data.</p>\n\n <p>The order of events in this interface is very important, and\n mirrors the order of information in the document itself.  For\n example, all of an element's content (character data, processing\n instructions, and/or subelements) will appear, in order, between\n the startElement event and the corresponding endElement event.</p>\n\n <p>This interface is similar to the now-deprecated SAX 1.0\n DocumentHandler interface, but it adds support for Namespaces\n and for reporting skipped entities (in non-validating XML\n processors).</p>\n\n <p>Implementors should note that there is also a\n <code>ContentHandler</code> class in the <code>java.net</code>\n package; that means that it's probably a bad idea to do</p>\n\n <pre>import java.net.*;\n import org.xml.sax.*;\n </pre>\n\n <p>In fact, \"import ...*\" is usually a sign of sloppy programming\n anyway, so the user should consider this a feature rather than a\n bug.</p>\n\n @since SAX 2.0\n @author David Megginson\n @see org.xml.sax.XMLReader\n @see org.xml.sax.DTDHandler\n @see org.xml.sax.ErrorHandler\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Attributes","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":null,"name":"getLength","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Return the number of attributes in the list.\n\n <p>Once you know the number of attributes, you can iterate\n through the list.</p>\n\n @return The number of attributes in the list.\n @see #getURI(int)\n @see #getLocalName(int)\n @see #getQName(int)\n @see #getType(int)\n @see #getValue(int)\n","return_type":"int"},{"parameters":"int:index","name":"getURI","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's Namespace URI by index.\n\n @param index The attribute index (zero-based).\n @return The Namespace URI, or the empty string if none\n         is available, or null if the index is out of\n         range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getLocalName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's local name by index.\n\n @param index The attribute index (zero-based).\n @return The local name, or the empty string if Namespace\n         processing is not being performed, or null\n         if the index is out of range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getQName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's XML qualified (prefixed) name by index.\n\n @param index The attribute index (zero-based).\n @return The XML qualified name, or the empty string\n         if none is available, or null if the index\n         is out of range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's type by index.\n\n <p>The attribute type is one of the strings \"CDATA\", \"ID\",\n \"IDREF\", \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\",\n or \"NOTATION\" (always in upper case).</p>\n\n <p>If the parser has not read a declaration for the attribute,\n or if the parser does not report attribute types, then it must\n return the value \"CDATA\" as stated in the XML 1.0 Recommendation\n (clause 3.3.3, \"Attribute-Value Normalization\").</p>\n\n <p>For an enumerated attribute that is not a notation, the\n parser will report the type as \"NMTOKEN\".</p>\n\n @param index The attribute index (zero-based).\n @return The attribute's type as a string, or null if the\n         index is out of range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's value by index.\n\n <p>If the attribute value is a list of tokens (IDREFS,\n ENTITIES, or NMTOKENS), the tokens will be concatenated\n into a single string with each token separated by a\n single space.</p>\n\n @param index The attribute index (zero-based).\n @return The attribute's value as a string, or null if the\n         index is out of range.\n @see #getLength\n","return_type":"String"},{"parameters":"String:uri,String:localName","name":"getIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up the index of an attribute by Namespace name.\n\n @param uri The Namespace URI, or the empty string if\n        the name has no Namespace URI.\n @param localName The attribute's local name.\n @return The index of the attribute, or -1 if it does not\n         appear in the list.\n","return_type":"int"},{"parameters":"String:qName","name":"getIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up the index of an attribute by XML qualified (prefixed) name.\n\n @param qName The qualified (prefixed) name.\n @return The index of the attribute, or -1 if it does not\n         appear in the list.\n","return_type":"int"},{"parameters":"String:uri,String:localName","name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's type by Namespace name.\n\n <p>See {@link #getType(int) getType(int)} for a description\n of the possible types.</p>\n\n @param uri The Namespace URI, or the empty String if the\n        name has no Namespace URI.\n @param localName The local name of the attribute.\n @return The attribute type as a string, or null if the\n         attribute is not in the list or if Namespace\n         processing is not being performed.\n","return_type":"String"},{"parameters":"String:qName","name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's type by XML qualified (prefixed) name.\n\n <p>See {@link #getType(int) getType(int)} for a description\n of the possible types.</p>\n\n @param qName The XML qualified name.\n @return The attribute type as a string, or null if the\n         attribute is not in the list or if qualified names\n         are not available.\n","return_type":"String"},{"parameters":"String:uri,String:localName","name":"getValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's value by Namespace name.\n\n <p>See {@link #getValue(int) getValue(int)} for a description\n of the possible values.</p>\n\n @param uri The Namespace URI, or the empty String if the\n        name has no Namespace URI.\n @param localName The local name of the attribute.\n @return The attribute value as a string, or null if the\n         attribute is not in the list.\n","return_type":"String"},{"parameters":"String:qName","name":"getValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Look up an attribute's value by XML qualified (prefixed) name.\n\n <p>See {@link #getValue(int) getValue(int)} for a description\n of the possible values.</p>\n\n @param qName The XML qualified name.\n @return The attribute value as a string, or null if the\n         attribute is not in the list or if qualified names\n         are not available.\n","return_type":"String"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.xml.sax","description":" Interface for a list of XML attributes.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>This interface allows access to a list of attributes in\n three different ways:</p>\n\n <ol>\n <li>by attribute index;</li>\n <li>by Namespace-qualified name; or</li>\n <li>by qualified (prefixed) name.</li>\n </ol>\n\n <p>The list will not contain attributes that were declared\n #IMPLIED but not specified in the start tag.  It will also not\n contain attributes used as Namespace declarations (xmlns*) unless\n the <code>http://xml.org/sax/features/namespace-prefixes</code>\n feature is set to <var>true</var> (it is <var>false</var> by\n default).\n Because SAX2 conforms to the original \"Namespaces in XML\"\n recommendation, it normally does not\n give namespace declaration attributes a namespace URI.\n </p>\n\n <p>Some SAX2 parsers may support using an optional feature flag\n (<code>http://xml.org/sax/features/xmlns-uris</code>) to request\n that those attributes be given URIs, conforming to a later\n backwards-incompatible revision of that recommendation.  (The\n attribute's \"local name\" will be the prefix, or \"xmlns\" when\n defining a default element namespace.)  For portability, handler\n code should always resolve that conflict, rather than requiring\n parsers that can change the setting of that feature flag.  </p>\n\n <p>If the namespace-prefixes feature (see above) is\n <var>false</var>, access by qualified name may not be available; if\n the <code>http://xml.org/sax/features/namespaces</code> feature is\n <var>false</var>, access by Namespace-qualified names may not be\n available.</p>\n\n <p>This interface replaces the now-deprecated SAX1 {@link\n org.xml.sax.AttributeList AttributeList} interface, which does not\n contain Namespace support.  In addition to Namespace support, it\n adds the <var>getIndex</var> methods (below).</p>\n\n <p>The order of attributes in the list is unspecified, and will\n vary from implementation to implementation.</p>\n\n @since SAX 2.0\n @author David Megginson\n @see org.xml.sax.helpers.AttributesImpl\n @see org.xml.sax.ext.DeclHandler#attributeDecl\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"DefaultHandler","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"DefaultHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":"","return_type":null}],"methods":[{"parameters":"String:publicId,String:systemId","name":"resolveEntity","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Resolve an external entity.\n\n <p>Always return null, so that the parser will use the system\n identifier provided in the XML document.  This method implements\n the SAX default behaviour: application writers can override it\n in a subclass to do special translations such as catalog lookups\n or URI redirection.</p>\n\n @param publicId The public identifier, or null if none is\n                 available.\n @param systemId The system identifier provided in the XML\n                 document.\n @return The new input source, or null to require the\n         default behaviour.\n @exception java.io.IOException If there is an error setting\n            up the new input source.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.EntityResolver#resolveEntity\n","return_type":"InputSource"},{"parameters":"String:name,String:publicId,String:systemId","name":"notationDecl","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of a notation declaration.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass if they wish to keep track of the notations\n declared in a document.</p>\n\n @param name The notation name.\n @param publicId The notation public identifier, or null if not\n                 available.\n @param systemId The notation system identifier.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.DTDHandler#notationDecl\n","return_type":"void"},{"parameters":"String:name,String:publicId,String:systemId,String:notationName","name":"unparsedEntityDecl","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of an unparsed entity declaration.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to keep track of the unparsed entities\n declared in a document.</p>\n\n @param name The entity name.\n @param publicId The entity public identifier, or null if not\n                 available.\n @param systemId The entity system identifier.\n @param notationName The name of the associated notation.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.DTDHandler#unparsedEntityDecl\n","return_type":"void"},{"parameters":"Locator:locator","name":"setDocumentLocator","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive a Locator object for document events.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass if they wish to store the locator for use\n with other document events.</p>\n\n @param locator A locator for all SAX document events.\n @see org.xml.sax.ContentHandler#setDocumentLocator\n @see org.xml.sax.Locator\n","return_type":"void"},{"parameters":null,"name":"startDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of the beginning of the document.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions at the beginning\n of a document (such as allocating the root node of a tree or\n creating an output file).</p>\n\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#startDocument\n","return_type":"void"},{"parameters":null,"name":"endDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of the end of the document.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions at the end\n of a document (such as finalising a tree or closing an output\n file).</p>\n\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#endDocument\n","return_type":"void"},{"parameters":"String:prefix,String:uri","name":"startPrefixMapping","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of the start of a Namespace mapping.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions at the start of\n each Namespace prefix scope (such as storing the prefix mapping).</p>\n\n @param prefix The Namespace prefix being declared.\n @param uri The Namespace URI mapped to the prefix.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#startPrefixMapping\n","return_type":"void"},{"parameters":"String:prefix","name":"endPrefixMapping","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of the end of a Namespace mapping.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions at the end of\n each prefix mapping.</p>\n\n @param prefix The Namespace prefix being declared.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#endPrefixMapping\n","return_type":"void"},{"parameters":"String:uri,String:localName,String:qName,Attributes:attributes","name":"startElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of the start of an element.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions at the start of\n each element (such as allocating a new tree node or writing\n output to a file).</p>\n\n @param uri The Namespace URI, or the empty string if the\n        element has no Namespace URI or if Namespace\n        processing is not being performed.\n @param localName The local name (without prefix), or the\n        empty string if Namespace processing is not being\n        performed.\n @param qName The qualified name (with prefix), or the\n        empty string if qualified names are not available.\n @param attributes The attributes attached to the element.  If\n        there are no attributes, it shall be an empty\n        Attributes object.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#startElement\n","return_type":"void"},{"parameters":"String:uri,String:localName,String:qName","name":"endElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of the end of an element.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions at the end of\n each element (such as finalising a tree node or writing\n output to a file).</p>\n\n @param uri The Namespace URI, or the empty string if the\n        element has no Namespace URI or if Namespace\n        processing is not being performed.\n @param localName The local name (without prefix), or the\n        empty string if Namespace processing is not being\n        performed.\n @param qName The qualified name (with prefix), or the\n        empty string if qualified names are not available.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#endElement\n","return_type":"void"},{"parameters":"char[]:ch,int:start,int:length","name":"characters","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of character data inside an element.\n\n <p>By default, do nothing.  Application writers may override this\n method to take specific actions for each chunk of character data\n (such as adding the data to a node or buffer, or printing it to\n a file).</p>\n\n @param ch The characters.\n @param start The start position in the character array.\n @param length The number of characters to use from the\n               character array.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#characters\n","return_type":"void"},{"parameters":"char[]:ch,int:start,int:length","name":"ignorableWhitespace","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of ignorable whitespace in element content.\n\n <p>By default, do nothing.  Application writers may override this\n method to take specific actions for each chunk of ignorable\n whitespace (such as adding data to a node or buffer, or printing\n it to a file).</p>\n\n @param ch The whitespace characters.\n @param start The start position in the character array.\n @param length The number of characters to use from the\n               character array.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#ignorableWhitespace\n","return_type":"void"},{"parameters":"String:target,String:data","name":"processingInstruction","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of a processing instruction.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions for each\n processing instruction, such as setting status variables or\n invoking other methods.</p>\n\n @param target The processing instruction target.\n @param data The processing instruction data, or null if\n             none is supplied.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#processingInstruction\n","return_type":"void"},{"parameters":"String:name","name":"skippedEntity","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of a skipped entity.\n\n <p>By default, do nothing.  Application writers may override this\n method in a subclass to take specific actions for each\n processing instruction, such as setting status variables or\n invoking other methods.</p>\n\n @param name The name of the skipped entity.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ContentHandler#processingInstruction\n","return_type":"void"},{"parameters":"SAXParseException:e","name":"warning","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of a parser warning.\n\n <p>The default implementation does nothing.  Application writers\n may override this method in a subclass to take specific actions\n for each warning, such as inserting the message in a log file or\n printing it to the console.</p>\n\n @param e The warning information encoded as an exception.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ErrorHandler#warning\n @see org.xml.sax.SAXParseException\n","return_type":"void"},{"parameters":"SAXParseException:e","name":"error","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Receive notification of a recoverable parser error.\n\n <p>The default implementation does nothing.  Application writers\n may override this method in a subclass to take specific actions\n for each error, such as inserting the message in a log file or\n printing it to the console.</p>\n\n @param e The error information encoded as an exception.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ErrorHandler#warning\n @see org.xml.sax.SAXParseException\n","return_type":"void"},{"parameters":"SAXParseException:e","name":"fatalError","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Report a fatal XML parsing error.\n\n <p>The default implementation throws a SAXParseException.\n Application writers may override this method in a subclass if\n they need to take specific actions for each fatal error (such as\n collecting all of the errors into a single report): in any case,\n the application must stop all regular processing when this\n method is invoked, since the document is no longer reliable, and\n the parser may no longer report parsing events.</p>\n\n @param e The error information encoded as an exception.\n @exception org.xml.sax.SAXException Any SAX exception, possibly\n            wrapping another exception.\n @see org.xml.sax.ErrorHandler#fatalError\n @see org.xml.sax.SAXParseException\n","return_type":"void"}],"fields":[],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.xml.sax.helpers","description":" Default base class for SAX2 event handlers.\n\n <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote>\n\n <p>This class is available as a convenience base class for SAX2\n applications: it provides default implementations for all of the\n callbacks in the four core SAX2 handler classes:</p>\n\n <ul>\n <li>{@link org.xml.sax.EntityResolver EntityResolver}</li>\n <li>{@link org.xml.sax.DTDHandler DTDHandler}</li>\n <li>{@link org.xml.sax.ContentHandler ContentHandler}</li>\n <li>{@link org.xml.sax.ErrorHandler ErrorHandler}</li>\n </ul>\n\n <p>Application writers can extend this class when they need to\n implement only part of an interface; parser writers can\n instantiate this class to provide default handlers when the\n application has not supplied its own.</p>\n\n <p>This class replaces the deprecated SAX1\n {@link org.xml.sax.HandlerBase HandlerBase} class.</p>\n\n @since SAX 2.0\n @author David Megginson,\n @see org.xml.sax.EntityResolver\n @see org.xml.sax.DTDHandler\n @see org.xml.sax.ContentHandler\n @see org.xml.sax.ErrorHandler\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"XMLStreamWriter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[{"parameters":"String:localName","name":"writeStartElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Writes a start tag to the output.  All writeStartElement methods\n open a new scope in the internal namespace context.  Writing the\n corresponding EndElement causes the scope to be closed.\n @param localName local name of the tag, may not be null\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:localName","name":"writeEmptyElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Writes an empty element tag to the output\n @param localName local name of the tag, may not be null\n @throws XMLStreamException\n","return_type":"void"},{"parameters":null,"name":"writeEndElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Writes an end tag to the output relying on the internal\n state of the writer to determine the prefix and local name\n of the event.\n @throws XMLStreamException\n","return_type":"void"},{"parameters":null,"name":"writeEndDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Closes any start tags and writes corresponding end tags.\n @throws XMLStreamException\n","return_type":"void"},{"parameters":null,"name":"close","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Close this writer and free any resources associated with the\n writer.  This must not close the underlying output stream.\n @throws XMLStreamException\n","return_type":"void"},{"parameters":null,"name":"flush","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Write any cached data to the underlying output mechanism.\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:localName,String:value","name":"writeAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Writes an attribute to the output stream without\n a prefix.\n @param localName the local name of the attribute\n @param value the value of the attribute\n @throws IllegalStateException if the current state does not allow Attribute writing\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:data","name":"writeCData","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Writes a CData section\n @param data the data contained in the CData Section, may not be null\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:dtd","name":"writeDTD","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Write a DTD section.  This string represents the entire doctypedecl production\n from the XML 1.0 specification.\n\n @param dtd the DTD to be written\n @throws XMLStreamException\n","return_type":"void"},{"parameters":null,"name":"writeStartDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Write the XML Declaration. Defaults the XML version to 1.0, and the encoding to utf-8\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:version","name":"writeStartDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Write the XML Declaration. Defaults the the encoding to utf-8\n @param version version of the xml document\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:encoding,String:version","name":"writeStartDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Write the XML Declaration.  Note that the encoding parameter does\n not set the actual encoding of the underlying output.  That must\n be set when the instance of the XMLStreamWriter is created using the\n XMLOutputFactory\n @param encoding encoding of the xml declaration\n @param version version of the xml document\n @throws XMLStreamException If given encoding does not match encoding\n of the underlying stream\n","return_type":"void"},{"parameters":"String:text","name":"writeCharacters","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Write text to the output\n @param text the value to write\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"char[]:text,int:start,int:len","name":"writeCharacters","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Write text to the output\n @param text the value to write\n @param start the starting position in the array\n @param len the number of characters to write\n @throws XMLStreamException\n","return_type":"void"}],"fields":[{"parameters":null,"name":"DEFAULT_XML_VERSION","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"DEFAULT_ENCODING","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.util.xml","description":" Basic XMLStreamWriter for writing simple XML files such as those\n defined in java.util.Properties\n\n This is a subset of javax.xml.stream.XMLStreamWriter\n\n @author Joe Wang\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"XMLStreamException","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"XMLStreamException","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Default constructor\n","return_type":null},{"parameters":"String:msg","name":"XMLStreamException","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Construct an exception with the associated message.\n\n @param msg the message to report\n","return_type":null},{"parameters":"Throwable:th","name":"XMLStreamException","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Construct an exception with the associated exception\n\n @param th a nested exception\n","return_type":null},{"parameters":"String:msg,Throwable:th","name":"XMLStreamException","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Construct an exception with the associated message and exception\n\n @param th a nested exception\n @param msg the message to report\n","return_type":null}],"methods":[{"parameters":null,"name":"getNestedException","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Gets the nested exception.\n\n @return Nested exception\n","return_type":"Throwable"}],"fields":[{"parameters":null,"name":"serialVersionUID","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"nested","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml","description":" A copy of the StAX XMLStreamException without Location support\n\n The base exception for unexpected processing errors.  This Exception\n class is used to report well-formedness errors as well as unexpected\n processing conditions.\n @version 1.0\n @author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.\n @since 1.6\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SAXParser","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SAXParser","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml","description":" <p>Protected constructor to prevent instantiation.</p>\n","return_type":null}],"methods":[{"parameters":"InputStream:is,DefaultHandler:dh","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Parse the content of the given {@link java.io.InputStream}\n instance as XML using the specified\n {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param is InputStream containing the content to be parsed.\n @param dh The SAX DefaultHandler to use.\n\n @throws IllegalArgumentException If the given InputStream is null.\n @throws IOException If any IO errors occur.\n @throws SAXException If any SAX errors occur during processing.\n\n @see org.xml.sax.DocumentHandler\n","return_type":"void"},{"parameters":"String:uri,DefaultHandler:dh","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Parse the content described by the giving Uniform Resource\n Identifier (URI) as XML using the specified\n {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param uri The location of the content to be parsed.\n @param dh The SAX DefaultHandler to use.\n\n @throws IllegalArgumentException If the uri is null.\n @throws IOException If any IO errors occur.\n @throws SAXException If any SAX errors occur during processing.\n\n @see org.xml.sax.DocumentHandler\n","return_type":"void"},{"parameters":"File:f,DefaultHandler:dh","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Parse the content of the file specified as XML using the\n specified {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param f The file containing the XML to parse\n @param dh The SAX DefaultHandler to use.\n\n @throws IllegalArgumentException If the File object is null.\n @throws IOException If any IO errors occur.\n @throws SAXException If any SAX errors occur during processing.\n\n @see org.xml.sax.DocumentHandler\n","return_type":"void"},{"parameters":"InputSource:is,DefaultHandler:dh","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Parse the content given {@link org.xml.sax.InputSource}\n as XML using the specified\n {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param is The InputSource containing the content to be parsed.\n @param dh The SAX DefaultHandler to use.\n\n @throws IllegalArgumentException If the <code>InputSource</code> object\n   is <code>null</code>.\n @throws IOException If any IO errors occur.\n @throws SAXException If any SAX errors occur during processing.\n\n @see org.xml.sax.DocumentHandler\n","return_type":"void"},{"parameters":null,"name":"getXMLReader","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Returns the {@link org.xml.sax.XMLReader} that is encapsulated by the\n implementation of this class.\n\n @return The XMLReader that is encapsulated by the\n         implementation of this class.\n\n @throws SAXException If any SAX errors occur during processing.\n","return_type":"XMLReader"},{"parameters":null,"name":"isNamespaceAware","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Indicates whether or not this parser is configured to\n understand namespaces.\n\n @return true if this parser is configured to\n         understand namespaces; false otherwise.\n","return_type":"boolean"},{"parameters":null,"name":"isValidating","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" Indicates whether or not this parser is configured to\n validate XML documents.\n\n @return true if this parser is configured to\n         validate XML documents; false otherwise.\n","return_type":"boolean"},{"parameters":null,"name":"isXIncludeAware","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":" <p>Get the XInclude processing mode for this parser.</p>\n\n @return\n      the return value of\n      the {@link SAXParserFactory#isXIncludeAware()}\n      when this parser was created from factory.\n\n @throws UnsupportedOperationException When implementation does not\n   override this method\n\n @since 1.5\n\n @see SAXParserFactory#setXIncludeAware(boolean)\n","return_type":"boolean"}],"fields":[],"abstract":true,"static":false,"final":false,"package":"jdk.internal.util.xml","description":" Defines the API that wraps an {@link org.xml.sax.XMLReader}\n implementation class. In JAXP 1.0, this class wrapped the\n {@link org.xml.sax.Parser} interface, however this interface was\n replaced by the {@link org.xml.sax.XMLReader}. For ease\n of transition, this class continues to support the same name\n and interface as well as supporting new methods.\n\n An instance of this class can be obtained from the\n {@link javax.xml.parsers.SAXParserFactory#newSAXParser()} method.\n Once an instance of this class is obtained, XML can be parsed from\n a variety of input sources. These input sources are InputStreams,\n Files, URLs, and SAX InputSources.<p>\n\n This static method creates a new factory instance based\n on a system property setting or uses the platform default\n if no property has been defined.<p>\n\n The system property that controls which Factory implementation\n to create is named <code>&quot;javax.xml.parsers.SAXParserFactory&quot;</code>.\n This property names a class that is a concrete subclass of this\n abstract class. If no property is defined, a platform default\n will be used.</p>\n\n As the content is parsed by the underlying parser, methods of the\n given\n {@link org.xml.sax.helpers.DefaultHandler} are called.<p>\n\n Implementors of this class which wrap an underlaying implementation\n can consider using the {@link org.xml.sax.helpers.ParserAdapter}\n class to initially adapt their SAX1 implementation to work under\n this revised class.\n\n @author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>\n @version $Revision: 1.8 $, $Date: 2010-11-01 04:36:09 $\n\n @author Joe Wang\n This is a subset of that in JAXP, javax.xml.parsers.SAXParser\n\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"PropertiesDefaultHandler","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"PropertiesDefaultHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null}],"methods":[{"parameters":"Properties:props,InputStream:in","name":"load","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"Properties:props,OutputStream:os,String:comment,String:encoding","name":"store","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"String:uri,String:localName,String:qName,Attributes:attributes","name":"startElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"char[]:ch,int:start,int:length","name":"characters","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"String:uri,String:localName,String:qName","name":"endElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"String:name,String:publicId,String:systemId","name":"notationDecl","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"String:pubid,String:sysid","name":"resolveEntity","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"InputSource"},{"parameters":"SAXParseException:x","name":"error","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"SAXParseException:x","name":"fatalError","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"SAXParseException:x","name":"warning","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"ELEMENT_ROOT","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"ELEMENT_COMMENT","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"ELEMENT_ENTRY","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"ATTR_KEY","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"PROPS_DTD_DECL","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"PROPS_DTD_URI","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"PROPS_DTD","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"EXTERNAL_XML_VERSION","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml","description":" Version number for the format of exported properties files.\n","return_type":null},{"parameters":null,"name":"properties","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"ALLOWED_ELEMENTS","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"ALLOWED_COMMENT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"buf","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"sawComment","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"validEntry","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"rootElem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"key","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null},{"parameters":null,"name":"rootElm","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml","description":" A class used to aid in Properties load and save in XML. This class is\n re-implemented using a subset of SAX\n\n @author Joe Wang\n @since 8\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"BasicXmlPropertiesProvider","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"BasicXmlPropertiesProvider","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":null}],"methods":[{"parameters":"Properties:props,InputStream:in","name":"load","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"},{"parameters":"Properties:props,OutputStream:os,String:comment,String:encoding","name":"store","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml","description":"","return_type":"void"}],"fields":[],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml","description":" A {@code XmlPropertiesProvider} implementation that uses the UKit XML parser.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"XMLWriter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"OutputStream:os,String:encoding,Charset:cs","name":"XMLWriter","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"methods":[{"parameters":"char:ch","name":"canEncode","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"boolean"},{"parameters":"String:s","name":"write","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"String:str,int:off,int:len","name":"write","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"char[]:cbuf,int:off,int:len","name":"write","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"int:b","name":"write","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":null,"name":"flush","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":null,"name":"close","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":null,"name":"nl","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"OutputStream:output,String:encoding,Charset:cs","name":"getWriter","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns a writer for the specified encoding based on an output stream.\n\n @param output The output stream\n @param encoding The encoding\n @return A suitable writer\n @throws UnsupportedEncodingException There is no convertor to support\n this encoding\n","return_type":"Writer"}],"fields":[{"parameters":null,"name":"_writer","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_encoder","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" In some cases, this charset encoder is used to determine if a char is\n encodable by underlying writer. For example, an 8-bit char from the\n extended ASCII set is not encodable by 7-bit ASCII encoder. Unencodable\n chars are escaped using XML numeric entities.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"\n @author huizwang\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"XMLStreamWriterImpl","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"OutputStream:os","name":"XMLStreamWriterImpl","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":"OutputStream:os,String:encoding","name":"XMLStreamWriterImpl","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"methods":[{"parameters":null,"name":"writeStartDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Write the XML Declaration. Defaults the XML version to 1.0, and the\n encoding to utf-8.\n\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:version","name":"writeStartDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Write the XML Declaration. Defaults the encoding to utf-8\n\n @param version version of the xml document\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:encoding,String:version","name":"writeStartDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Write the XML Declaration. Note that the encoding parameter does not set\n the actual encoding of the underlying output. That must be set when the\n instance of the XMLStreamWriter is created\n\n @param encoding encoding of the xml declaration\n @param version version of the xml document\n @throws XMLStreamException If given encoding does not match encoding of the\n underlying stream\n","return_type":"void"},{"parameters":"String:encoding,String:version,String:standalone","name":"writeStartDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Write the XML Declaration. Note that the encoding parameter does not set\n the actual encoding of the underlying output. That must be set when the\n instance of the XMLStreamWriter is created\n\n @param encoding encoding of the xml declaration\n @param version version of the xml document\n @param standalone indicate if the xml document is standalone\n @throws XMLStreamException If given encoding does not match encoding of the\n underlying stream\n","return_type":"void"},{"parameters":"String:dtd","name":"writeDTD","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Write a DTD section.  This string represents the entire doctypedecl production\n from the XML 1.0 specification.\n\n @param dtd the DTD to be written\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:localName","name":"writeStartElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Writes a start tag to the output.\n @param localName local name of the tag, may not be null\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:localName","name":"writeEmptyElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Writes an empty element tag to the output\n @param localName local name of the tag, may not be null\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:localName,String:value","name":"writeAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Writes an attribute to the output stream without a prefix.\n @param localName the local name of the attribute\n @param value the value of the attribute\n @throws IllegalStateException if the current state does not allow Attribute writing\n @throws XMLStreamException\n","return_type":"void"},{"parameters":null,"name":"writeEndDocument","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":null,"name":"writeEndElement","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"String:cdata","name":"writeCData","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"String:data","name":"writeCharacters","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"char[]:data,int:start,int:len","name":"writeCharacters","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":null,"name":"close","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Close this XMLStreamWriter by closing underlying writer.\n","return_type":"void"},{"parameters":null,"name":"flush","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Flush this XMLStreamWriter by flushing underlying writer.\n","return_type":"void"},{"parameters":"boolean:doIndent","name":"setDoIndent","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Set the flag to indicate if the writer should add line separator\n @param doIndent\n","return_type":"void"},{"parameters":"char[]:content,int:start,int:length,boolean:escapeChars","name":"writeXMLContent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Writes XML content to underlying writer. Escapes characters unless\n escaping character feature is turned off.\n","return_type":"void"},{"parameters":"String:content","name":"writeXMLContent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"String:content,boolean:escapeChars,boolean:escapeDoubleQuotes","name":"writeXMLContent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Writes XML content to underlying writer. Escapes characters unless\n escaping character feature is turned off.\n","return_type":"void"},{"parameters":null,"name":"openStartTag","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" marks open of start tag and writes the same into the writer.\n","return_type":"void"},{"parameters":null,"name":"closeStartTag","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" marks close of start tag and writes the same into the writer.\n","return_type":"void"},{"parameters":null,"name":"writeLineSeparator","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Write a line separator\n @throws XMLStreamException\n","return_type":"void"},{"parameters":"String:encoding","name":"getCharset","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns a charset object for the specified encoding\n @param encoding\n @return a charset object\n @throws UnsupportedEncodingException if the encoding is not supported\n","return_type":"Charset"}],"fields":[{"parameters":null,"name":"STATE_XML_DECL","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"STATE_PROLOG","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"STATE_DTD_DECL","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"STATE_ELEMENT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"ELEMENT_STARTTAG_OPEN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"ELEMENT_STARTTAG_CLOSE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"ELEMENT_ENDTAG_OPEN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"ELEMENT_ENDTAG_CLOSE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"CLOSE_START_TAG","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"OPEN_START_TAG","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"OPEN_END_TAG","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"CLOSE_END_TAG","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"START_CDATA","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"END_CDATA","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"CLOSE_EMPTY_ELEMENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"ENCODING_PREFIX","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"SPACE","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"AMPERSAND","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"DOUBLEQUOT","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"SEMICOLON","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_state","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_currentEle","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_writer","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_encoding","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_escapeCharacters","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" This flag can be used to turn escaping off for content. It does\n not apply to attribute content.\n","return_type":null},{"parameters":null,"name":"_doIndent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_lineSep","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Implementation of a reduced version of XMLStreamWriter\n\n @author Joe Wang\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"XMLStreamWriterImpl.Element","modifier":"protected","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Element","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Default constructor.\n","return_type":null},{"parameters":"XMLStreamWriterImpl.Element:parent,String:localpart,boolean:isEmpty","name":"Element","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" @param parent the parent of the element\n @param localpart name of the element\n @param isEmpty indicate if the element is an empty one\n","return_type":null}],"methods":[{"parameters":null,"name":"getParent","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"XMLStreamWriterImpl.Element"},{"parameters":null,"name":"getLocalName","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"String"},{"parameters":null,"name":"getState","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" get the state of the element\n","return_type":"int"},{"parameters":"int:state","name":"setState","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Set the state of the element\n\n @param state the state of the element\n","return_type":"void"},{"parameters":null,"name":"isEmpty","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"boolean"}],"fields":[{"parameters":null,"name":"_parent","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" the parent element\n","return_type":null},{"parameters":null,"name":"_Depth","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" The size of the stack.\n","return_type":null},{"parameters":null,"name":"_isEmptyElement","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" indicate if an element is an empty one\n","return_type":null},{"parameters":null,"name":"_localpart","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"_state","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SAXParserImpl","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SAXParserImpl","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"methods":[{"parameters":null,"name":"getXMLReader","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns the {@link org.xml.sax.XMLReader} that is encapsulated by the\n implementation of this class.\n\n @return The XMLReader that is encapsulated by the\n         implementation of this class.\n\n @throws SAXException If any SAX errors occur during processing.\n","return_type":"XMLReader"},{"parameters":null,"name":"isNamespaceAware","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Indicates whether or not this parser is configured to\n understand namespaces.\n\n @return true if this parser is configured to\n         understand namespaces; false otherwise.\n","return_type":"boolean"},{"parameters":null,"name":"isValidating","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Indicates whether or not this parser is configured to validate\n XML documents.\n\n @return true if this parser is configured to validate XML\n          documents; false otherwise.\n","return_type":"boolean"},{"parameters":"InputStream:src,DefaultHandler:handler","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parse the content of the given {@link java.io.InputStream}\n instance as XML using the specified\n {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param src InputStream containing the content to be parsed.\n @param handler The SAX DefaultHandler to use.\n @exception IOException If any IO errors occur.\n @exception IllegalArgumentException If the given InputStream or handler is null.\n @exception SAXException If the underlying parser throws a\n SAXException while parsing.\n @see org.xml.sax.helpers.DefaultHandler\n","return_type":"void"},{"parameters":"InputSource:is,DefaultHandler:handler","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parse the content given {@link org.xml.sax.InputSource}\n as XML using the specified\n {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param is The InputSource containing the content to be parsed.\n @param handler The SAX DefaultHandler to use.\n @exception IOException If any IO errors occur.\n @exception IllegalArgumentException If the InputSource or handler is null.\n @exception SAXException If the underlying parser throws a\n SAXException while parsing.\n @see org.xml.sax.helpers.DefaultHandler\n","return_type":"void"}],"fields":[{"parameters":null,"name":"parser","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ReaderUTF8","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"InputStream:is","name":"ReaderUTF8","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n\n @param is A byte input stream.\n","return_type":null}],"methods":[{"parameters":"char[]:cbuf,int:off,int:len","name":"read","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads characters into a portion of an array.\n\n @param cbuf Destination buffer.\n @param off Offset at which to start storing characters.\n @param len Maximum number of characters to read.\n @exception IOException If any IO errors occur.\n @exception UnsupportedEncodingException If UCS-4 character occur in the stream.\n","return_type":"int"},{"parameters":null,"name":"read","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads a single character.\n\n @return The character read, as an integer in the range 0 to 65535\n  (0x00-0xffff), or -1 if the end of the stream has been reached.\n @exception IOException If any IO errors occur.\n @exception UnsupportedEncodingException If UCS-4 character occur in the stream.\n","return_type":"int"},{"parameters":null,"name":"close","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Closes the stream.\n\n @exception IOException If any IO errors occur.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"is","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" UTF-8 transformed UCS-2 character stream reader.\n\n This reader converts UTF-8 transformed UCS-2 characters to Java characters.\n The UCS-2 subset of UTF-8 transformation is described in RFC-2279 #2\n \"UTF-8 definition\":\n  0000 0000-0000 007F   0xxxxxxx\n  0000 0080-0000 07FF   110xxxxx 10xxxxxx\n  0000 0800-0000 FFFF   1110xxxx 10xxxxxx 10xxxxxx\n\n This reader will return incorrect last character on broken UTF-8 stream.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ReaderUTF16","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"InputStream:is,char:bo","name":"ReaderUTF16","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n\n Byte order argument can be: 'l' for little-endian or 'b' for big-endian.\n\n @param is A byte input stream.\n @param bo A byte order in the input stream.\n","return_type":null}],"methods":[{"parameters":"char[]:cbuf,int:off,int:len","name":"read","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads characters into a portion of an array.\n\n @param cbuf Destination buffer.\n @param off Offset at which to start storing characters.\n @param len Maximum number of characters to read.\n @exception IOException If any IO errors occur.\n","return_type":"int"},{"parameters":null,"name":"read","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads a single character.\n\n @return The character read, as an integer in the range 0 to 65535\n  (0x0000-0xffff), or -1 if the end of the stream has been reached.\n @exception IOException If any IO errors occur.\n","return_type":"int"},{"parameters":null,"name":"close","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Closes the stream.\n\n @exception IOException If any IO errors occur.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"is","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"bo","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" UTF-16 encoded stream reader.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ParserSAX","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"ParserSAX","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n","return_type":null}],"methods":[{"parameters":null,"name":"getContentHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the current content handler.\n\n @return The current content handler, or null if none has been registered.\n @see #setContentHandler\n","return_type":"ContentHandler"},{"parameters":"ContentHandler:handler","name":"setContentHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Allow an application to register a content event handler.\n\n <p>If the application does not register a content handler, all content\n events reported by the SAX parser will be silently ignored.</p>\n\n <p>Applications may register a new or different handler in the middle of\n a parse, and the SAX parser must begin using the new handler\n immediately.</p>\n\n @param handler The content handler.\n @exception java.lang.NullPointerException If the handler argument is\n null.\n @see #getContentHandler\n","return_type":"void"},{"parameters":null,"name":"getDTDHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the current DTD handler.\n\n @return The current DTD handler, or null if none has been registered.\n @see #setDTDHandler\n","return_type":"DTDHandler"},{"parameters":"DTDHandler:handler","name":"setDTDHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Allow an application to register a DTD event handler.\n\n <p>If the application does not register a DTD handler, all DTD events\n reported by the SAX parser will be silently ignored.</p>\n\n <p>Applications may register a new or different handler in the middle of\n a parse, and the SAX parser must begin using the new handler\n immediately.</p>\n\n @param handler The DTD handler.\n @exception java.lang.NullPointerException If the handler argument is\n null.\n @see #getDTDHandler\n","return_type":"void"},{"parameters":null,"name":"getErrorHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the current error handler.\n\n @return The current error handler, or null if none has been registered.\n @see #setErrorHandler\n","return_type":"ErrorHandler"},{"parameters":"ErrorHandler:handler","name":"setErrorHandler","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Allow an application to register an error event handler.\n\n <p>If the application does not register an error handler, all error\n events reported by the SAX parser will be silently ignored; however,\n normal processing may not continue. It is highly recommended that all SAX\n applications implement an error handler to avoid unexpected bugs.</p>\n\n <p>Applications may register a new or different handler in the middle of\n a parse, and the SAX parser must begin using the new handler\n immediately.</p>\n\n @param handler The error handler.\n @exception java.lang.NullPointerException If the handler argument is\n null.\n @see #getErrorHandler\n","return_type":"void"},{"parameters":null,"name":"getEntityResolver","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the current entity resolver.\n\n @return The current entity resolver, or null if none has been registered.\n @see #setEntityResolver\n","return_type":"EntityResolver"},{"parameters":"EntityResolver:resolver","name":"setEntityResolver","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Allow an application to register an entity resolver.\n\n <p>If the application does not register an entity resolver, the XMLReader\n will perform its own default resolution.</p>\n\n <p>Applications may register a new or different resolver in the middle of\n a parse, and the SAX parser must begin using the new resolver\n immediately.</p>\n\n @param resolver The entity resolver.\n @exception java.lang.NullPointerException If the resolver argument is\n null.\n @see #getEntityResolver\n","return_type":"void"},{"parameters":null,"name":"getPublicId","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the public identifier for the current document event.\n\n <p>The return value is the public identifier of the document entity or of\n the external parsed entity in which the markup triggering the event\n appears.</p>\n\n @return A string containing the public identifier, or null if none is\n available.\n\n @see #getSystemId\n","return_type":"String"},{"parameters":null,"name":"getSystemId","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the system identifier for the current document event.\n\n <p>The return value is the system identifier of the document entity or of\n the external parsed entity in which the markup triggering the event\n appears.</p>\n\n <p>If the system identifier is a URL, the parser must resolve it fully\n before passing it to the application.</p>\n\n @return A string containing the system identifier, or null if none is\n available.\n\n @see #getPublicId\n","return_type":"String"},{"parameters":null,"name":"getLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the line number where the current document event ends.\n\n @return Always returns -1 indicating the line number is not available.\n\n @see #getColumnNumber\n","return_type":"int"},{"parameters":null,"name":"getColumnNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the column number where the current document event ends.\n\n @return Always returns -1 indicating the column number is not available.\n\n @see #getLineNumber\n","return_type":"int"},{"parameters":"String:systemId","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parse an XML document from a system identifier (URI).\n\n <p>This method is a shortcut for the common case of reading a document\n from a system identifier. It is the exact equivalent of the\n following:</p>\n\n <pre>\n parse(new InputSource(systemId));\n </pre>\n\n <p>If the system identifier is a URL, it must be fully resolved by the\n application before it is passed to the parser.</p>\n\n @param systemId The system identifier (URI).\n @exception org.xml.sax.SAXException Any SAX exception, possibly wrapping\n another exception.\n @exception java.io.IOException An IO exception from the parser, possibly\n from a byte stream or character stream supplied by the application.\n @see #parse(org.xml.sax.InputSource)\n","return_type":"void"},{"parameters":"InputSource:is","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parse an XML document.\n\n <p>The application can use this method to instruct the XML reader to\n begin parsing an XML document from any valid input source (a character\n stream, a byte stream, or a URI).</p>\n\n <p>Applications may not invoke this method while a parse is in progress\n (they should create a new XMLReader instead for each nested XML\n document). Once a parse is complete, an application may reuse the same\n XMLReader object, possibly with a different input source.</p>\n\n <p>During the parse, the XMLReader will provide information about the XML\n document through the registered event handlers.</p>\n\n <p>This method is synchronous: it will not return until parsing has\n ended. If a client application wants to terminate parsing early, it\n should throw an exception.</p>\n\n @param is The input source for the top-level of the XML document.\n @exception org.xml.sax.SAXException Any SAX exception, possibly wrapping\n another exception.\n @exception java.io.IOException An IO exception from the parser, possibly\n from a byte stream or character stream supplied by the application.\n @see org.xml.sax.InputSource\n @see #parse(java.lang.String)\n @see #setEntityResolver\n @see #setDTDHandler\n @see #setContentHandler\n @see #setErrorHandler\n","return_type":"void"},{"parameters":"InputStream:src,DefaultHandler:handler","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parse the content of the given {@link java.io.InputStream} instance as\n XML using the specified {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param src InputStream containing the content to be parsed.\n @param handler The SAX DefaultHandler to use.\n @exception IOException If any IO errors occur.\n @exception IllegalArgumentException If the given InputStream or handler\n is null.\n @exception SAXException If the underlying parser throws a SAXException\n while parsing.\n @see org.xml.sax.helpers.DefaultHandler\n","return_type":"void"},{"parameters":"InputSource:is,DefaultHandler:handler","name":"parse","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parse the content given {@link org.xml.sax.InputSource} as XML using the\n specified {@link org.xml.sax.helpers.DefaultHandler}.\n\n @param is The InputSource containing the content to be parsed.\n @param handler The SAX DefaultHandler to use.\n @exception IOException If any IO errors occur.\n @exception IllegalArgumentException If the InputSource or handler is\n null.\n @exception SAXException If the underlying parser throws a SAXException\n while parsing.\n @see org.xml.sax.helpers.DefaultHandler\n","return_type":"void"},{"parameters":null,"name":"parse","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parse the XML document content using specified handlers and an input\n source.\n\n @exception IOException If any IO errors occur.\n @exception SAXException If the underlying parser throws a SAXException\n while parsing.\n","return_type":"void"},{"parameters":"String:name,String:pubid,String:sysid","name":"docType","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports document type.\n\n @param name The name of the entity.\n @param pubid The public identifier of the entity or <code>null</code>.\n @param sysid The system identifier of the entity or <code>null</code>.\n","return_type":"void"},{"parameters":"char[]:text,int:length","name":"comm","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports a comment.\n\n @param text The comment text starting from first charcater.\n @param length The number of characters in comment.\n","return_type":"void"},{"parameters":"String:target,String:body","name":"pi","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports a processing instruction.\n\n @param target The processing instruction target name.\n @param body The processing instruction body text.\n","return_type":"void"},{"parameters":null,"name":"newPrefix","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports new namespace prefix. The Namespace prefix (\n <code>mPref.name</code>) being declared and the Namespace URI (\n <code>mPref.value</code>) the prefix is mapped to. An empty string is\n used for the default element namespace, which has no prefix.\n","return_type":"void"},{"parameters":"String:name","name":"skippedEnt","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports skipped entity name.\n\n @param name The entity name.\n","return_type":"void"},{"parameters":"String:name,String:pubid,String:sysid","name":"resolveEnt","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns an\n <code>InputSource</code> for specified entity or\n <code>null</code>.\n\n @param name The name of the entity.\n @param pubid The public identifier of the entity.\n @param sysid The system identifier of the entity.\n","return_type":"InputSource"},{"parameters":"String:name,String:pubid,String:sysid","name":"notDecl","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports notation declaration.\n\n @param name The notation's name.\n @param pubid The notation's public identifier, or null if none was given.\n @param sysid The notation's system identifier, or null if none was given.\n","return_type":"void"},{"parameters":"String:name,String:pubid,String:sysid,String:notation","name":"unparsedEntDecl","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports unparsed entity name.\n\n @param name The unparsed entity's name.\n @param pubid The entity's public identifier, or null if none was given.\n @param sysid The entity's system identifier.\n @param notation The name of the associated notation.\n","return_type":"void"},{"parameters":"String:msg","name":"panic","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Notifies the handler about fatal parsing error.\n\n @param msg The problem description message.\n","return_type":"void"},{"parameters":null,"name":"bflash","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports characters and empties the parser's buffer. This method is called\n only if parser is going to return control to the main loop. This means\n that this method may use parser buffer to report white space without\n copeing characters to temporary buffer.\n","return_type":"void"},{"parameters":null,"name":"bflash_ws","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports white space characters and empties the parser's buffer. This\n method is called only if parser is going to return control to the main\n loop. This means that this method may use parser buffer to report white\n space without copeing characters to temporary buffer.\n","return_type":"void"},{"parameters":"String:name","name":"getFeature","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"boolean"},{"parameters":"String:name,boolean:value","name":"setFeature","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"},{"parameters":"String:name","name":"getProperty","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"Object"},{"parameters":"String:name,Object:value","name":"setProperty","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"FEATURE_NS","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"FEATURE_PREF","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mFNamespaces","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mFPrefixes","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mHand","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mHandCont","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mHandDtd","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mHandErr","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mHandEnt","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.util.xml.impl","description":" XML non-validating push parser.\n\n This non-validating parser conforms to <a href=\"http://www.w3.org/TR/REC-xml\"\n >Extensible Markup Language (XML) 1.0</a> and <a\n href=\"http://www.w3.org/TR/REC-xml-names\" >\"Namespaces in XML\"</a>\n specifications. The API supported by the parser are <a\n href=\"http://java.sun.com/aboutJava/communityprocess/final/jsr030/index.html\">CLDC\n 1.0</a> and <a href=\"http://www.jcp.org/en/jsr/detail?id=280\">JSR-280</a>, a\n JavaME subset of <a href=\"http://java.sun.com/xml/jaxp/index.html\">JAXP</a>\n and <a href=\"http://www.saxproject.org/\">SAX2</a>.\n\n @see org.xml.sax.XMLReader\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Parser","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Parser","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n","return_type":null}],"methods":[{"parameters":null,"name":"init","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Initializes parser's internals. Note, current input has to be set before\n this method is called.\n","return_type":"void"},{"parameters":null,"name":"cleanup","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Cleans up parser internal resources.\n","return_type":"void"},{"parameters":null,"name":"step","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Processes a portion of document. This method returns one of EV_*\n constants as an identifier of the portion of document have been read.\n\n @return Identifier of processed document portion.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"int"},{"parameters":null,"name":"dtd","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses the document type declaration.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"dtdsub","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses the document type declaration subset.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"dtdent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses an entity declaration. This method fills the general (\n <code>mEnt</code>) and parameter\n (\n <code>mPEnt</code>) entity look up table.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"dtdelm","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses an element declaration.\n\n This method parses the declaration up to the closing angle bracket.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"dtdattl","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses an attribute list declaration.\n\n This method parses the declaration up to the closing angle bracket.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":"Pair:elm","name":"dtdatt","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses an attribute declaration.\n\n The attribute uses the following fields of Pair object: chars - characters\n of qualified name id - the type identifier of the attribute list - a pair\n which holds the default value (chars field)\n\n @param elm An object which represents all defined attributes on an\n element.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"dtdnot","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses a notation declaration.\n\n This method parses the declaration up to the closing angle bracket.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":"Pair:att","name":"attr","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses an attribute.\n\n This recursive method is responsible for prefix addition\n (\n <code>mPref</code>) on the way down. The element's start tag end triggers\n the return process. The method then on it's way back resolves prefixes\n and accumulates attributes.\n\n <p><code>att.num</code> carries attribute flags where: 0x1 - attribute is\n declared in DTD (attribute decalration had been read); 0x2 - attribute's\n default value is used.</p>\n\n @param att An object which reprecents current attribute.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":"Pair:att","name":"atype","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Retrieves attribute type.\n\n This method sets the type of normalization in the attribute\n <code>id</code> field and returns the name of attribute type.\n\n @param att An object which represents current attribute.\n @return The name of the attribute type.\n @exception Exception is parser specific exception form panic method.\n","return_type":"String"},{"parameters":null,"name":"comm","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses a comment.\n\n The &apos;&lt;!&apos; part is read in dispatcher so the method starts\n with first &apos;-&apos; after &apos;&lt;!&apos;.\n\n @exception Exception is parser specific exception form panic method.\n","return_type":"void"},{"parameters":null,"name":"pi","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses a processing instruction.\n\n The &apos;&lt;?&apos; is read in dispatcher so the method starts with\n first character of PI target name after &apos;&lt;?&apos;.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"cdat","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses a character data.\n\n The &apos;&lt;!&apos; part is read in dispatcher so the method starts\n with first &apos;[&apos; after &apos;&lt;!&apos;.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":"boolean:ns","name":"name","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads a xml name.\n\n The xml name must conform \"Namespaces in XML\" specification. Therefore\n the ':' character is not allowed in the name. This method should be used\n for PI and entity names which may not have a namespace according to the\n specification mentioned above.\n\n @param ns The true value turns namespace conformance on.\n @return The name has been read.\n @exception Exception When incorrect character appear in the name.\n @exception IOException\n","return_type":"String"},{"parameters":"boolean:ns","name":"qname","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads a qualified xml name.\n\n The characters of a qualified name is an array of characters. The first\n (chars[0]) character is the index of the colon character which separates\n the prefix from the local name. If the index is zero, the name does not\n contain separator or the parser works in the namespace unaware mode. The\n length of qualified name is the length of the array minus one.\n\n @param ns The true value turns namespace conformance on.\n @return The characters of a qualified name.\n @exception Exception When incorrect character appear in the name.\n @exception IOException\n","return_type":"char"},{"parameters":"Input:inp","name":"pubsys","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads the public or/and system identifiers.\n\n @param inp The input object.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":"char:flag","name":"pubsys","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads the public or/and system identifiers.\n\n @param flag The 'N' allows public id be without system id.\n @return The public or/and system identifiers pair.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"Pair"},{"parameters":"char:flag","name":"eqstr","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads an attribute value.\n\n The grammar which this method can read is:<br />\n <code>eqstr := S &quot;=&quot; qstr</code><br />\n <code>qstr  := S (&quot;'&quot; string &quot;'&quot;) |\n  ('&quot;' string '&quot;')</code><br /> This method resolves entities\n inside a string unless the parser parses DTD.\n\n @param flag The '=' character forces the method to accept the '='\n character before quoted string and read the following string as not an\n attribute ('-'), 'c' - CDATA, 'i' - non CDATA, ' ' - no normalization;\n '-' - not an attribute value; 'd' - in DTD context.\n @return The content of the quoted strign as a string.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"String"},{"parameters":"char:flag","name":"ent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Resoves an entity.\n\n This method resolves built-in and character entity references. It is also\n reports external entities to the application.\n\n @param flag The 'x' character forces the method to report a skipped\n entity; 'i' character - indicates non-CDATA normalization.\n @return Name of unresolved entity or <code>null</code> if entity had been\n resolved successfully.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"String"},{"parameters":"char:flag","name":"pent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Resoves a parameter entity.\n\n This method resolves a parameter entity references. It is also reports\n external entities to the application.\n\n @param flag The '-' instruct the method to do not set up surrounding\n spaces [#4.4.8].\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":"Pair:name,String:value","name":"isdecl","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Recognizes and handles a namespace declaration.\n\n This method identifies a type of namespace declaration if any and puts\n new mapping on top of prefix stack.\n\n @param name The attribute qualified name (<code>name.value</code> is a\n <code>String</code> object which represents the attribute prefix).\n @param value The attribute value.\n @return <code>true</code> if a namespace declaration is recognized.\n","return_type":"boolean"},{"parameters":"char[]:qname","name":"rslv","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Resolves a prefix.\n\n @return The namespace assigned to the prefix.\n @exception Exception When mapping for specified prefix is not found.\n","return_type":"String"},{"parameters":null,"name":"wsskip","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Skips xml white space characters.\n\n This method skips white space characters (' ', '\\t', '\\n', '\\r') and\n looks ahead not white space character.\n\n @return The first not white space look ahead character.\n @exception IOException\n","return_type":"char"},{"parameters":"String:name,String:pubid,String:sysid","name":"docType","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports document type.\n\n @param name The name of the entity.\n @param pubid The public identifier of the entity or <code>null</code>.\n @param sysid The system identifier of the entity or <code>null</code>.\n","return_type":"void"},{"parameters":"char[]:text,int:length","name":"comm","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports a comment.\n\n @param text The comment text starting from first charcater.\n @param length The number of characters in comment.\n","return_type":"void"},{"parameters":"String:target,String:body","name":"pi","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports a processing instruction.\n\n @param target The processing instruction target name.\n @param body The processing instruction body text.\n","return_type":"void"},{"parameters":null,"name":"newPrefix","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports new namespace prefix. The Namespace prefix (\n <code>mPref.name</code>) being declared and the Namespace URI (\n <code>mPref.value</code>) the prefix is mapped to. An empty string is\n used for the default element namespace, which has no prefix.\n","return_type":"void"},{"parameters":"String:name","name":"skippedEnt","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports skipped entity name.\n\n @param name The entity name.\n","return_type":"void"},{"parameters":"String:name,String:pubid,String:sysid","name":"resolveEnt","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns an\n <code>InputSource</code> for specified entity or\n <code>null</code>.\n\n @param name The name of the entity.\n @param pubid The public identifier of the entity.\n @param sysid The system identifier of the entity.\n","return_type":"InputSource"},{"parameters":"String:name,String:pubid,String:sysid","name":"notDecl","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports notation declaration.\n\n @param name The notation's name.\n @param pubid The notation's public identifier, or null if none was given.\n @param sysid The notation's system identifier, or null if none was given.\n","return_type":"void"},{"parameters":"String:name,String:pubid,String:sysid,String:notation","name":"unparsedEntDecl","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports unparsed entity name.\n\n @param name The unparsed entity's name.\n @param pubid The entity's public identifier, or null if none was given.\n @param sysid The entity's system identifier.\n @param notation The name of the associated notation.\n","return_type":"void"},{"parameters":"String:msg","name":"panic","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Notifies the handler about fatal parsing error.\n\n @param msg The problem description message.\n","return_type":"void"},{"parameters":"boolean:ns","name":"bname","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads a qualified xml name.\n\n This is low level routine which leaves a qName in the buffer. The\n characters of a qualified name is an array of characters. The first\n (chars[0]) character is the index of the colon character which separates\n the prefix from the local name. If the index is zero, the name does not\n contain separator or the parser works in the namespace unaware mode. The\n length of qualified name is the length of the array minus one.\n\n @param ns The true value turns namespace conformance on.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"bntok","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads a nmtoken.\n\n This is low level routine which leaves a nmtoken in the buffer.\n\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"bkeyword","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Recognizes a keyword.\n\n This is low level routine which recognizes one of keywords in the buffer.\n Keyword Id ID - i IDREF - r IDREFS - R ENTITY - n ENTITIES - N NMTOKEN -\n t NMTOKENS - T ELEMENT - e ATTLIST - a NOTATION - o CDATA - c REQUIRED -\n Q IMPLIED - I FIXED - F\n\n @return an id of a keyword or '?'.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"char"},{"parameters":"char:flag","name":"bqstr","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reads a single or double quotted string in to the buffer.\n\n This method resolves entities inside a string unless the parser parses\n DTD.\n\n @param flag 'c' - CDATA, 'i' - non CDATA, ' ' - no normalization; '-' -\n not an attribute value; 'd' - in DTD context.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"void"},{"parameters":null,"name":"bflash","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports characters and empties the parser's buffer. This method is called\n only if parser is going to return control to the main loop. This means\n that this method may use parser buffer to report white space without\n copeing characters to temporary buffer.\n","return_type":"void"},{"parameters":null,"name":"bflash_ws","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Reports white space characters and empties the parser's buffer. This\n method is called only if parser is going to return control to the main\n loop. This means that this method may use parser buffer to report white\n space without copeing characters to temporary buffer.\n","return_type":"void"},{"parameters":"char:ch,char:mode","name":"bappend","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Appends a character to parser's buffer with normalization.\n\n @param ch The character to append to the buffer.\n @param mode The normalization mode.\n","return_type":"void"},{"parameters":"char:ch","name":"bappend","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Appends a character to parser's buffer.\n\n @param ch The character to append to the buffer.\n","return_type":"void"},{"parameters":"int:cidx,int:bidx","name":"bcopy","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Appends (mChIdx - cidx) characters from character buffer (mChars) to\n parser's buffer (mBuff).\n\n @param cidx The character buffer (mChars) start index.\n @param bidx The parser buffer (mBuff) start index.\n","return_type":"void"},{"parameters":"char:ch","name":"eappend","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Recognizes the built-in entities <i>lt</i>, <i>gt</i>, <i>amp</i>,\n <i>apos</i>, <i>quot</i>. The initial state is 0x100. Any state belowe\n 0x100 is a built-in entity replacement character.\n\n @param ch the next character of an entity name.\n","return_type":"void"},{"parameters":"InputSource:is","name":"setinp","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Sets up a new input source on the top of the input stack. Note, the first\n byte returned by the entity's byte stream has to be the first byte in the\n entity. However, the parser does not expect the byte order mask in both\n cases when encoding is provided by the input source.\n\n @param is A new input source to set up.\n @exception IOException If any IO errors occur.\n @exception Exception is parser specific exception form panic method.\n","return_type":"void"},{"parameters":"InputStream:is,char:hint","name":"bom","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Determines the entity encoding.\n\n This method gets encoding from Byte Order Mask [#4.3.3] if any. Note, the\n first byte returned by the entity's byte stream has to be the first byte\n in the entity. Also, there is no support for UCS-4.\n\n @param is A byte stream of the entity.\n @param hint An encoding hint, character U means UTF-16.\n @return a reader constructed from the BOM or UTF-8 by default.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"Reader"},{"parameters":"Reader:reader","name":"xml","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Parses the xml text declaration.\n\n This method gets encoding from the xml text declaration [#4.3.1] if any.\n The method assumes the buffer (mChars) is big enough to accommodate whole\n xml text declaration.\n\n @param reader is entity reader.\n @return The xml text declaration encoding or default UTF-8 encoding.\n @exception Exception is parser specific exception form panic method.\n @exception IOException\n","return_type":"String"},{"parameters":"String:name,InputStream:is","name":"enc","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Sets up the document reader.\n\n @param name an encoding name.\n @param is the document byte input stream.\n @return a reader constructed from encoding name and input stream.\n @exception UnsupportedEncodingException\n","return_type":"Reader"},{"parameters":"Input:inp","name":"push","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Sets up current input on the top of the input stack.\n\n @param inp A new input to set up.\n","return_type":"void"},{"parameters":null,"name":"pop","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Restores previous input on the top of the input stack.\n","return_type":"void"},{"parameters":"char:ch","name":"chtyp","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Maps a character to it's type.\n\n Possible character type values are:<br /> - ' ' for any kind of white\n space character;<br /> - 'a' for any lower case alphabetical character\n value;<br /> - 'A' for any upper case alphabetical character value;<br />\n - 'd' for any decimal digit character value;<br /> - 'z' for any\n character less then ' ' except '\\t', '\\n', '\\r';<br /> - 'X' for any not\n ASCII character;<br /> - 'Z' for EOS character.<br /> An ASCII (7 bit)\n character which does not fall in any category listed above is mapped to\n it self.\n\n @param ch The character to map.\n @return The type of character.\n","return_type":"char"},{"parameters":null,"name":"getch","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Retrives the next character in the document.\n\n @return The next character in the document.\n","return_type":"char"},{"parameters":null,"name":"bkch","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Puts back the last read character.\n\n This method <strong>MUST NOT</strong> be called more then once after each\n call of {@link #getch getch} method.\n","return_type":"void"},{"parameters":"char:ch","name":"setch","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Sets the current character.\n\n @param ch The character to set.\n","return_type":"void"},{"parameters":"Pair:chain,char[]:qname","name":"find","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Finds a pair in the pair chain by a qualified name.\n\n @param chain The first element of the chain of pairs.\n @param qname The qualified name.\n @return A pair with the specified qualified name or null.\n","return_type":"Pair"},{"parameters":"Pair:next","name":"pair","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Provedes an instance of a pair.\n\n @param next The reference to a next pair.\n @return An instance of a pair.\n","return_type":"Pair"},{"parameters":"Pair:pair","name":"del","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Deletes an instance of a pair.\n\n @param pair The pair to delete.\n @return A reference to the next pair in a chain.\n","return_type":"Pair"}],"fields":[{"parameters":null,"name":"FAULT","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"BUFFSIZE_READER","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"BUFFSIZE_PARSER","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EOS","modifier":"public","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":" The end of stream character.\n","return_type":null},{"parameters":null,"name":"mNoNS","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mXml","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mEnt","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mPEnt","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mIsSAlone","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mIsSAloneSet","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mIsNSAware","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mPh","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_BEFORE_DOC","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_DOC_START","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_MISC_DTD","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_DTD","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_DTD_MISC","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_DOCELM","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_DOCELM_MISC","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"PH_AFTER_DOC","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mEvt","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_NULL","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_ELM","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_ELMS","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_ELME","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_TEXT","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_WSPC","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_PI","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_CDAT","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_COMM","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_DTD","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"EV_ENT","modifier":"protected","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mESt","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mBuff","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mBuffIdx","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mPref","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mElm","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mAttL","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mDoc","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mInp","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mChars","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mChLen","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mChIdx","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mAttrs","modifier":"protected","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mItems","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mAttrIdx","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mUnent","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"mDltd","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"NONS","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":" Default prefixes\n","return_type":null},{"parameters":null,"name":"XML","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"XMLNS","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":"","return_type":null},{"parameters":null,"name":"asctyp","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":" ASCII character type array.\n\n This array maps an ASCII (7 bit) character to the character type.<br />\n Possible character type values are:<br /> - ' ' for any kind of white\n space character;<br /> - 'a' for any lower case alphabetical character\n value;<br /> - 'A' for any upper case alphabetical character value;<br />\n - 'd' for any decimal digit character value;<br /> - 'z' for any\n character less then ' ' except '\\t', '\\n', '\\r';<br /> An ASCII (7 bit)\n character which does not fall in any category listed above is mapped to\n it self.\n","return_type":null},{"parameters":null,"name":"nmttyp","modifier":"private","static":true,"final":true,"package":"jdk.internal.util.xml.impl","description":" NMTOKEN character type array.\n\n This array maps an ASCII (7 bit) character to the character type.<br />\n Possible character type values are:<br /> - 0 for underscore ('_') or any\n lower and upper case alphabetical character value;<br /> - 1 for colon\n (':') character;<br /> - 2 for dash ('-') and dot ('.') or any decimal\n digit character value;<br /> - 3 for any kind of white space character<br\n /> An ASCII (7 bit) character which does not fall in any category listed\n above is mapped to 0xff.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" XML non-validating parser engine.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Pair","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Pair","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null}],"methods":[{"parameters":null,"name":"qname","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Creates a qualified name string from qualified name.\n\n @return The qualified name string.\n","return_type":"String"},{"parameters":null,"name":"local","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Creates a local name string from qualified name.\n\n @return The local name string.\n","return_type":"String"},{"parameters":null,"name":"pref","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Creates a prefix string from qualified name.\n\n @return The prefix string.\n","return_type":"String"},{"parameters":"char[]:qname","name":"eqpref","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Compares two qualified name prefixes.\n\n @param qname A qualified name.\n @return true if prefixes are equal.\n","return_type":"boolean"},{"parameters":"char[]:qname","name":"eqname","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Compares two qualified names.\n\n @param qname A qualified name.\n @return true if qualified names are equal.\n","return_type":"boolean"}],"fields":[{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The pair name. ","return_type":null},{"parameters":null,"name":"value","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The pair value. ","return_type":null},{"parameters":null,"name":"num","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The pair numeric value. ","return_type":null},{"parameters":null,"name":"chars","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The characters of name. ","return_type":null},{"parameters":null,"name":"id","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The pair identifier. ","return_type":null},{"parameters":null,"name":"list","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The list of associated pairs. ","return_type":null},{"parameters":null,"name":"next","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The next pair in a chain. ","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" A name with value pair.\n\n This class keeps name with value pair with additional information and\n supports pair chaining.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Input","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:buffsize","name":"Input","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n\n @param buffsize The input buffer size.\n","return_type":null},{"parameters":"char[]:buff","name":"Input","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n\n @param buff The input buffer.\n","return_type":null},{"parameters":null,"name":"Input","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"pubid","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The entity public identifier or null. ","return_type":null},{"parameters":null,"name":"sysid","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The entity systen identifier or null. ","return_type":null},{"parameters":null,"name":"xmlenc","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The encoding from XML declaration or null ","return_type":null},{"parameters":null,"name":"xmlver","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The XML version from XML declaration or 0x0000 ","return_type":null},{"parameters":null,"name":"src","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The entity reader. ","return_type":null},{"parameters":null,"name":"chars","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The character buffer. ","return_type":null},{"parameters":null,"name":"chLen","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The length of the character buffer. ","return_type":null},{"parameters":null,"name":"chIdx","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The index of the next character to read. ","return_type":null},{"parameters":null,"name":"next","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"The next input in a chain. ","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" A parsed entity input state.\n\n This class represents a parsed entity input state. The parser uses\n an instance of this class to manage input.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Attrs","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Attrs","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Constructor.\n","return_type":null}],"methods":[{"parameters":"char:length","name":"setLength","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Sets up the number of attributes and ensure the capacity of the attribute\n string array.\n\n @param length The number of attributes in the object.\n","return_type":"void"},{"parameters":null,"name":"getLength","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Return the number of attributes in the list.\n\n <p>Once you know the number of attributes, you can iterate through the\n list.</p>\n\n @return The number of attributes in the list.\n @see #getURI(int)\n @see #getLocalName(int)\n @see #getQName(int)\n @see #getType(int)\n @see #getValue(int)\n","return_type":"int"},{"parameters":"int:index","name":"getURI","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's Namespace URI by index.\n\n @param index The attribute index (zero-based).\n @return The Namespace URI, or the empty string if none is available, or\n null if the index is out of range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getLocalName","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's local name by index.\n\n @param index The attribute index (zero-based).\n @return The local name, or the empty string if Namespace processing is\n not being performed, or null if the index is out of range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getQName","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's XML 1.0 qualified name by index.\n\n @param index The attribute index (zero-based).\n @return The XML 1.0 qualified name, or the empty string if none is\n available, or null if the index is out of range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's type by index.\n\n <p>The attribute type is one of the strings \"CDATA\", \"ID\", \"IDREF\",\n \"IDREFS\", \"NMTOKEN\", \"NMTOKENS\", \"ENTITY\", \"ENTITIES\", or \"NOTATION\"\n (always in upper case).</p>\n\n <p>If the parser has not read a declaration for the attribute, or if the\n parser does not report attribute types, then it must return the value\n \"CDATA\" as stated in the XML 1.0 Recommentation (clause 3.3.3,\n \"Attribute-Value Normalization\").</p>\n\n <p>For an enumerated attribute that is not a notation, the parser will\n report the type as \"NMTOKEN\".</p>\n\n @param index The attribute index (zero-based).\n @return The attribute's type as a string, or null if the index is out of\n range.\n @see #getLength\n","return_type":"String"},{"parameters":"int:index","name":"getValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's value by index.\n\n <p>If the attribute value is a list of tokens (IDREFS, ENTITIES, or\n NMTOKENS), the tokens will be concatenated into a single string with each\n token separated by a single space.</p>\n\n @param index The attribute index (zero-based).\n @return The attribute's value as a string, or null if the index is out of\n range.\n @see #getLength\n","return_type":"String"},{"parameters":"String:uri,String:localName","name":"getIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up the index of an attribute by Namespace name.\n\n @param uri The Namespace URI, or the empty string if the name has no\n Namespace URI.\n @param localName The attribute's local name.\n @return The index of the attribute, or -1 if it does not appear in the\n list.\n","return_type":"int"},{"parameters":"String:uri,String:localName","name":"getIndexNullNS","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up the index of an attribute by Namespace name.\n\n @param uri The Namespace URI, or the empty string if the name has no\n Namespace URI. <code>null</code> value enforce the search by the local\n name only.\n @param localName The attribute's local name.\n @return The index of the attribute, or -1 if it does not appear in the\n list.\n","return_type":"int"},{"parameters":"String:qName","name":"getIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up the index of an attribute by XML 1.0 qualified name.\n\n @param qName The qualified (prefixed) name.\n @return The index of the attribute, or -1 if it does not appear in the\n list.\n","return_type":"int"},{"parameters":"String:uri,String:localName","name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's type by Namespace name.\n\n <p>See {@link #getType(int) getType(int)} for a description of the\n possible types.</p>\n\n @param uri The Namespace URI, or the empty String if the name has no\n Namespace URI.\n @param localName The local name of the attribute.\n @return The attribute type as a string, or null if the attribute is not\n in the list or if Namespace processing is not being performed.\n","return_type":"String"},{"parameters":"String:qName","name":"getType","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's type by XML 1.0 qualified name.\n\n <p>See {@link #getType(int) getType(int)} for a description of the\n possible types.</p>\n\n @param qName The XML 1.0 qualified name.\n @return The attribute type as a string, or null if the attribute is not\n in the list or if qualified names are not available.\n","return_type":"String"},{"parameters":"String:uri,String:localName","name":"getValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's value by Namespace name.\n\n <p>See {@link #getValue(int) getValue(int)} for a description of the\n possible values.</p>\n\n @param uri The Namespace URI, or the empty String if the name has no\n Namespace URI.\n @param localName The local name of the attribute.\n @return The attribute value as a string, or null if the attribute is not\n in the list.\n","return_type":"String"},{"parameters":"String:qName","name":"getValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Look up an attribute's value by XML 1.0 qualified name.\n\n <p>See {@link #getValue(int) getValue(int)} for a description of the\n possible values.</p>\n\n @param qName The XML 1.0 qualified name.\n @return The attribute value as a string, or null if the attribute is not\n in the list or if qualified names are not available.\n","return_type":"String"},{"parameters":"int:index","name":"isDeclared","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns false unless the attribute was declared in the DTD. This helps\n distinguish two kinds of attributes that SAX reports as CDATA: ones that\n were declared (and hence are usually valid), and those that were not (and\n which are never valid).\n\n @param index The attribute index (zero-based).\n @return true if the attribute was declared in the DTD, false otherwise.\n @exception java.lang.ArrayIndexOutOfBoundsException When the supplied\n index does not identify an attribute.\n","return_type":"boolean"},{"parameters":"String:qName","name":"isDeclared","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns false unless the attribute was declared in the DTD. This helps\n distinguish two kinds of attributes that SAX reports as CDATA: ones that\n were declared (and hence are usually valid), and those that were not (and\n which are never valid).\n\n @param qName The XML qualified (prefixed) name.\n @return true if the attribute was declared in the DTD, false otherwise.\n @exception java.lang.IllegalArgumentException When the supplied name does\n not identify an attribute.\n","return_type":"boolean"},{"parameters":"String:uri,String:localName","name":"isDeclared","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns false unless the attribute was declared in the DTD. This helps\n distinguish two kinds of attributes that SAX reports as CDATA: ones that\n were declared (and hence are usually valid), and those that were not (and\n which are never valid).\n\n <p>Remember that since DTDs do not \"understand\" namespaces, the namespace\n URI associated with an attribute may not have come from the DTD. The\n declaration will have applied to the attribute's <em>qName</em>.\n\n @param uri The Namespace URI, or the empty string if the name has no\n Namespace URI.\n @param localName The attribute's local name.\n @return true if the attribute was declared in the DTD, false otherwise.\n @exception java.lang.IllegalArgumentException When the supplied names do\n not identify an attribute.\n","return_type":"boolean"},{"parameters":"int:index","name":"isSpecified","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns true unless the attribute value was provided by DTD defaulting.\n\n @param index The attribute index (zero-based).\n @return true if the value was found in the XML text, false if the value\n was provided by DTD defaulting.\n @exception java.lang.ArrayIndexOutOfBoundsException When the supplied\n index does not identify an attribute.\n","return_type":"boolean"},{"parameters":"String:uri,String:localName","name":"isSpecified","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns true unless the attribute value was provided by DTD defaulting.\n\n <p>Remember that since DTDs do not \"understand\" namespaces, the namespace\n URI associated with an attribute may not have come from the DTD. The\n declaration will have applied to the attribute's <em>qName</em>.\n\n @param uri The Namespace URI, or the empty string if the name has no\n Namespace URI.\n @param localName The attribute's local name.\n @return true if the value was found in the XML text, false if the value\n was provided by DTD defaulting.\n @exception java.lang.IllegalArgumentException When the supplied names do\n not identify an attribute.\n","return_type":"boolean"},{"parameters":"String:qName","name":"isSpecified","modifier":"public","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Returns true unless the attribute value was provided by DTD defaulting.\n\n @param qName The XML qualified (prefixed) name.\n @return true if the value was found in the XML text, false if the value\n was provided by DTD defaulting.\n @exception java.lang.IllegalArgumentException When the supplied name does\n not identify an attribute.\n","return_type":"boolean"}],"fields":[{"parameters":null,"name":"mItems","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Attributes string array. Each individual attribute is represented by four\n strings: namespace URL(+0), qname(+1), local name(+2), value(+3),\n type(+4), declared[\"d\"] and default[\"D\"](+5). In order to find attribute\n by the attrubute index, the attribute index MUST be multiplied by 8. The\n result will point to the attribute namespace URL.\n","return_type":null},{"parameters":null,"name":"mLength","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" Number of attributes in the attributes string array.\n","return_type":null},{"parameters":null,"name":"mAttrIdx","modifier":"private","static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":" current index\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.util.xml.impl","description":"","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Sockets","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Sockets","modifier":"private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null}],"methods":[{"parameters":null,"name":"initMethods","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":"void"},{"parameters":"Method:method,Object:socket,java.net.SocketOption:option,Object:value","name":"invokeSet","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":"void"},{"parameters":"Method:method,Object:socket,java.net.SocketOption:option","name":"invokeGet","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":"Object"},{"parameters":"Socket:s,java.net.SocketOption:name,Object:value","name":"setOption","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Sets the value of a socket option on a {@link java.net.Socket}\n\n @param s the socket\n @param name The socket option\n @param value The value of the socket option. May be null for some\n              options.\n\n @throws UnsupportedOperationException if the socket does not support\n         the option.\n\n @throws IllegalArgumentException if the value is not valid for\n         the option.\n\n @throws IOException if an I/O error occurs, or socket is closed.\n\n @throws SecurityException if a security manager is set and the\n         caller does not have any required permission.\n\n @throws NullPointerException if name is null\n\n @see java.net.StandardSocketOptions\n","return_type":"void"},{"parameters":"Socket:s,java.net.SocketOption:name","name":"getOption","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Returns the value of a socket option from a {@link java.net.Socket}\n\n @param s the socket\n @param name The socket option\n\n @return The value of the socket option.\n\n @throws UnsupportedOperationException if the socket does not support\n         the option.\n\n @throws IOException if an I/O error occurs\n\n @throws SecurityException if a security manager is set and the\n         caller does not have any required permission.\n\n @throws NullPointerException if name is null\n\n @see java.net.StandardSocketOptions\n","return_type":"Object"},{"parameters":"ServerSocket:s,java.net.SocketOption:name,Object:value","name":"setOption","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Sets the value of a socket option on a {@link java.net.ServerSocket}\n\n @param s the socket\n @param name The socket option\n @param value The value of the socket option.\n\n @throws UnsupportedOperationException if the socket does not support\n         the option.\n\n @throws IllegalArgumentException if the value is not valid for\n         the option.\n\n @throws IOException if an I/O error occurs\n\n @throws NullPointerException if name is null\n\n @throws SecurityException if a security manager is set and the\n         caller does not have any required permission.\n\n @see java.net.StandardSocketOptions\n","return_type":"void"},{"parameters":"ServerSocket:s,java.net.SocketOption:name","name":"getOption","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Returns the value of a socket option from a {@link java.net.ServerSocket}\n\n @param s the socket\n @param name The socket option\n\n @return The value of the socket option.\n\n @throws UnsupportedOperationException if the socket does not support\n         the option.\n\n @throws IOException if an I/O error occurs\n\n @throws NullPointerException if name is null\n\n @throws SecurityException if a security manager is set and the\n         caller does not have any required permission.\n\n @see java.net.StandardSocketOptions\n","return_type":"Object"},{"parameters":"DatagramSocket:s,java.net.SocketOption:name,Object:value","name":"setOption","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Sets the value of a socket option on a {@link java.net.DatagramSocket}\n or {@link java.net.MulticastSocket}\n\n @param s the socket\n @param name The socket option\n @param value The value of the socket option.\n\n @throws UnsupportedOperationException if the socket does not support\n         the option.\n\n @throws IllegalArgumentException if the value is not valid for\n         the option.\n\n @throws IOException if an I/O error occurs\n\n @throws NullPointerException if name is null\n\n @throws SecurityException if a security manager is set and the\n         caller does not have any required permission.\n\n @see java.net.StandardSocketOptions\n","return_type":"void"},{"parameters":"DatagramSocket:s,java.net.SocketOption:name","name":"getOption","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Returns the value of a socket option from a\n {@link java.net.DatagramSocket} or {@link java.net.MulticastSocket}\n\n @param s the socket\n @param name The socket option\n\n @return The value of the socket option.\n\n @throws UnsupportedOperationException if the socket does not support\n         the option.\n\n @throws IOException if an I/O error occurs\n\n @throws NullPointerException if name is null\n\n @throws SecurityException if a security manager is set and the\n         caller does not have any required permission.\n\n @see java.net.StandardSocketOptions\n","return_type":"Object"},{"parameters":"java.lang.Class:socketType","name":"supportedOptions","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Returns a set of {@link java.net.SocketOption}s supported by the\n given socket type. This set may include standard options and also\n non standard extended options.\n\n @param socketType the type of java.net socket\n\n @throws IllegalArgumentException if socketType is not a valid\n         socket type from the java.net package.\n","return_type":"Set"},{"parameters":"java.lang.Class:type,java.net.SocketOption:option","name":"isSupported","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":"boolean"},{"parameters":null,"name":"initOptionSets","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":"void"}],"fields":[{"parameters":null,"name":"options","modifier":"private","static":true,"final":true,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"siSetOption","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"siGetOption","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"dsiSetOption","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"dsiGetOption","modifier":"private","static":true,"final":false,"package":"jdk.net","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.net","description":" Defines static methods to set and get socket options defined by the\n {@link java.net.SocketOption} interface. All of the standard options defined\n by {@link java.net.Socket}, {@link java.net.ServerSocket}, and\n {@link java.net.DatagramSocket} can be set this way, as well as additional\n or platform specific options supported by each socket type.\n <p>\n The {@link #supportedOptions(Class)} method can be called to determine\n the complete set of options available (per socket type) on the\n current system.\n <p>\n When a security manager is installed, some non-standard socket options\n may require a security permission before being set or get.\n The details are specified in {@link ExtendedSocketOptions}. No permission\n is required for {@link java.net.StandardSocketOptions}.\n\n @see java.nio.channels.NetworkChannel\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SocketFlow","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"SocketFlow","modifier":"private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null}],"methods":[{"parameters":null,"name":"create","modifier":"public","static":true,"final":false,"package":"jdk.net","description":" Creates a new SocketFlow that can be used to set the SO_FLOW_SLA\n socket option and create a socket flow.\n","return_type":"SocketFlow"},{"parameters":"int:priority","name":"priority","modifier":"public","static":false,"final":false,"package":"jdk.net","description":" Sets this SocketFlow's priority. Must be either NORMAL_PRIORITY\n HIGH_PRIORITY. If not set, a flow's priority is normal.\n\n @throws IllegalArgumentException if priority is not NORMAL_PRIORITY or\n         HIGH_PRIORITY.\n","return_type":"SocketFlow"},{"parameters":"long:bandwidth","name":"bandwidth","modifier":"public","static":false,"final":false,"package":"jdk.net","description":" Sets this SocketFlow's bandwidth. Must be greater than or equal to zero.\n A value of zero drops all packets for the socket.\n\n @throws IllegalArgumentException if bandwidth is less than zero.\n","return_type":"SocketFlow"},{"parameters":null,"name":"priority","modifier":"public","static":false,"final":false,"package":"jdk.net","description":" Returns this SocketFlow's priority.\n","return_type":"int"},{"parameters":null,"name":"bandwidth","modifier":"public","static":false,"final":false,"package":"jdk.net","description":" Returns this SocketFlow's bandwidth.\n\n @return this SocketFlow's bandwidth, or {@code -1} if status is not OK.\n","return_type":"long"},{"parameters":null,"name":"status","modifier":"public","static":false,"final":false,"package":"jdk.net","description":" Returns the Status value of this SocketFlow. NO_STATUS is returned\n if the object was not used in a call to set or get the option.\n","return_type":"SocketFlow.Status"}],"fields":[{"parameters":null,"name":"UNSET","modifier":"private","static":true,"final":true,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"NORMAL_PRIORITY","modifier":"public","static":true,"final":true,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"HIGH_PRIORITY","modifier":"public","static":true,"final":true,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"priority","modifier":"private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"bandwidth","modifier":"private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"status","modifier":"private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.net","description":" Represents the service level properties for the platform specific socket\n option {@link ExtendedSocketOptions#SO_FLOW_SLA}.\n <p>\n The priority and bandwidth parameters must be set before\n setting the socket option.\n <p>\n When the {@code SO_FLOW_SLA} option is set then it may not take effect\n immediately. If the value of the socket option is obtained with\n {@code getOption()} then the status may be returned as {@code INPROGRESS}\n until it takes effect. The priority and bandwidth values are only valid when\n the status is returned as OK.\n <p>\n When a security manager is installed, a {@link NetworkPermission}\n is required to set or get this option.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"SocketFlow.Status","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Status","modifier":"private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null}],"methods":[{"parameters":null,"name":"values","modifier":"public","static":true,"final":false,"package":"jdk.net","description":"","return_type":"SocketFlow.Status"},{"parameters":"String:name","name":"valueOf","modifier":"public","static":true,"final":false,"package":"jdk.net","description":"","return_type":"SocketFlow.Status"}],"fields":[{"parameters":null,"name":"NO_STATUS","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" Set or get socket option has not been called yet. Status\n values can only be retrieved after calling set or get.\n","return_type":null},{"parameters":null,"name":"OK","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" Flow successfully created.\n","return_type":null},{"parameters":null,"name":"NO_PERMISSION","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" Caller has no permission to create flow.\n","return_type":null},{"parameters":null,"name":"NOT_CONNECTED","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" Flow can not be created because socket is not connected.\n","return_type":null},{"parameters":null,"name":"NOT_SUPPORTED","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" Flow creation not supported for this socket.\n","return_type":null},{"parameters":null,"name":"ALREADY_CREATED","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" A flow already exists with identical attributes.\n","return_type":null},{"parameters":null,"name":"IN_PROGRESS","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" A flow is being created.\n","return_type":null},{"parameters":null,"name":"OTHER","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" Some other unspecified error.\n","return_type":null}],"abstract":false,"static":true,"final":true,"package":"jdk.net","description":" Enumeration of the return values from the SO_FLOW_SLA\n socket option. Both setting and getting the option return\n one of these statuses, which reflect the state of socket's\n flow.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"NetworkPermission","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name","name":"NetworkPermission","modifier":"public","static":false,"final":false,"package":"jdk.net","description":" Creates a NetworkPermission with the given target name.\n\n @param name the permission target name\n @throws NullPointerException if {@code name} is {@code null}.\n @throws IllegalArgumentException if {@code name} is empty.\n","return_type":null},{"parameters":"String:name,String:actions","name":"NetworkPermission","modifier":"public","static":false,"final":false,"package":"jdk.net","description":" Creates a NetworkPermission with the given target name.\n\n @param name the permission target name\n @param actions should be {@code null}. Is ignored if not.\n @throws NullPointerException if {@code name} is {@code null}.\n @throws IllegalArgumentException if {@code name} is empty.\n","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"serialVersionUID","modifier":"private","static":true,"final":true,"package":"jdk.net","description":"","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.net","description":" Represents permission to access the extended networking capabilities\n defined in the jdk.net package. These permissions contain a target\n name, but no actions list. Callers either possess the permission or not.\n <p>\n The following targets are defined:\n <p>\n <table border=1 cellpadding=5 summary=\"permission target name,\n  what the target allows,and associated risks\">\n <tr>\n   <th>Permission Target Name</th>\n   <th>What the Permission Allows</th>\n   <th>Risks of Allowing this Permission</th>\n </tr>\n <tr>\n   <td>setOption.SO_FLOW_SLA</td>\n   <td>set the {@link ExtendedSocketOptions#SO_FLOW_SLA SO_FLOW_SLA} option\n       on any socket that supports it</td>\n   <td>allows caller to set a higher priority or bandwidth allocation\n       to sockets it creates, than they might otherwise be allowed.</td>\n </tr>\n <tr>\n   <td>getOption.SO_FLOW_SLA</td>\n   <td>retrieve the {@link ExtendedSocketOptions#SO_FLOW_SLA SO_FLOW_SLA}\n       setting from any socket that supports the option</td>\n   <td>allows caller access to SLA information that it might not\n       otherwise have</td>\n </tr></table>\n\n @see jdk.net.ExtendedSocketOptions\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ExtendedSocketOptions","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"ExtendedSocketOptions","modifier":"private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"SO_FLOW_SLA","modifier":"public","static":true,"final":true,"package":"jdk.net","description":" Service level properties. When a security manager is installed,\n setting or getting this option requires a {@link NetworkPermission}\n {@code (\"setOption.SO_FLOW_SLA\")} or {@code \"getOption.SO_FLOW_SLA\"}\n respectively.\n","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.net","description":" Defines extended socket options, beyond those defined in\n {@link java.net.StandardSocketOptions}. These options may be platform\n specific.\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ExtendedSocketOptions.ExtSocketOption","modifier":"private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:name,java.lang.Class:type","name":"ExtSocketOption","modifier":"package-private","static":false,"final":false,"package":"jdk.net","description":"","return_type":null}],"methods":[{"parameters":null,"name":"name","modifier":"public","static":false,"final":false,"package":"jdk.net","description":"","return_type":"String"},{"parameters":null,"name":"type","modifier":"public","static":false,"final":false,"package":"jdk.net","description":"","return_type":"Class"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.net","description":"","return_type":"String"}],"fields":[{"parameters":null,"name":"name","modifier":"private","static":false,"final":true,"package":"jdk.net","description":"","return_type":null},{"parameters":null,"name":"type","modifier":"private","static":false,"final":true,"package":"jdk.net","description":"","return_type":null}],"abstract":false,"static":true,"final":false,"package":"jdk.net","description":"","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TypeReference","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:typeRef","name":"TypeReference","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Creates a new TypeReference.\n\n @param typeRef\n            the int encoded value of the type reference, as received in a\n            visit method related to type annotations, like\n            visitTypeAnnotation.\n","return_type":null}],"methods":[{"parameters":"int:sort","name":"newTypeReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a type reference of the given sort.\n\n @param sort\n            {@link #FIELD FIELD}, {@link #METHOD_RETURN METHOD_RETURN},\n            {@link #METHOD_RECEIVER METHOD_RECEIVER},\n            {@link #LOCAL_VARIABLE LOCAL_VARIABLE},\n            {@link #RESOURCE_VARIABLE RESOURCE_VARIABLE},\n            {@link #INSTANCEOF INSTANCEOF}, {@link #NEW NEW},\n            {@link #CONSTRUCTOR_REFERENCE CONSTRUCTOR_REFERENCE}, or\n            {@link #METHOD_REFERENCE METHOD_REFERENCE}.\n @return a type reference of the given sort.\n","return_type":"TypeReference"},{"parameters":"int:sort,int:paramIndex","name":"newTypeParameterReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a reference to a type parameter of a generic class or method.\n\n @param sort\n            {@link #CLASS_TYPE_PARAMETER CLASS_TYPE_PARAMETER} or\n            {@link #METHOD_TYPE_PARAMETER METHOD_TYPE_PARAMETER}.\n @param paramIndex\n            the type parameter index.\n @return a reference to the given generic class or method type parameter.\n","return_type":"TypeReference"},{"parameters":"int:sort,int:paramIndex,int:boundIndex","name":"newTypeParameterBoundReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a reference to a type parameter bound of a generic class or\n method.\n\n @param sort\n            {@link #CLASS_TYPE_PARAMETER CLASS_TYPE_PARAMETER} or\n            {@link #METHOD_TYPE_PARAMETER METHOD_TYPE_PARAMETER}.\n @param paramIndex\n            the type parameter index.\n @param boundIndex\n            the type bound index within the above type parameters.\n @return a reference to the given generic class or method type parameter\n         bound.\n","return_type":"TypeReference"},{"parameters":"int:itfIndex","name":"newSuperTypeReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a reference to the super class or to an interface of the\n 'implements' clause of a class.\n\n @param itfIndex\n            the index of an interface in the 'implements' clause of a\n            class, or -1 to reference the super class of the class.\n @return a reference to the given super type of a class.\n","return_type":"TypeReference"},{"parameters":"int:paramIndex","name":"newFormalParameterReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a reference to the type of a formal parameter of a method.\n\n @param paramIndex\n            the formal parameter index.\n\n @return a reference to the type of the given method formal parameter.\n","return_type":"TypeReference"},{"parameters":"int:exceptionIndex","name":"newExceptionReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a reference to the type of an exception, in a 'throws' clause of\n a method.\n\n @param exceptionIndex\n            the index of an exception in a 'throws' clause of a method.\n\n @return a reference to the type of the given exception.\n","return_type":"TypeReference"},{"parameters":"int:tryCatchBlockIndex","name":"newTryCatchReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a reference to the type of the exception declared in a 'catch'\n clause of a method.\n\n @param tryCatchBlockIndex\n            the index of a try catch block (using the order in which they\n            are visited with visitTryCatchBlock).\n\n @return a reference to the type of the given exception.\n","return_type":"TypeReference"},{"parameters":"int:sort,int:argIndex","name":"newTypeArgumentReference","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a reference to the type of a type argument in a constructor or\n method call or reference.\n\n @param sort\n            {@link #CAST CAST},\n            {@link #CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\n            CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT},\n            {@link #METHOD_INVOCATION_TYPE_ARGUMENT\n            METHOD_INVOCATION_TYPE_ARGUMENT},\n            {@link #CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT\n            CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT}, or\n            {@link #METHOD_REFERENCE_TYPE_ARGUMENT\n            METHOD_REFERENCE_TYPE_ARGUMENT}.\n @param argIndex\n            the type argument index.\n\n @return a reference to the type of the given type argument.\n","return_type":"TypeReference"},{"parameters":null,"name":"getSort","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the sort of this type reference.\n\n @return {@link #CLASS_TYPE_PARAMETER CLASS_TYPE_PARAMETER},\n         {@link #METHOD_TYPE_PARAMETER METHOD_TYPE_PARAMETER},\n         {@link #CLASS_EXTENDS CLASS_EXTENDS},\n         {@link #CLASS_TYPE_PARAMETER_BOUND CLASS_TYPE_PARAMETER_BOUND},\n         {@link #METHOD_TYPE_PARAMETER_BOUND METHOD_TYPE_PARAMETER_BOUND},\n         {@link #FIELD FIELD}, {@link #METHOD_RETURN METHOD_RETURN},\n         {@link #METHOD_RECEIVER METHOD_RECEIVER},\n         {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER},\n         {@link #THROWS THROWS}, {@link #LOCAL_VARIABLE LOCAL_VARIABLE},\n         {@link #RESOURCE_VARIABLE RESOURCE_VARIABLE},\n         {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER},\n         {@link #INSTANCEOF INSTANCEOF}, {@link #NEW NEW},\n         {@link #CONSTRUCTOR_REFERENCE CONSTRUCTOR_REFERENCE},\n         {@link #METHOD_REFERENCE METHOD_REFERENCE}, {@link #CAST CAST},\n         {@link #CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\n         CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT},\n         {@link #METHOD_INVOCATION_TYPE_ARGUMENT\n         METHOD_INVOCATION_TYPE_ARGUMENT},\n         {@link #CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT\n         CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT}, or\n         {@link #METHOD_REFERENCE_TYPE_ARGUMENT\n         METHOD_REFERENCE_TYPE_ARGUMENT}.\n","return_type":"int"},{"parameters":null,"name":"getTypeParameterIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the type parameter referenced by this type\n reference. This method must only be used for type references whose sort\n is {@link #CLASS_TYPE_PARAMETER CLASS_TYPE_PARAMETER},\n {@link #METHOD_TYPE_PARAMETER METHOD_TYPE_PARAMETER},\n {@link #CLASS_TYPE_PARAMETER_BOUND CLASS_TYPE_PARAMETER_BOUND} or\n {@link #METHOD_TYPE_PARAMETER_BOUND METHOD_TYPE_PARAMETER_BOUND}.\n\n @return a type parameter index.\n","return_type":"int"},{"parameters":null,"name":"getTypeParameterBoundIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the type parameter bound, within the type parameter\n {@link #getTypeParameterIndex}, referenced by this type reference. This\n method must only be used for type references whose sort is\n {@link #CLASS_TYPE_PARAMETER_BOUND CLASS_TYPE_PARAMETER_BOUND} or\n {@link #METHOD_TYPE_PARAMETER_BOUND METHOD_TYPE_PARAMETER_BOUND}.\n\n @return a type parameter bound index.\n","return_type":"int"},{"parameters":null,"name":"getSuperTypeIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the \"super type\" of a class that is referenced by\n this type reference. This method must only be used for type references\n whose sort is {@link #CLASS_EXTENDS CLASS_EXTENDS}.\n\n @return the index of an interface in the 'implements' clause of a class,\n         or -1 if this type reference references the type of the super\n         class.\n","return_type":"int"},{"parameters":null,"name":"getFormalParameterIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the formal parameter whose type is referenced by\n this type reference. This method must only be used for type references\n whose sort is {@link #METHOD_FORMAL_PARAMETER METHOD_FORMAL_PARAMETER}.\n\n @return a formal parameter index.\n","return_type":"int"},{"parameters":null,"name":"getExceptionIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the exception, in a 'throws' clause of a method,\n whose type is referenced by this type reference. This method must only be\n used for type references whose sort is {@link #THROWS THROWS}.\n\n @return the index of an exception in the 'throws' clause of a method.\n","return_type":"int"},{"parameters":null,"name":"getTryCatchBlockIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the try catch block (using the order in which they\n are visited with visitTryCatchBlock), whose 'catch' type is referenced by\n this type reference. This method must only be used for type references\n whose sort is {@link #EXCEPTION_PARAMETER EXCEPTION_PARAMETER} .\n\n @return the index of an exception in the 'throws' clause of a method.\n","return_type":"int"},{"parameters":null,"name":"getTypeArgumentIndex","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the type argument referenced by this type reference.\n This method must only be used for type references whose sort is\n {@link #CAST CAST}, {@link #CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\n CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT},\n {@link #METHOD_INVOCATION_TYPE_ARGUMENT METHOD_INVOCATION_TYPE_ARGUMENT},\n {@link #CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT\n CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT}, or\n {@link #METHOD_REFERENCE_TYPE_ARGUMENT METHOD_REFERENCE_TYPE_ARGUMENT}.\n\n @return a type parameter index.\n","return_type":"int"},{"parameters":null,"name":"getValue","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the int encoded value of this type reference, suitable for use in\n visit methods related to type annotations, like visitTypeAnnotation.\n\n @return the int encoded value of this type reference.\n","return_type":"int"}],"fields":[{"parameters":null,"name":"CLASS_TYPE_PARAMETER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a type parameter of a generic\n class. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_TYPE_PARAMETER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a type parameter of a generic\n method. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"CLASS_EXTENDS","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the super class of a class or one\n of the interfaces it implements. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"CLASS_TYPE_PARAMETER_BOUND","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a bound of a type parameter of a\n generic class. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_TYPE_PARAMETER_BOUND","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a bound of a type parameter of a\n generic method. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"FIELD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type of a field. See\n {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_RETURN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the return type of a method. See\n {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_RECEIVER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the receiver type of a method.\n See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_FORMAL_PARAMETER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type of a formal parameter of\n a method. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"THROWS","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type of an exception declared\n in the throws clause of a method. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"LOCAL_VARIABLE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type of a local variable in a\n method. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"RESOURCE_VARIABLE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type of a resource variable\n in a method. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"EXCEPTION_PARAMETER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type of the exception of a\n 'catch' clause in a method. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"INSTANCEOF","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type declared in an\n 'instanceof' instruction. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"NEW","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type of the object created by\n a 'new' instruction. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"CONSTRUCTOR_REFERENCE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the receiver type of a\n constructor reference. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_REFERENCE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the receiver type of a method\n reference. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"CAST","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target the type declared in an explicit\n or implicit cast instruction. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a type parameter of a generic\n constructor in a constructor call. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_INVOCATION_TYPE_ARGUMENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a type parameter of a generic\n method in a method call. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a type parameter of a generic\n constructor in a constructor reference. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD_REFERENCE_TYPE_ARGUMENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of type references that target a type parameter of a generic\n method in a method reference. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"value","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The type reference value in Java class file format.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A reference to a type appearing in a class, field or method declaration, or\n on an instruction. Such a reference designates the part of the class where\n the referenced type is appearing (e.g. an 'extends', 'implements' or 'throws'\n clause, a 'new' instruction, a 'catch' clause, a type cast, a local variable\n declaration, etc).\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"TypePath","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"byte[]:b,int:offset","name":"TypePath","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Creates a new type path.\n\n @param b\n            the byte array containing the type path in Java class file\n            format.\n @param offset\n            the offset of the first byte of the type path in 'b'.\n","return_type":null}],"methods":[{"parameters":null,"name":"getLength","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the length of this path.\n\n @return the length of this path.\n","return_type":"int"},{"parameters":"int:index","name":"getStep","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the value of the given step of this path.\n\n @param index\n            an index between 0 and {@link #getLength()}, exclusive.\n @return {@link #ARRAY_ELEMENT ARRAY_ELEMENT}, {@link #INNER_TYPE\n         INNER_TYPE}, {@link #WILDCARD_BOUND WILDCARD_BOUND}, or\n         {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.\n","return_type":"int"},{"parameters":"int:index","name":"getStepArgument","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the type argument that the given step is stepping\n into. This method should only be used for steps whose value is\n {@link #TYPE_ARGUMENT TYPE_ARGUMENT}.\n\n @param index\n            an index between 0 and {@link #getLength()}, exclusive.\n @return the index of the type argument that the given step is stepping\n         into.\n","return_type":"int"},{"parameters":"String:typePath","name":"fromString","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Converts a type path in string form, in the format used by\n {@link #toString()}, into a TypePath object.\n\n @param typePath\n            a type path in string form, in the format used by\n            {@link #toString()}. May be null or empty.\n @return the corresponding TypePath object, or null if the path is empty.\n","return_type":"TypePath"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a string representation of this type path. {@link #ARRAY_ELEMENT\n ARRAY_ELEMENT} steps are represented with '[', {@link #INNER_TYPE\n INNER_TYPE} steps with '.', {@link #WILDCARD_BOUND WILDCARD_BOUND} steps\n with '*' and {@link #TYPE_ARGUMENT TYPE_ARGUMENT} steps with their type\n argument index in decimal form followed by ';'.\n","return_type":"String"}],"fields":[{"parameters":null,"name":"ARRAY_ELEMENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A type path step that steps into the element type of an array type. See\n {@link #getStep getStep}.\n","return_type":null},{"parameters":null,"name":"INNER_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A type path step that steps into the nested type of a class type. See\n {@link #getStep getStep}.\n","return_type":null},{"parameters":null,"name":"WILDCARD_BOUND","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A type path step that steps into the bound of a wildcard type. See\n {@link #getStep getStep}.\n","return_type":null},{"parameters":null,"name":"TYPE_ARGUMENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A type path step that steps into a type argument of a generic type. See\n {@link #getStep getStep}.\n","return_type":null},{"parameters":null,"name":"b","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The byte array where the path is stored, in Java class file format.\n","return_type":null},{"parameters":null,"name":"offset","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The offset of the first byte of the type path in 'b'.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The path to a type argument, wildcard bound, array element type, or static\n inner type within an enclosing type.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Type","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:sort,char[]:buf,int:off,int:len","name":"Type","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a reference type.\n\n @param sort\n            the sort of the reference type to be constructed.\n @param buf\n            a buffer containing the descriptor of the previous type.\n @param off\n            the offset of this descriptor in the previous buffer.\n @param len\n            the length of this descriptor.\n","return_type":null}],"methods":[{"parameters":"String:typeDescriptor","name":"getType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java type corresponding to the given type descriptor.\n\n @param typeDescriptor\n            a field or method type descriptor.\n @return the Java type corresponding to the given type descriptor.\n","return_type":"Type"},{"parameters":"String:internalName","name":"getObjectType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java type corresponding to the given internal name.\n\n @param internalName\n            an internal name.\n @return the Java type corresponding to the given internal name.\n","return_type":"Type"},{"parameters":"String:methodDescriptor","name":"getMethodType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java type corresponding to the given method descriptor.\n Equivalent to <code>Type.getType(methodDescriptor)</code>.\n\n @param methodDescriptor\n            a method descriptor.\n @return the Java type corresponding to the given method descriptor.\n","return_type":"Type"},{"parameters":"Type:returnType,jdk.internal.org.objectweb.asm.Type[]:argumentTypes","name":"getMethodType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java method type corresponding to the given argument and\n return types.\n\n @param returnType\n            the return type of the method.\n @param argumentTypes\n            the argument types of the method.\n @return the Java type corresponding to the given argument and return\n         types.\n","return_type":"Type"},{"parameters":"java.lang.Class:c","name":"getType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java type corresponding to the given class.\n\n @param c\n            a class.\n @return the Java type corresponding to the given class.\n","return_type":"Type"},{"parameters":"java.lang.reflect.Constructor:c","name":"getType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java method type corresponding to the given constructor.\n\n @param c\n            a {@link Constructor Constructor} object.\n @return the Java method type corresponding to the given constructor.\n","return_type":"Type"},{"parameters":"Method:m","name":"getType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java method type corresponding to the given method.\n\n @param m\n            a {@link Method Method} object.\n @return the Java method type corresponding to the given method.\n","return_type":"Type"},{"parameters":"String:methodDescriptor","name":"getArgumentTypes","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java types corresponding to the argument types of the given\n method descriptor.\n\n @param methodDescriptor\n            a method descriptor.\n @return the Java types corresponding to the argument types of the given\n         method descriptor.\n","return_type":"Type"},{"parameters":"Method:method","name":"getArgumentTypes","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java types corresponding to the argument types of the given\n method.\n\n @param method\n            a method.\n @return the Java types corresponding to the argument types of the given\n         method.\n","return_type":"Type"},{"parameters":"String:methodDescriptor","name":"getReturnType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java type corresponding to the return type of the given\n method descriptor.\n\n @param methodDescriptor\n            a method descriptor.\n @return the Java type corresponding to the return type of the given\n         method descriptor.\n","return_type":"Type"},{"parameters":"Method:method","name":"getReturnType","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java type corresponding to the return type of the given\n method.\n\n @param method\n            a method.\n @return the Java type corresponding to the return type of the given\n         method.\n","return_type":"Type"},{"parameters":"String:desc","name":"getArgumentsAndReturnSizes","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Computes the size of the arguments and of the return value of a method.\n\n @param desc\n            the descriptor of a method.\n @return the size of the arguments of the method (plus one for the\n         implicit this argument), argSize, and the size of its return\n         value, retSize, packed into a single int i =\n         <tt>(argSize &lt;&lt; 2) | retSize</tt> (argSize is therefore equal to\n         <tt>i &gt;&gt; 2</tt>, and retSize to <tt>i &amp; 0x03</tt>).\n","return_type":"int"},{"parameters":"char[]:buf,int:off","name":"getType","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the Java type corresponding to the given type descriptor. For\n method descriptors, buf is supposed to contain nothing more than the\n descriptor itself.\n\n @param buf\n            a buffer containing a type descriptor.\n @param off\n            the offset of this descriptor in the previous buffer.\n @return the Java type corresponding to the given type descriptor.\n","return_type":"Type"},{"parameters":null,"name":"getSort","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the sort of this Java type.\n\n @return {@link #VOID VOID}, {@link #BOOLEAN BOOLEAN}, {@link #CHAR CHAR},\n         {@link #BYTE BYTE}, {@link #SHORT SHORT}, {@link #INT INT},\n         {@link #FLOAT FLOAT}, {@link #LONG LONG}, {@link #DOUBLE DOUBLE},\n         {@link #ARRAY ARRAY}, {@link #OBJECT OBJECT} or {@link #METHOD\n         METHOD}.\n","return_type":"int"},{"parameters":null,"name":"getDimensions","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the number of dimensions of this array type. This method should\n only be used for an array type.\n\n @return the number of dimensions of this array type.\n","return_type":"int"},{"parameters":null,"name":"getElementType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the type of the elements of this array type. This method should\n only be used for an array type.\n\n @return Returns the type of the elements of this array type.\n","return_type":"Type"},{"parameters":null,"name":"getClassName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the binary name of the class corresponding to this type. This\n method must not be used on method types.\n\n @return the binary name of the class corresponding to this type.\n","return_type":"String"},{"parameters":null,"name":"getInternalName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the internal name of the class corresponding to this object or\n array type. The internal name of a class is its fully qualified name (as\n returned by Class.getName(), where '.' are replaced by '/'. This method\n should only be used for an object or array type.\n\n @return the internal name of the class corresponding to this object type.\n","return_type":"String"},{"parameters":null,"name":"getArgumentTypes","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the argument types of methods of this type. This method should\n only be used for method types.\n\n @return the argument types of methods of this type.\n","return_type":"Type"},{"parameters":null,"name":"getReturnType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the return type of methods of this type. This method should only\n be used for method types.\n\n @return the return type of methods of this type.\n","return_type":"Type"},{"parameters":null,"name":"getArgumentsAndReturnSizes","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the size of the arguments and of the return value of methods of\n this type. This method should only be used for method types.\n\n @return the size of the arguments (plus one for the implicit this\n         argument), argSize, and the size of the return value, retSize,\n         packed into a single\n         int i = <tt>(argSize &lt;&lt; 2) | retSize</tt>\n         (argSize is therefore equal to <tt>i &gt;&gt; 2</tt>,\n         and retSize to <tt>i &amp; 0x03</tt>).\n","return_type":"int"},{"parameters":null,"name":"getDescriptor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the descriptor corresponding to this Java type.\n\n @return the descriptor corresponding to this Java type.\n","return_type":"String"},{"parameters":"Type:returnType,jdk.internal.org.objectweb.asm.Type[]:argumentTypes","name":"getMethodDescriptor","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the descriptor corresponding to the given argument and return\n types.\n\n @param returnType\n            the return type of the method.\n @param argumentTypes\n            the argument types of the method.\n @return the descriptor corresponding to the given argument and return\n         types.\n","return_type":"String"},{"parameters":"StringBuffer:buf","name":"getDescriptor","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Appends the descriptor corresponding to this Java type to the given\n string buffer.\n\n @param buf\n            the string buffer to which the descriptor must be appended.\n","return_type":"void"},{"parameters":"java.lang.Class:c","name":"getInternalName","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the internal name of the given class. The internal name of a\n class is its fully qualified name, as returned by Class.getName(), where\n '.' are replaced by '/'.\n\n @param c\n            an object or array class.\n @return the internal name of the given class.\n","return_type":"String"},{"parameters":"java.lang.Class:c","name":"getDescriptor","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the descriptor corresponding to the given Java type.\n\n @param c\n            an object class, a primitive class or an array class.\n @return the descriptor corresponding to the given class.\n","return_type":"String"},{"parameters":"java.lang.reflect.Constructor:c","name":"getConstructorDescriptor","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the descriptor corresponding to the given constructor.\n\n @param c\n            a {@link Constructor Constructor} object.\n @return the descriptor of the given constructor.\n","return_type":"String"},{"parameters":"Method:m","name":"getMethodDescriptor","modifier":"public","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the descriptor corresponding to the given method.\n\n @param m\n            a {@link Method Method} object.\n @return the descriptor of the given method.\n","return_type":"String"},{"parameters":"StringBuffer:buf,java.lang.Class:c","name":"getDescriptor","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Appends the descriptor of the given class to the given string buffer.\n\n @param buf\n            the string buffer to which the descriptor must be appended.\n @param c\n            the class whose descriptor must be computed.\n","return_type":"void"},{"parameters":null,"name":"getSize","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the size of values of this type. This method must not be used for\n method types.\n\n @return the size of values of this type, i.e., 2 for <tt>long</tt> and\n         <tt>double</tt>, 0 for <tt>void</tt> and 1 otherwise.\n","return_type":"int"},{"parameters":"int:opcode","name":"getOpcode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a JVM instruction opcode adapted to this Java type. This method\n must not be used for method types.\n\n @param opcode\n            a JVM instruction opcode. This opcode must be one of ILOAD,\n            ISTORE, IALOAD, IASTORE, IADD, ISUB, IMUL, IDIV, IREM, INEG,\n            ISHL, ISHR, IUSHR, IAND, IOR, IXOR and IRETURN.\n @return an opcode that is similar to the given opcode, but adapted to\n         this Java type. For example, if this type is <tt>float</tt> and\n         <tt>opcode</tt> is IRETURN, this method returns FRETURN.\n","return_type":"int"},{"parameters":"Object:o","name":"equals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Tests if the given object is equal to this type.\n\n @param o\n            the object to be compared to this type.\n @return <tt>true</tt> if the given object is equal to this type.\n","return_type":"boolean"},{"parameters":null,"name":"hashCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a hash code value for this type.\n\n @return a hash code value for this type.\n","return_type":"int"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a string representation of this type.\n\n @return the descriptor of this type.\n","return_type":"String"}],"fields":[{"parameters":null,"name":"VOID","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>void</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"BOOLEAN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>boolean</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"CHAR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>char</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"BYTE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>byte</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"SHORT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>short</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"INT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>int</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"FLOAT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>float</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"LONG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>long</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"DOUBLE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of the <tt>double</tt> type. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"ARRAY","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of array reference types. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"OBJECT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of object reference types. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"METHOD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of method types. See {@link #getSort getSort}.\n","return_type":null},{"parameters":null,"name":"VOID_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>void</tt> type.\n","return_type":null},{"parameters":null,"name":"BOOLEAN_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>boolean</tt> type.\n","return_type":null},{"parameters":null,"name":"CHAR_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>char</tt> type.\n","return_type":null},{"parameters":null,"name":"BYTE_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>byte</tt> type.\n","return_type":null},{"parameters":null,"name":"SHORT_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>short</tt> type.\n","return_type":null},{"parameters":null,"name":"INT_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>int</tt> type.\n","return_type":null},{"parameters":null,"name":"FLOAT_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>float</tt> type.\n","return_type":null},{"parameters":null,"name":"LONG_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>long</tt> type.\n","return_type":null},{"parameters":null,"name":"DOUBLE_TYPE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The <tt>double</tt> type.\n","return_type":null},{"parameters":null,"name":"sort","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The sort of this Java type.\n","return_type":null},{"parameters":null,"name":"buf","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A buffer containing the internal name of this Java type. This field is\n only used for reference types.\n","return_type":null},{"parameters":null,"name":"off","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The offset of the internal name of this Java type in {@link #buf buf} or,\n for primitive types, the size, descriptor and getOpcode offsets for this\n type (byte 0 contains the size, byte 1 the descriptor, byte 2 the offset\n for IALOAD or IASTORE, byte 3 the offset for all other instructions).\n","return_type":null},{"parameters":null,"name":"len","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The length of the internal name of this Java type.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A Java field or method type. This class can be used to make it easier to\n manipulate type and method descriptors.\n\n @author Eric Bruneton\n @author Chris Nokleberg\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Opcodes","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[],"methods":[],"fields":[{"parameters":null,"name":"ASM4","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ASM5","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_2","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_3","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_4","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_5","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_6","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_7","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"V1_8","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_PUBLIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_PRIVATE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_PROTECTED","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_STATIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_FINAL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_SUPER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_SYNCHRONIZED","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_VOLATILE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_BRIDGE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_VARARGS","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_TRANSIENT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_NATIVE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_INTERFACE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_ABSTRACT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_STRICT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_SYNTHETIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_ANNOTATION","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_ENUM","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_MANDATED","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACC_DEPRECATED","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_BOOLEAN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_CHAR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_FLOAT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_DOUBLE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_BYTE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_SHORT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_INT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"T_LONG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_GETFIELD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_GETSTATIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_PUTFIELD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_PUTSTATIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_INVOKEVIRTUAL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_INVOKESTATIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_INVOKESPECIAL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_NEWINVOKESPECIAL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"H_INVOKEINTERFACE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"F_NEW","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Represents an expanded frame. See {@link ClassReader#EXPAND_FRAMES}.\n","return_type":null},{"parameters":null,"name":"F_FULL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Represents a compressed frame with complete frame data.\n","return_type":null},{"parameters":null,"name":"F_APPEND","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Represents a compressed frame where locals are the same as the locals in\n the previous frame, except that additional 1-3 locals are defined, and\n with an empty stack.\n","return_type":null},{"parameters":null,"name":"F_CHOP","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Represents a compressed frame where locals are the same as the locals in\n the previous frame, except that the last 1-3 locals are absent and with\n an empty stack.\n","return_type":null},{"parameters":null,"name":"F_SAME","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Represents a compressed frame with exactly the same locals as the\n previous frame and with an empty stack.\n","return_type":null},{"parameters":null,"name":"F_SAME1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Represents a compressed frame with exactly the same locals as the\n previous frame and with a single value on the stack.\n","return_type":null},{"parameters":null,"name":"TOP","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INTEGER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FLOAT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DOUBLE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LONG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"NULL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"UNINITIALIZED_THIS","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"NOP","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ACONST_NULL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ICONST_M1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ICONST_0","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ICONST_1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ICONST_2","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ICONST_3","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ICONST_4","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ICONST_5","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LCONST_0","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LCONST_1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FCONST_0","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FCONST_1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FCONST_2","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DCONST_0","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DCONST_1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"BIPUSH","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"SIPUSH","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LDC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ILOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LLOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FLOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DLOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"AALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"BALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"CALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"SALOAD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ISTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LSTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FSTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DSTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"AASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"BASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"CASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"SASTORE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"POP","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"POP2","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DUP","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DUP_X1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DUP_X2","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DUP2","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DUP2_X1","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DUP2_X2","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"SWAP","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IADD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LADD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FADD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DADD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ISUB","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LSUB","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FSUB","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DSUB","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IMUL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LMUL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FMUL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DMUL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IDIV","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LDIV","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FDIV","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DDIV","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IREM","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LREM","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FREM","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DREM","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INEG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LNEG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FNEG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DNEG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ISHL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LSHL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ISHR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LSHR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IUSHR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LUSHR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IAND","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LAND","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IXOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LXOR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IINC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"I2L","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"I2F","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"I2D","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"L2I","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"L2F","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"L2D","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"F2I","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"F2L","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"F2D","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"D2I","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"D2L","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"D2F","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"I2B","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"I2C","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"I2S","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LCMP","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FCMPL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FCMPG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DCMPL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DCMPG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFEQ","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFNE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFLT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFGE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFGT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFLE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ICMPEQ","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ICMPNE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ICMPLT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ICMPGE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ICMPGT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ICMPLE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ACMPEQ","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IF_ACMPNE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"GOTO","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"JSR","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"RET","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"TABLESWITCH","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LOOKUPSWITCH","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IRETURN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"LRETURN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"FRETURN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"DRETURN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ARETURN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"RETURN","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"GETSTATIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"PUTSTATIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"GETFIELD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"PUTFIELD","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INVOKEVIRTUAL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INVOKESPECIAL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INVOKESTATIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INVOKEINTERFACE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INVOKEDYNAMIC","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"NEW","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"NEWARRAY","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ANEWARRAY","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ARRAYLENGTH","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"ATHROW","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"CHECKCAST","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"INSTANCEOF","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"MONITORENTER","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"MONITOREXIT","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"MULTIANEWARRAY","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFNULL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null},{"parameters":null,"name":"IFNONNULL","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Defines the JVM opcodes, access flags and array type codes. This interface\n does not define all the JVM opcodes because some opcodes are automatically\n handled. For example, the xLOAD and xSTORE opcodes are automatically replaced\n by xLOAD_n and xSTORE_n opcodes when possible. The xLOAD_n and xSTORE_n\n opcodes are therefore not defined in this interface. Likewise for LDC,\n automatically replaced by LDC_W or LDC2_W when necessary, WIDE, GOTO_W and\n JSR_W.\n\n @author Eric Bruneton\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"MethodWriter","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"ClassWriter:cw,int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions,boolean:computeMaxs,boolean:computeFrames","name":"MethodWriter","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link MethodWriter}.\n\n @param cw\n            the class writer in which the method must be added.\n @param access\n            the method's access flags (see {@link Opcodes}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type}).\n @param signature\n            the method's signature. May be <tt>null</tt>.\n @param exceptions\n            the internal names of the method's exceptions. May be\n            <tt>null</tt>.\n @param computeMaxs\n            <tt>true</tt> if the maximum stack size and number of local\n            variables must be automatically computed.\n @param computeFrames\n            <tt>true</tt> if the stack map tables must be recomputed from\n            scratch.\n","return_type":null}],"methods":[{"parameters":"String:name,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitSwitchInsn","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:info,Label:successor","name":"addSuccessor","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a successor to the {@link #currentBlock currentBlock} block.\n\n @param info\n            information about the control flow edge to be added.\n @param successor\n            the successor block to be added to the current block.\n","return_type":"void"},{"parameters":null,"name":"noSuccessor","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Ends the current basic block. This method must be used in the case where\n the current basic block does not have any successor.\n","return_type":"void"},{"parameters":"Frame:f","name":"visitFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a frame that has been computed from scratch.\n\n @param f\n            the frame that must be visited.\n","return_type":"void"},{"parameters":null,"name":"visitImplicitFirstFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visit the implicit first frame of this method.\n","return_type":"void"},{"parameters":"int:offset,int:nLocal,int:nStack","name":"startFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Starts the visit of a stack map frame.\n\n @param offset\n            the offset of the instruction to which the frame corresponds.\n @param nLocal\n            the number of local variables in the frame.\n @param nStack\n            the number of stack elements in the frame.\n @return the index of the next element to be written in this frame.\n","return_type":"int"},{"parameters":null,"name":"endFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Checks if the visit of the current frame {@link #frame} is finished, and\n if yes, write it in the StackMapTable attribute.\n","return_type":"void"},{"parameters":null,"name":"writeFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Compress and writes the current frame {@link #frame} in the StackMapTable\n attribute.\n","return_type":"void"},{"parameters":"int:start,int:end","name":"writeFrameTypes","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Writes some types of the current frame {@link #frame} into the\n StackMapTableAttribute. This method converts types from the format used\n in {@link Label} to the format used in StackMapTable attributes. In\n particular, it converts type table indexes to constant pool indexes.\n\n @param start\n            index of the first type in {@link #frame} to write.\n @param end\n            index of last type in {@link #frame} to write (exclusive).\n","return_type":"void"},{"parameters":"Object:type","name":"writeFrameType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"getSize","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Returns the size of the bytecode of this method.\n\n @return the size of the bytecode of this method.\n","return_type":"int"},{"parameters":"ByteVector:out","name":"put","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Puts the bytecode of this method in the given byte vector.\n\n @param out\n            the byte vector into which the bytecode of this method must be\n            copied.\n","return_type":"void"},{"parameters":null,"name":"resizeInstructions","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Resizes and replaces the temporary instructions inserted by\n {@link Label#resolve} for wide forward jumps, while keeping jump offsets\n and instruction addresses consistent. This may require to resize other\n existing instructions, or even to introduce new instructions: for\n example, increasing the size of an instruction by 2 at the middle of a\n method can increases the offset of an IFEQ instruction from 32766 to\n 32768, in which case IFEQ 32766 must be replaced with IFNEQ 8 GOTO_W\n 32765. This, in turn, may require to increase the size of another jump\n instruction, and so on... All these operations are handled automatically\n by this method.\n <p>\n <i>This method must be called after all the method that is being built\n has been visited</i>. In particular, the {@link Label Label} objects used\n to construct the method are no longer valid after this method has been\n called.\n","return_type":"void"},{"parameters":"byte[]:b,int:index","name":"readUnsignedShort","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads an unsigned short value in the given byte array.\n\n @param b\n            a byte array.\n @param index\n            the start index of the value to be read.\n @return the read value.\n","return_type":"int"},{"parameters":"byte[]:b,int:index","name":"readShort","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a signed short value in the given byte array.\n\n @param b\n            a byte array.\n @param index\n            the start index of the value to be read.\n @return the read value.\n","return_type":"short"},{"parameters":"byte[]:b,int:index","name":"readInt","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a signed int value in the given byte array.\n\n @param b\n            a byte array.\n @param index\n            the start index of the value to be read.\n @return the read value.\n","return_type":"int"},{"parameters":"byte[]:b,int:index,int:s","name":"writeShort","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Writes a short value in the given byte array.\n\n @param b\n            a byte array.\n @param index\n            where the first byte of the short value must be written.\n @param s\n            the value to be written in the given byte array.\n","return_type":"void"},{"parameters":"int[]:indexes,int[]:sizes,int:begin,int:end","name":"getNewOffset","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Computes the future value of a bytecode offset.\n <p>\n Note: it is possible to have several entries for the same instruction in\n the <tt>indexes</tt> and <tt>sizes</tt>: two entries (index=a,size=b) and\n (index=a,size=b') are equivalent to a single entry (index=a,size=b+b').\n\n @param indexes\n            current positions of the instructions to be resized. Each\n            instruction must be designated by the index of its <i>last</i>\n            byte, plus one (or, in other words, by the index of the\n            <i>first</i> byte of the <i>next</i> instruction).\n @param sizes\n            the number of bytes to be <i>added</i> to the above\n            instructions. More precisely, for each i < <tt>len</tt>,\n            <tt>sizes</tt>[i] bytes will be added at the end of the\n            instruction designated by <tt>indexes</tt>[i] or, if\n            <tt>sizes</tt>[i] is negative, the <i>last</i> |\n            <tt>sizes[i]</tt>| bytes of the instruction will be removed\n            (the instruction size <i>must not</i> become negative or\n            null).\n @param begin\n            index of the first byte of the source instruction.\n @param end\n            index of the first byte of the target instruction.\n @return the future value of the given bytecode offset.\n","return_type":"int"},{"parameters":"int[]:indexes,int[]:sizes,Label:label","name":"getNewOffset","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Updates the offset of the given label.\n\n @param indexes\n            current positions of the instructions to be resized. Each\n            instruction must be designated by the index of its <i>last</i>\n            byte, plus one (or, in other words, by the index of the\n            <i>first</i> byte of the <i>next</i> instruction).\n @param sizes\n            the number of bytes to be <i>added</i> to the above\n            instructions. More precisely, for each i < <tt>len</tt>,\n            <tt>sizes</tt>[i] bytes will be added at the end of the\n            instruction designated by <tt>indexes</tt>[i] or, if\n            <tt>sizes</tt>[i] is negative, the <i>last</i> |\n            <tt>sizes[i]</tt>| bytes of the instruction will be removed\n            (the instruction size <i>must not</i> become negative or\n            null).\n @param label\n            the label whose offset must be updated.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"ACC_CONSTRUCTOR","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Pseudo access flag used to denote constructors.\n","return_type":null},{"parameters":null,"name":"SAME_FRAME","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Frame has exactly the same locals as the previous stack map frame and\n number of stack items is zero.\n","return_type":null},{"parameters":null,"name":"SAME_LOCALS_1_STACK_ITEM_FRAME","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Frame has exactly the same locals as the previous stack map frame and\n number of stack items is 1\n","return_type":null},{"parameters":null,"name":"RESERVED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Reserved for future use\n","return_type":null},{"parameters":null,"name":"SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Frame has exactly the same locals as the previous stack map frame and\n number of stack items is 1. Offset is bigger then 63;\n","return_type":null},{"parameters":null,"name":"CHOP_FRAME","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Frame where current locals are the same as the locals in the previous\n frame, except that the k last locals are absent. The value of k is given\n by the formula 251-frame_type.\n","return_type":null},{"parameters":null,"name":"SAME_FRAME_EXTENDED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Frame has exactly the same locals as the previous stack map frame and\n number of stack items is zero. Offset is bigger then 63;\n","return_type":null},{"parameters":null,"name":"APPEND_FRAME","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Frame where current locals are the same as the locals in the previous\n frame, except that k additional locals are defined. The value of k is\n given by the formula frame_type-251.\n","return_type":null},{"parameters":null,"name":"FULL_FRAME","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Full frame\n","return_type":null},{"parameters":null,"name":"FRAMES","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates that the stack map frames must be recomputed from scratch. In\n this case the maximum stack size and number of local variables is also\n recomputed from scratch.\n\n @see #compute\n","return_type":null},{"parameters":null,"name":"MAXS","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates that the maximum stack size and number of local variables must\n be automatically computed.\n\n @see #compute\n","return_type":null},{"parameters":null,"name":"NOTHING","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates that nothing must be automatically computed.\n\n @see #compute\n","return_type":null},{"parameters":null,"name":"cw","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The class writer to which this method must be added.\n","return_type":null},{"parameters":null,"name":"access","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Access flags of this method.\n","return_type":null},{"parameters":null,"name":"name","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The index of the constant pool item that contains the name of this\n method.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The index of the constant pool item that contains the descriptor of this\n method.\n","return_type":null},{"parameters":null,"name":"descriptor","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The descriptor of this method.\n","return_type":null},{"parameters":null,"name":"signature","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The signature of this method.\n","return_type":null},{"parameters":null,"name":"classReaderOffset","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" If not zero, indicates that the code of this method must be copied from\n the ClassReader associated to this writer in <code>cw.cr</code>. More\n precisely, this field gives the index of the first byte to copied from\n <code>cw.cr.b</code>.\n","return_type":null},{"parameters":null,"name":"classReaderLength","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" If not zero, indicates that the code of this method must be copied from\n the ClassReader associated to this writer in <code>cw.cr</code>. More\n precisely, this field gives the number of bytes to copied from\n <code>cw.cr.b</code>.\n","return_type":null},{"parameters":null,"name":"exceptionCount","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of exceptions that can be thrown by this method.\n","return_type":null},{"parameters":null,"name":"exceptions","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The exceptions that can be thrown by this method. More precisely, this\n array contains the indexes of the constant pool items that contain the\n internal names of these exception classes.\n","return_type":null},{"parameters":null,"name":"annd","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The annotation default attribute of this method. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"anns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible annotations of this method. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"ianns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible annotations of this method. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"tanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible type annotations of this method. May be <tt>null</tt>\n .\n","return_type":null},{"parameters":null,"name":"itanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible type annotations of this method. May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"panns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible parameter annotations of this method. May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"ipanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible parameter annotations of this method. May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"synthetics","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The number of synthetic parameters of this method.\n","return_type":null},{"parameters":null,"name":"attrs","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The non standard attributes of the method.\n","return_type":null},{"parameters":null,"name":"code","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The bytecode of this method.\n","return_type":null},{"parameters":null,"name":"maxStack","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Maximum stack size of this method.\n","return_type":null},{"parameters":null,"name":"maxLocals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Maximum number of local variables for this method.\n","return_type":null},{"parameters":null,"name":"currentLocals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of local variables in the current stack map frame.\n","return_type":null},{"parameters":null,"name":"frameCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of stack map frames in the StackMapTable attribute.\n","return_type":null},{"parameters":null,"name":"stackMap","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The StackMapTable attribute.\n","return_type":null},{"parameters":null,"name":"previousFrameOffset","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The offset of the last frame that was written in the StackMapTable\n attribute.\n","return_type":null},{"parameters":null,"name":"previousFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The last frame that was written in the StackMapTable attribute.\n\n @see #frame\n","return_type":null},{"parameters":null,"name":"frame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The current stack map frame. The first element contains the offset of the\n instruction to which the frame corresponds, the second element is the\n number of locals and the third one is the number of stack elements. The\n local variables start at index 3 and are followed by the operand stack\n values. In summary frame[0] = offset, frame[1] = nLocal, frame[2] =\n nStack, frame[3] = nLocal. All types are encoded as integers, with the\n same format as the one used in {@link Label}, but limited to BASE types.\n","return_type":null},{"parameters":null,"name":"handlerCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of elements in the exception handler list.\n","return_type":null},{"parameters":null,"name":"firstHandler","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The first element in the exception handler list.\n","return_type":null},{"parameters":null,"name":"lastHandler","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The last element in the exception handler list.\n","return_type":null},{"parameters":null,"name":"methodParametersCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of entries in the MethodParameters attribute.\n","return_type":null},{"parameters":null,"name":"methodParameters","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The MethodParameters attribute.\n","return_type":null},{"parameters":null,"name":"localVarCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of entries in the LocalVariableTable attribute.\n","return_type":null},{"parameters":null,"name":"localVar","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The LocalVariableTable attribute.\n","return_type":null},{"parameters":null,"name":"localVarTypeCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of entries in the LocalVariableTypeTable attribute.\n","return_type":null},{"parameters":null,"name":"localVarType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The LocalVariableTypeTable attribute.\n","return_type":null},{"parameters":null,"name":"lineNumberCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of entries in the LineNumberTable attribute.\n","return_type":null},{"parameters":null,"name":"lineNumber","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The LineNumberTable attribute.\n","return_type":null},{"parameters":null,"name":"lastCodeOffset","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The start offset of the last visited instruction.\n","return_type":null},{"parameters":null,"name":"ctanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible type annotations of the code. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"ictanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible type annotations of the code. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"cattrs","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The non standard attributes of the method's code.\n","return_type":null},{"parameters":null,"name":"resize","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if some jump instructions are too small and need to be resized.\n","return_type":null},{"parameters":null,"name":"subroutines","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The number of subroutines in this method.\n","return_type":null},{"parameters":null,"name":"compute","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates what must be automatically computed.\n\n @see #FRAMES\n @see #MAXS\n @see #NOTHING\n","return_type":null},{"parameters":null,"name":"labels","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A list of labels. This list is the list of basic blocks in the method,\n i.e. a list of Label objects linked to each other by their\n {@link Label#successor} field, in the order they are visited by\n {@link MethodVisitor#visitLabel}, and starting with the first basic\n block.\n","return_type":null},{"parameters":null,"name":"previousBlock","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The previous basic block.\n","return_type":null},{"parameters":null,"name":"currentBlock","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The current basic block.\n","return_type":null},{"parameters":null,"name":"stackSize","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The (relative) stack size after the last visited instruction. This size\n is relative to the beginning of the current basic block, i.e., the true\n stack size after the last visited instruction is equal to the\n {@link Label#inputStackTop beginStackSize} of the current basic block\n plus <tt>stackSize</tt>.\n","return_type":null},{"parameters":null,"name":"maxStackSize","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The (relative) maximum stack size after the last visited instruction.\n This size is relative to the beginning of the current basic block, i.e.,\n the true maximum stack size after the last visited instruction is equal\n to the {@link Label#inputStackTop beginStackSize} of the current basic\n block plus <tt>stackSize</tt>.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A {@link MethodVisitor} that generates methods in bytecode form. Each visit\n method of this class appends the bytecode corresponding to the visited\n instruction to a byte vector, in the order these methods are called.\n\n @author Eric Bruneton\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"MethodVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api","name":"MethodVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link MethodVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":"int:api,MethodVisitor:mv","name":"MethodVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link MethodVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param mv\n            the method visitor to which this visitor must delegate method\n            calls. May be null.\n","return_type":null}],"methods":[{"parameters":"String:name,int:access","name":"visitParameter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a parameter of this method.\n\n @param name\n            parameter name or null if none is provided.\n @param access\n            the parameter's access flags, only <tt>ACC_FINAL</tt>,\n            <tt>ACC_SYNTHETIC</tt> or/and <tt>ACC_MANDATED</tt> are\n            allowed (see {@link Opcodes}).\n","return_type":"void"},{"parameters":null,"name":"visitAnnotationDefault","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the default value of this annotation interface method.\n\n @return a visitor to the visit the actual default value of this\n         annotation interface method, or <tt>null</tt> if this visitor is\n         not interested in visiting this default value. The 'name'\n         parameters passed to the methods of this annotation visitor are\n         ignored. Moreover, exacly one visit method must be called on this\n         annotation visitor, followed by visitEnd.\n","return_type":"AnnotationVisitor"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation of this method.\n\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation on a type in the method signature.\n\n @param typeRef\n            a reference to the annotated type. The sort of this type\n            reference must be {@link TypeReference#METHOD_TYPE_PARAMETER\n            METHOD_TYPE_PARAMETER},\n            {@link TypeReference#METHOD_TYPE_PARAMETER_BOUND\n            METHOD_TYPE_PARAMETER_BOUND},\n            {@link TypeReference#METHOD_RETURN METHOD_RETURN},\n            {@link TypeReference#METHOD_RECEIVER METHOD_RECEIVER},\n            {@link TypeReference#METHOD_FORMAL_PARAMETER\n            METHOD_FORMAL_PARAMETER} or {@link TypeReference#THROWS\n            THROWS}. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"int:parameter,String:desc,boolean:visible","name":"visitParameterAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation of a parameter this method.\n\n @param parameter\n            the parameter index.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a non standard attribute of this method.\n\n @param attr\n            an attribute.\n","return_type":"void"},{"parameters":null,"name":"visitCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Starts the visit of the method's code, if any (i.e. non abstract method).\n","return_type":"void"},{"parameters":"int:type,int:nLocal,java.lang.Object[]:local,int:nStack,java.lang.Object[]:stack","name":"visitFrame","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the current state of the local variables and operand stack\n elements. This method must(*) be called <i>just before</i> any\n instruction <b>i</b> that follows an unconditional branch instruction\n such as GOTO or THROW, that is the target of a jump instruction, or that\n starts an exception handler block. The visited types must describe the\n values of the local variables and of the operand stack elements <i>just\n before</i> <b>i</b> is executed.<br>\n <br>\n (*) this is mandatory only for classes whose version is greater than or\n equal to {@link Opcodes#V1_6 V1_6}. <br>\n <br>\n The frames of a method must be given either in expanded form, or in\n compressed form (all frames must use the same format, i.e. you must not\n mix expanded and compressed frames within a single method):\n <ul>\n <li>In expanded form, all frames must have the F_NEW type.</li>\n <li>In compressed form, frames are basically \"deltas\" from the state of\n the previous frame:\n <ul>\n <li>{@link Opcodes#F_SAME} representing frame with exactly the same\n locals as the previous frame and with the empty stack.</li>\n <li>{@link Opcodes#F_SAME1} representing frame with exactly the same\n locals as the previous frame and with single value on the stack (\n <code>nStack</code> is 1 and <code>stack[0]</code> contains value for the\n type of the stack item).</li>\n <li>{@link Opcodes#F_APPEND} representing frame with current locals are\n the same as the locals in the previous frame, except that additional\n locals are defined (<code>nLocal</code> is 1, 2 or 3 and\n <code>local</code> elements contains values representing added types).</li>\n <li>{@link Opcodes#F_CHOP} representing frame with current locals are the\n same as the locals in the previous frame, except that the last 1-3 locals\n are absent and with the empty stack (<code>nLocals</code> is 1, 2 or 3).</li>\n <li>{@link Opcodes#F_FULL} representing complete frame data.</li>\n </ul>\n </li>\n </ul>\n <br>\n In both cases the first frame, corresponding to the method's parameters\n and access flags, is implicit and must not be visited. Also, it is\n illegal to visit two or more frames for the same code location (i.e., at\n least one instruction must be visited between two calls to visitFrame).\n\n @param type\n            the type of this stack map frame. Must be\n            {@link Opcodes#F_NEW} for expanded frames, or\n            {@link Opcodes#F_FULL}, {@link Opcodes#F_APPEND},\n            {@link Opcodes#F_CHOP}, {@link Opcodes#F_SAME} or\n            {@link Opcodes#F_APPEND}, {@link Opcodes#F_SAME1} for\n            compressed frames.\n @param nLocal\n            the number of local variables in the visited frame.\n @param local\n            the local variable types in this frame. This array must not be\n            modified. Primitive types are represented by\n            {@link Opcodes#TOP}, {@link Opcodes#INTEGER},\n            {@link Opcodes#FLOAT}, {@link Opcodes#LONG},\n            {@link Opcodes#DOUBLE},{@link Opcodes#NULL} or\n            {@link Opcodes#UNINITIALIZED_THIS} (long and double are\n            represented by a single element). Reference types are\n            represented by String objects (representing internal names),\n            and uninitialized types by Label objects (this label\n            designates the NEW instruction that created this uninitialized\n            value).\n @param nStack\n            the number of operand stack elements in the visited frame.\n @param stack\n            the operand stack types in this frame. This array must not be\n            modified. Its content has the same format as the \"local\"\n            array.\n @throws IllegalStateException\n             if a frame is visited just after another one, without any\n             instruction between the two (unless this frame is a\n             Opcodes#F_SAME frame, in which case it is silently ignored).\n","return_type":"void"},{"parameters":"int:opcode","name":"visitInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a zero operand instruction.\n\n @param opcode\n            the opcode of the instruction to be visited. This opcode is\n            either NOP, ACONST_NULL, ICONST_M1, ICONST_0, ICONST_1,\n            ICONST_2, ICONST_3, ICONST_4, ICONST_5, LCONST_0, LCONST_1,\n            FCONST_0, FCONST_1, FCONST_2, DCONST_0, DCONST_1, IALOAD,\n            LALOAD, FALOAD, DALOAD, AALOAD, BALOAD, CALOAD, SALOAD,\n            IASTORE, LASTORE, FASTORE, DASTORE, AASTORE, BASTORE, CASTORE,\n            SASTORE, POP, POP2, DUP, DUP_X1, DUP_X2, DUP2, DUP2_X1,\n            DUP2_X2, SWAP, IADD, LADD, FADD, DADD, ISUB, LSUB, FSUB, DSUB,\n            IMUL, LMUL, FMUL, DMUL, IDIV, LDIV, FDIV, DDIV, IREM, LREM,\n            FREM, DREM, INEG, LNEG, FNEG, DNEG, ISHL, LSHL, ISHR, LSHR,\n            IUSHR, LUSHR, IAND, LAND, IOR, LOR, IXOR, LXOR, I2L, I2F, I2D,\n            L2I, L2F, L2D, F2I, F2L, F2D, D2I, D2L, D2F, I2B, I2C, I2S,\n            LCMP, FCMPL, FCMPG, DCMPL, DCMPG, IRETURN, LRETURN, FRETURN,\n            DRETURN, ARETURN, RETURN, ARRAYLENGTH, ATHROW, MONITORENTER,\n            or MONITOREXIT.\n","return_type":"void"},{"parameters":"int:opcode,int:operand","name":"visitIntInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an instruction with a single int operand.\n\n @param opcode\n            the opcode of the instruction to be visited. This opcode is\n            either BIPUSH, SIPUSH or NEWARRAY.\n @param operand\n            the operand of the instruction to be visited.<br>\n            When opcode is BIPUSH, operand value should be between\n            Byte.MIN_VALUE and Byte.MAX_VALUE.<br>\n            When opcode is SIPUSH, operand value should be between\n            Short.MIN_VALUE and Short.MAX_VALUE.<br>\n            When opcode is NEWARRAY, operand value should be one of\n            {@link Opcodes#T_BOOLEAN}, {@link Opcodes#T_CHAR},\n            {@link Opcodes#T_FLOAT}, {@link Opcodes#T_DOUBLE},\n            {@link Opcodes#T_BYTE}, {@link Opcodes#T_SHORT},\n            {@link Opcodes#T_INT} or {@link Opcodes#T_LONG}.\n","return_type":"void"},{"parameters":"int:opcode,int:var","name":"visitVarInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a local variable instruction. A local variable instruction is an\n instruction that loads or stores the value of a local variable.\n\n @param opcode\n            the opcode of the local variable instruction to be visited.\n            This opcode is either ILOAD, LLOAD, FLOAD, DLOAD, ALOAD,\n            ISTORE, LSTORE, FSTORE, DSTORE, ASTORE or RET.\n @param var\n            the operand of the instruction to be visited. This operand is\n            the index of a local variable.\n","return_type":"void"},{"parameters":"int:opcode,String:type","name":"visitTypeInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a type instruction. A type instruction is an instruction that\n takes the internal name of a class as parameter.\n\n @param opcode\n            the opcode of the type instruction to be visited. This opcode\n            is either NEW, ANEWARRAY, CHECKCAST or INSTANCEOF.\n @param type\n            the operand of the instruction to be visited. This operand\n            must be the internal name of an object or array class (see\n            {@link Type#getInternalName() getInternalName}).\n","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitFieldInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a field instruction. A field instruction is an instruction that\n loads or stores the value of a field of an object.\n\n @param opcode\n            the opcode of the type instruction to be visited. This opcode\n            is either GETSTATIC, PUTSTATIC, GETFIELD or PUTFIELD.\n @param owner\n            the internal name of the field's owner class (see\n            {@link Type#getInternalName() getInternalName}).\n @param name\n            the field's name.\n @param desc\n            the field's descriptor (see {@link Type Type}).\n","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a method instruction. A method instruction is an instruction that\n invokes a method.\n\n @param opcode\n            the opcode of the type instruction to be visited. This opcode\n            is either INVOKEVIRTUAL, INVOKESPECIAL, INVOKESTATIC or\n            INVOKEINTERFACE.\n @param owner\n            the internal name of the method's owner class (see\n            {@link Type#getInternalName() getInternalName}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n","return_type":"void"},{"parameters":"int:opcode,String:owner,String:name,String:desc,boolean:itf","name":"visitMethodInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a method instruction. A method instruction is an instruction that\n invokes a method.\n\n @param opcode\n            the opcode of the type instruction to be visited. This opcode\n            is either INVOKEVIRTUAL, INVOKESPECIAL, INVOKESTATIC or\n            INVOKEINTERFACE.\n @param owner\n            the internal name of the method's owner class (see\n            {@link Type#getInternalName() getInternalName}).\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param itf\n            if the method's owner class is an interface.\n","return_type":"void"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"visitInvokeDynamicInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an invokedynamic instruction.\n\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param bsm\n            the bootstrap method.\n @param bsmArgs\n            the bootstrap method constant arguments. Each argument must be\n            an {@link Integer}, {@link Float}, {@link Long},\n            {@link Double}, {@link String}, {@link Type} or {@link Handle}\n            value. This method is allowed to modify the content of the\n            array so a caller should expect that this array may change.\n","return_type":"void"},{"parameters":"int:opcode,Label:label","name":"visitJumpInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a jump instruction. A jump instruction is an instruction that may\n jump to another instruction.\n\n @param opcode\n            the opcode of the type instruction to be visited. This opcode\n            is either IFEQ, IFNE, IFLT, IFGE, IFGT, IFLE, IF_ICMPEQ,\n            IF_ICMPNE, IF_ICMPLT, IF_ICMPGE, IF_ICMPGT, IF_ICMPLE,\n            IF_ACMPEQ, IF_ACMPNE, GOTO, JSR, IFNULL or IFNONNULL.\n @param label\n            the operand of the instruction to be visited. This operand is\n            a label that designates the instruction to which the jump\n            instruction may jump.\n","return_type":"void"},{"parameters":"Label:label","name":"visitLabel","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a label. A label designates the instruction that will be visited\n just after it.\n\n @param label\n            a {@link Label Label} object.\n","return_type":"void"},{"parameters":"Object:cst","name":"visitLdcInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a LDC instruction. Note that new constant types may be added in\n future versions of the Java Virtual Machine. To easily detect new\n constant types, implementations of this method should check for\n unexpected constant types, like this:\n\n <pre>\n if (cst instanceof Integer) {\n     // ...\n } else if (cst instanceof Float) {\n     // ...\n } else if (cst instanceof Long) {\n     // ...\n } else if (cst instanceof Double) {\n     // ...\n } else if (cst instanceof String) {\n     // ...\n } else if (cst instanceof Type) {\n     int sort = ((Type) cst).getSort();\n     if (sort == Type.OBJECT) {\n         // ...\n     } else if (sort == Type.ARRAY) {\n         // ...\n     } else if (sort == Type.METHOD) {\n         // ...\n     } else {\n         // throw an exception\n     }\n } else if (cst instanceof Handle) {\n     // ...\n } else {\n     // throw an exception\n }\n </pre>\n\n @param cst\n            the constant to be loaded on the stack. This parameter must be\n            a non null {@link Integer}, a {@link Float}, a {@link Long}, a\n            {@link Double}, a {@link String}, a {@link Type} of OBJECT or\n            ARRAY sort for <tt>.class</tt> constants, for classes whose\n            version is 49.0, a {@link Type} of METHOD sort or a\n            {@link Handle} for MethodType and MethodHandle constants, for\n            classes whose version is 51.0.\n","return_type":"void"},{"parameters":"int:var,int:increment","name":"visitIincInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an IINC instruction.\n\n @param var\n            index of the local variable to be incremented.\n @param increment\n            amount to increment the local variable by.\n","return_type":"void"},{"parameters":"int:min,int:max,Label:dflt,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitTableSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a TABLESWITCH instruction.\n\n @param min\n            the minimum key value.\n @param max\n            the maximum key value.\n @param dflt\n            beginning of the default handler block.\n @param labels\n            beginnings of the handler blocks. <tt>labels[i]</tt> is the\n            beginning of the handler block for the <tt>min + i</tt> key.\n","return_type":"void"},{"parameters":"Label:dflt,int[]:keys,jdk.internal.org.objectweb.asm.Label[]:labels","name":"visitLookupSwitchInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a LOOKUPSWITCH instruction.\n\n @param dflt\n            beginning of the default handler block.\n @param keys\n            the values of the keys.\n @param labels\n            beginnings of the handler blocks. <tt>labels[i]</tt> is the\n            beginning of the handler block for the <tt>keys[i]</tt> key.\n","return_type":"void"},{"parameters":"String:desc,int:dims","name":"visitMultiANewArrayInsn","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a MULTIANEWARRAY instruction.\n\n @param desc\n            an array type descriptor (see {@link Type Type}).\n @param dims\n            number of dimensions of the array to allocate.\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitInsnAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation on an instruction. This method must be called just\n <i>after</i> the annotated instruction. It can be called several times\n for the same instruction.\n\n @param typeRef\n            a reference to the annotated type. The sort of this type\n            reference must be {@link TypeReference#INSTANCEOF INSTANCEOF},\n            {@link TypeReference#NEW NEW},\n            {@link TypeReference#CONSTRUCTOR_REFERENCE\n            CONSTRUCTOR_REFERENCE}, {@link TypeReference#METHOD_REFERENCE\n            METHOD_REFERENCE}, {@link TypeReference#CAST CAST},\n            {@link TypeReference#CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\n            CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT},\n            {@link TypeReference#METHOD_INVOCATION_TYPE_ARGUMENT\n            METHOD_INVOCATION_TYPE_ARGUMENT},\n            {@link TypeReference#CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT\n            CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT}, or\n            {@link TypeReference#METHOD_REFERENCE_TYPE_ARGUMENT\n            METHOD_REFERENCE_TYPE_ARGUMENT}. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"Label:start,Label:end,Label:handler,String:type","name":"visitTryCatchBlock","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a try catch block.\n\n @param start\n            beginning of the exception handler's scope (inclusive).\n @param end\n            end of the exception handler's scope (exclusive).\n @param handler\n            beginning of the exception handler's code.\n @param type\n            internal name of the type of exceptions handled by the\n            handler, or <tt>null</tt> to catch any exceptions (for\n            \"finally\" blocks).\n @throws IllegalArgumentException\n             if one of the labels has already been visited by this visitor\n             (by the {@link #visitLabel visitLabel} method).\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTryCatchAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation on an exception handler type. This method must be\n called <i>after</i> the {@link #visitTryCatchBlock} for the annotated\n exception handler. It can be called several times for the same exception\n handler.\n\n @param typeRef\n            a reference to the annotated type. The sort of this type\n            reference must be {@link TypeReference#EXCEPTION_PARAMETER\n            EXCEPTION_PARAMETER}. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"String:name,String:desc,String:signature,Label:start,Label:end,int:index","name":"visitLocalVariable","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a local variable declaration.\n\n @param name\n            the name of a local variable.\n @param desc\n            the type descriptor of this local variable.\n @param signature\n            the type signature of this local variable. May be\n            <tt>null</tt> if the local variable type does not use generic\n            types.\n @param start\n            the first instruction corresponding to the scope of this local\n            variable (inclusive).\n @param end\n            the last instruction corresponding to the scope of this local\n            variable (exclusive).\n @param index\n            the local variable's index.\n @throws IllegalArgumentException\n             if one of the labels has not already been visited by this\n             visitor (by the {@link #visitLabel visitLabel} method).\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,jdk.internal.org.objectweb.asm.Label[]:start,jdk.internal.org.objectweb.asm.Label[]:end,int[]:index,String:desc,boolean:visible","name":"visitLocalVariableAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation on a local variable type.\n\n @param typeRef\n            a reference to the annotated type. The sort of this type\n            reference must be {@link TypeReference#LOCAL_VARIABLE\n            LOCAL_VARIABLE} or {@link TypeReference#RESOURCE_VARIABLE\n            RESOURCE_VARIABLE}. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param start\n            the fist instructions corresponding to the continuous ranges\n            that make the scope of this local variable (inclusive).\n @param end\n            the last instructions corresponding to the continuous ranges\n            that make the scope of this local variable (exclusive). This\n            array must have the same size as the 'start' array.\n @param index\n            the local variable's index in each range. This array must have\n            the same size as the 'start' array.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"int:line,Label:start","name":"visitLineNumber","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a line number declaration.\n\n @param line\n            a line number. This number refers to the source file from\n            which the class was compiled.\n @param start\n            the first instruction corresponding to this line number.\n @throws IllegalArgumentException\n             if <tt>start</tt> has not already been visited by this\n             visitor (by the {@link #visitLabel visitLabel} method).\n","return_type":"void"},{"parameters":"int:maxStack,int:maxLocals","name":"visitMaxs","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the maximum stack size and the maximum number of local variables\n of the method.\n\n @param maxStack\n            maximum stack size of the method.\n @param maxLocals\n            maximum number of local variables for the method.\n","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the end of the method. This method, which is the last one to be\n called, is used to inform the visitor that all the annotations and\n attributes of the method have been visited.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"api","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The ASM API version implemented by this visitor. The value of this field\n must be one of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":null,"name":"mv","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The method visitor to which this visitor must delegate method calls. May\n be null.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A visitor to visit a Java method. The methods of this class must be called in\n the following order: ( <tt>visitParameter</tt> )* [\n <tt>visitAnnotationDefault</tt> ] ( <tt>visitAnnotation</tt> |\n <tt>visitTypeAnnotation</tt> | <tt>visitAttribute</tt> )* [\n <tt>visitCode</tt> ( <tt>visitFrame</tt> | <tt>visit<i>X</i>Insn</tt> |\n <tt>visitLabel</tt> | <tt>visitInsnAnnotation</tt> |\n <tt>visitTryCatchBlock</tt> | <tt>visitTryCatchBlockAnnotation</tt> |\n <tt>visitLocalVariable</tt> | <tt>visitLocalVariableAnnotation</tt> |\n <tt>visitLineNumber</tt> )* <tt>visitMaxs</tt> ] <tt>visitEnd</tt>. In\n addition, the <tt>visit<i>X</i>Insn</tt> and <tt>visitLabel</tt> methods must\n be called in the sequential order of the bytecode instructions of the visited\n code, <tt>visitInsnAnnotation</tt> must be called <i>after</i> the annotated\n instruction, <tt>visitTryCatchBlock</tt> must be called <i>before</i> the\n labels passed as arguments have been visited,\n <tt>visitTryCatchBlockAnnotation</tt> must be called <i>after</i> the\n corresponding try catch block has been visited, and the\n <tt>visitLocalVariable</tt>, <tt>visitLocalVariableAnnotation</tt> and\n <tt>visitLineNumber</tt> methods must be called <i>after</i> the labels\n passed as arguments have been visited.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Label","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Label","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new label.\n","return_type":null}],"methods":[{"parameters":null,"name":"getOffset","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the offset corresponding to this label. This offset is computed\n from the start of the method's bytecode. <i>This method is intended for\n {@link Attribute} sub classes, and is normally not needed by class\n generators or adapters.</i>\n\n @return the offset corresponding to this label.\n @throws IllegalStateException\n             if this label is not resolved yet.\n","return_type":"int"},{"parameters":"MethodWriter:owner,ByteVector:out,int:source,boolean:wideOffset","name":"put","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts a reference to this label in the bytecode of a method. If the\n position of the label is known, the offset is computed and written\n directly. Otherwise, a null offset is written and a new forward reference\n is declared for this label.\n\n @param owner\n            the code writer that calls this method.\n @param out\n            the bytecode of the method.\n @param source\n            the position of first byte of the bytecode instruction that\n            contains this label.\n @param wideOffset\n            <tt>true</tt> if the reference must be stored in 4 bytes, or\n            <tt>false</tt> if it must be stored with 2 bytes.\n @throws IllegalArgumentException\n             if this label has not been created by the given code writer.\n","return_type":"void"},{"parameters":"int:sourcePosition,int:referencePosition","name":"addReference","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a forward reference to this label. This method must be called only\n for a true forward reference, i.e. only if this label is not resolved\n yet. For backward references, the offset of the reference can be, and\n must be, computed and stored directly.\n\n @param sourcePosition\n            the position of the referencing instruction. This position\n            will be used to compute the offset of this forward reference.\n @param referencePosition\n            the position where the offset for this forward reference must\n            be stored.\n","return_type":"void"},{"parameters":"MethodWriter:owner,int:position,byte[]:data","name":"resolve","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Resolves all forward references to this label. This method must be called\n when this label is added to the bytecode of the method, i.e. when its\n position becomes known. This method fills in the blanks that where left\n in the bytecode by each forward reference previously added to this label.\n\n @param owner\n            the code writer that calls this method.\n @param position\n            the position of this label in the bytecode.\n @param data\n            the bytecode of the method.\n @return <tt>true</tt> if a blank that was left for this label was to\n         small to store the offset. In such a case the corresponding jump\n         instruction is replaced with a pseudo instruction (using unused\n         opcodes) using an unsigned two bytes offset. These pseudo\n         instructions will need to be replaced with true instructions with\n         wider offsets (4 bytes instead of 2). This is done in\n         {@link MethodWriter#resizeInstructions}.\n @throws IllegalArgumentException\n             if this label has already been resolved, or if it has not\n             been created by the given code writer.\n","return_type":"boolean"},{"parameters":null,"name":"getFirst","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the first label of the series to which this label belongs. For an\n isolated label or for the first label in a series of successive labels,\n this method returns the label itself. For other labels it returns the\n first label of the series.\n\n @return the first label of the series to which this label belongs.\n","return_type":"Label"},{"parameters":"long:id","name":"inSubroutine","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns true is this basic block belongs to the given subroutine.\n\n @param id\n            a subroutine id.\n @return true is this basic block belongs to the given subroutine.\n","return_type":"boolean"},{"parameters":"Label:block","name":"inSameSubroutine","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns true if this basic block and the given one belong to a common\n subroutine.\n\n @param block\n            another basic block.\n @return true if this basic block and the given one belong to a common\n         subroutine.\n","return_type":"boolean"},{"parameters":"long:id,int:nbSubroutines","name":"addToSubroutine","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Marks this basic block as belonging to the given subroutine.\n\n @param id\n            a subroutine id.\n @param nbSubroutines\n            the total number of subroutines in the method.\n","return_type":"void"},{"parameters":"Label:JSR,long:id,int:nbSubroutines","name":"visitSubroutine","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Finds the basic blocks that belong to a given subroutine, and marks these\n blocks as belonging to this subroutine. This method follows the control\n flow graph to find all the blocks that are reachable from the current\n block WITHOUT following any JSR target.\n\n @param JSR\n            a JSR block that jumps to this subroutine. If this JSR is not\n            null it is added to the successor of the RET blocks found in\n            the subroutine.\n @param id\n            the id of this subroutine.\n @param nbSubroutines\n            the total number of subroutines in the method.\n","return_type":"void"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns a string representation of this label.\n\n @return a string representation of this label.\n","return_type":"String"}],"fields":[{"parameters":null,"name":"DEBUG","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this label is only used for debug attributes. Such a label\n is not the start of a basic block, the target of a jump instruction, or\n an exception handler. It can be safely ignored in control flow graph\n analysis algorithms (for optimization purposes).\n","return_type":null},{"parameters":null,"name":"RESOLVED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if the position of this label is known.\n","return_type":null},{"parameters":null,"name":"RESIZED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this label has been updated, after instruction resizing.\n","return_type":null},{"parameters":null,"name":"PUSHED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this basic block has been pushed in the basic block stack.\n See {@link MethodWriter#visitMaxs visitMaxs}.\n","return_type":null},{"parameters":null,"name":"TARGET","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this label is the target of a jump instruction, or the start\n of an exception handler.\n","return_type":null},{"parameters":null,"name":"STORE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if a stack map frame must be stored for this label.\n","return_type":null},{"parameters":null,"name":"REACHABLE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this label corresponds to a reachable basic block.\n","return_type":null},{"parameters":null,"name":"JSR","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this basic block ends with a JSR instruction.\n","return_type":null},{"parameters":null,"name":"RET","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this basic block ends with a RET instruction.\n","return_type":null},{"parameters":null,"name":"SUBROUTINE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this basic block is the start of a subroutine.\n","return_type":null},{"parameters":null,"name":"VISITED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this subroutine basic block has been visited by a\n visitSubroutine(null, ...) call.\n","return_type":null},{"parameters":null,"name":"VISITED2","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if this subroutine basic block has been visited by a\n visitSubroutine(!null, ...) call.\n","return_type":null},{"parameters":null,"name":"info","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Field used to associate user information to a label. Warning: this field\n is used by the ASM tree package. In order to use it with the ASM tree\n package you must override the\n {@link jdk.internal.org.objectweb.asm.tree.MethodNode#getLabelNode} method.\n","return_type":null},{"parameters":null,"name":"status","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Flags that indicate the status of this label.\n\n @see #DEBUG\n @see #RESOLVED\n @see #RESIZED\n @see #PUSHED\n @see #TARGET\n @see #STORE\n @see #REACHABLE\n @see #JSR\n @see #RET\n","return_type":null},{"parameters":null,"name":"line","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The line number corresponding to this label, if known.\n","return_type":null},{"parameters":null,"name":"position","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The position of this label in the code, if known.\n","return_type":null},{"parameters":null,"name":"referenceCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of forward references to this label, times two.\n","return_type":null},{"parameters":null,"name":"srcAndRefPositions","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Informations about forward references. Each forward reference is\n described by two consecutive integers in this array: the first one is the\n position of the first byte of the bytecode instruction that contains the\n forward reference, while the second is the position of the first byte of\n the forward reference itself. In fact the sign of the first integer\n indicates if this reference uses 2 or 4 bytes, and its absolute value\n gives the position of the bytecode instruction. This array is also used\n as a bitset to store the subroutines to which a basic block belongs. This\n information is needed in {@linked MethodWriter#visitMaxs}, after all\n forward references have been resolved. Hence the same array can be used\n for both purposes without problems.\n","return_type":null},{"parameters":null,"name":"inputStackTop","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Start of the output stack relatively to the input stack. The exact\n semantics of this field depends on the algorithm that is used.\n\n When only the maximum stack size is computed, this field is the number of\n elements in the input stack.\n\n When the stack map frames are completely computed, this field is the\n offset of the first output stack element relatively to the top of the\n input stack. This offset is always negative or null. A null offset means\n that the output stack must be appended to the input stack. A -n offset\n means that the first n output stack elements must replace the top n input\n stack elements, and that the other elements must be appended to the input\n stack.\n","return_type":null},{"parameters":null,"name":"outputStackMax","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Maximum height reached by the output stack, relatively to the top of the\n input stack. This maximum is always positive or null.\n","return_type":null},{"parameters":null,"name":"frame","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Information about the input and output stack map frames of this basic\n block. This field is only used when {@link ClassWriter#COMPUTE_FRAMES}\n option is used.\n","return_type":null},{"parameters":null,"name":"successor","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The successor of this label, in the order they are visited. This linked\n list does not include labels used for debug info only. If\n {@link ClassWriter#COMPUTE_FRAMES} option is used then, in addition, it\n does not contain successive labels that denote the same bytecode position\n (in this case only the first label appears in this list).\n","return_type":null},{"parameters":null,"name":"successors","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The successors of this node in the control flow graph. These successors\n are stored in a linked list of {@link Edge Edge} objects, linked to each\n other by their {@link Edge#next} field.\n","return_type":null},{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The next basic block in the basic block stack. This stack is used in the\n main loop of the fix point algorithm used in the second step of the\n control flow analysis algorithms. It is also used in\n {@link #visitSubroutine} to avoid using a recursive method.\n\n @see MethodWriter#visitMaxs\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A label represents a position in the bytecode of a method. Labels are used\n for jump, goto, and switch instructions, and for try catch blocks. A label\n designates the <i>instruction</i> that is just after. Note however that there\n can be other elements between a label and the instruction it designates (such\n as other labels, stack map frames, line numbers, etc.).\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Item","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Item","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs an uninitialized {@link Item}.\n","return_type":null},{"parameters":"int:index","name":"Item","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs an uninitialized {@link Item} for constant pool element at\n given position.\n\n @param index\n            index of the item to be constructed.\n","return_type":null},{"parameters":"int:index,Item:i","name":"Item","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a copy of the given item.\n\n @param index\n            index of the item to be constructed.\n @param i\n            the item that must be copied into the item to be constructed.\n","return_type":null}],"methods":[{"parameters":"int:intVal","name":"set","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets this item to an integer item.\n\n @param intVal\n            the value of this item.\n","return_type":"void"},{"parameters":"long:longVal","name":"set","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets this item to a long item.\n\n @param longVal\n            the value of this item.\n","return_type":"void"},{"parameters":"float:floatVal","name":"set","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets this item to a float item.\n\n @param floatVal\n            the value of this item.\n","return_type":"void"},{"parameters":"double:doubleVal","name":"set","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets this item to a double item.\n\n @param doubleVal\n            the value of this item.\n","return_type":"void"},{"parameters":"int:type,String:strVal1,String:strVal2,String:strVal3","name":"set","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets this item to an item that do not hold a primitive value.\n\n @param type\n            the type of this item.\n @param strVal1\n            first part of the value of this item.\n @param strVal2\n            second part of the value of this item.\n @param strVal3\n            third part of the value of this item.\n","return_type":"void"},{"parameters":"String:name,String:desc,int:bsmIndex","name":"set","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets the item to an InvokeDynamic item.\n\n @param name\n            invokedynamic's name.\n @param desc\n            invokedynamic's desc.\n @param bsmIndex\n            zero based index into the class attribute BootrapMethods.\n","return_type":"void"},{"parameters":"int:position,int:hashCode","name":"set","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets the item to a BootstrapMethod item.\n\n @param position\n            position in byte in the class attribute BootrapMethods.\n @param hashCode\n            hashcode of the item. This hashcode is processed from the\n            hashcode of the bootstrap method and the hashcode of all\n            bootstrap arguments.\n","return_type":"void"},{"parameters":"Item:i","name":"isEqualTo","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Indicates if the given item is equal to this one. <i>This method assumes\n that the two items have the same {@link #type}</i>.\n\n @param i\n            the item to be compared to this one. Both items must have the\n            same {@link #type}.\n @return <tt>true</tt> if the given item if equal to this one,\n         <tt>false</tt> otherwise.\n","return_type":"boolean"}],"fields":[{"parameters":null,"name":"index","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Index of this item in the constant pool.\n","return_type":null},{"parameters":null,"name":"type","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Type of this constant pool item. A single class is used to represent all\n constant pool item types, in order to minimize the bytecode size of this\n package. The value of this field is one of {@link ClassWriter#INT},\n {@link ClassWriter#LONG}, {@link ClassWriter#FLOAT},\n {@link ClassWriter#DOUBLE}, {@link ClassWriter#UTF8},\n {@link ClassWriter#STR}, {@link ClassWriter#CLASS},\n {@link ClassWriter#NAME_TYPE}, {@link ClassWriter#FIELD},\n {@link ClassWriter#METH}, {@link ClassWriter#IMETH},\n {@link ClassWriter#MTYPE}, {@link ClassWriter#INDY}.\n\n MethodHandle constant 9 variations are stored using a range of 9 values\n from {@link ClassWriter#HANDLE_BASE} + 1 to\n {@link ClassWriter#HANDLE_BASE} + 9.\n\n Special Item types are used for Items that are stored in the ClassWriter\n {@link ClassWriter#typeTable}, instead of the constant pool, in order to\n avoid clashes with normal constant pool items in the ClassWriter constant\n pool's hash table. These special item types are\n {@link ClassWriter#TYPE_NORMAL}, {@link ClassWriter#TYPE_UNINIT} and\n {@link ClassWriter#TYPE_MERGED}.\n","return_type":null},{"parameters":null,"name":"intVal","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Value of this item, for an integer item.\n","return_type":null},{"parameters":null,"name":"longVal","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Value of this item, for a long item.\n","return_type":null},{"parameters":null,"name":"strVal1","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" First part of the value of this item, for items that do not hold a\n primitive value.\n","return_type":null},{"parameters":null,"name":"strVal2","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Second part of the value of this item, for items that do not hold a\n primitive value.\n","return_type":null},{"parameters":null,"name":"strVal3","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Third part of the value of this item, for items that do not hold a\n primitive value.\n","return_type":null},{"parameters":null,"name":"hashCode","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The hash code value of this constant pool item.\n","return_type":null},{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Link to another constant pool item, used for collision lists in the\n constant pool's hash table.\n","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A constant pool item. Constant pool items can be created with the 'newXXX'\n methods in the {@link ClassWriter} class.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Handler","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Handler","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null}],"methods":[{"parameters":"Handler:h,Label:start,Label:end","name":"remove","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Removes the range between start and end from the given exception\n handlers.\n\n @param h\n            an exception handler list.\n @param start\n            the start of the range to be removed.\n @param end\n            the end of the range to be removed. Maybe null.\n @return the exception handler list with the start-end range removed.\n","return_type":"Handler"}],"fields":[{"parameters":null,"name":"start","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Beginning of the exception handler's scope (inclusive).\n","return_type":null},{"parameters":null,"name":"end","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" End of the exception handler's scope (exclusive).\n","return_type":null},{"parameters":null,"name":"handler","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Beginning of the exception handler's code.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Internal name of the type of exceptions handled by this handler, or\n <tt>null</tt> to catch any exceptions.\n","return_type":null},{"parameters":null,"name":"type","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constant pool index of the internal name of the type of exceptions\n handled by this handler, or 0 to catch any exceptions.\n","return_type":null},{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Next exception handler block info.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Information about an exception handler block.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Handle","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:tag,String:owner,String:name,String:desc","name":"Handle","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new field or method handle.\n\n @param tag\n            the kind of field or method designated by this Handle. Must be\n            {@link Opcodes#H_GETFIELD}, {@link Opcodes#H_GETSTATIC},\n            {@link Opcodes#H_PUTFIELD}, {@link Opcodes#H_PUTSTATIC},\n            {@link Opcodes#H_INVOKEVIRTUAL},\n            {@link Opcodes#H_INVOKESTATIC},\n            {@link Opcodes#H_INVOKESPECIAL},\n            {@link Opcodes#H_NEWINVOKESPECIAL} or\n            {@link Opcodes#H_INVOKEINTERFACE}.\n @param owner\n            the internal name of the class that owns the field or method\n            designated by this handle.\n @param name\n            the name of the field or method designated by this handle.\n @param desc\n            the descriptor of the field or method designated by this\n            handle.\n","return_type":null}],"methods":[{"parameters":null,"name":"getTag","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the kind of field or method designated by this handle.\n\n @return {@link Opcodes#H_GETFIELD}, {@link Opcodes#H_GETSTATIC},\n         {@link Opcodes#H_PUTFIELD}, {@link Opcodes#H_PUTSTATIC},\n         {@link Opcodes#H_INVOKEVIRTUAL}, {@link Opcodes#H_INVOKESTATIC},\n         {@link Opcodes#H_INVOKESPECIAL},\n         {@link Opcodes#H_NEWINVOKESPECIAL} or\n         {@link Opcodes#H_INVOKEINTERFACE}.\n","return_type":"int"},{"parameters":null,"name":"getOwner","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the internal name of the class that owns the field or method\n designated by this handle.\n\n @return the internal name of the class that owns the field or method\n         designated by this handle.\n","return_type":"String"},{"parameters":null,"name":"getName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the name of the field or method designated by this handle.\n\n @return the name of the field or method designated by this handle.\n","return_type":"String"},{"parameters":null,"name":"getDesc","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the descriptor of the field or method designated by this handle.\n\n @return the descriptor of the field or method designated by this handle.\n","return_type":"String"},{"parameters":"Object:obj","name":"equals","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"boolean"},{"parameters":null,"name":"hashCode","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"int"},{"parameters":null,"name":"toString","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the textual representation of this handle. The textual\n representation is:\n\n <pre>\n owner '.' name desc ' ' '(' tag ')'\n </pre>\n\n . As this format is unambiguous, it can be parsed if necessary.\n","return_type":"String"}],"fields":[{"parameters":null,"name":"tag","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The kind of field or method designated by this Handle. Should be\n {@link Opcodes#H_GETFIELD}, {@link Opcodes#H_GETSTATIC},\n {@link Opcodes#H_PUTFIELD}, {@link Opcodes#H_PUTSTATIC},\n {@link Opcodes#H_INVOKEVIRTUAL}, {@link Opcodes#H_INVOKESTATIC},\n {@link Opcodes#H_INVOKESPECIAL}, {@link Opcodes#H_NEWINVOKESPECIAL} or\n {@link Opcodes#H_INVOKEINTERFACE}.\n","return_type":null},{"parameters":null,"name":"owner","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The internal name of the class that owns the field or method designated\n by this handle.\n","return_type":null},{"parameters":null,"name":"name","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The name of the field or method designated by this handle.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The descriptor of the field or method designated by this handle.\n","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A reference to a field or a method.\n\n @author Remi Forax\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Frame","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Frame","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null}],"methods":[{"parameters":"int:local","name":"get","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the output frame local variable type at the given index.\n\n @param local\n            the index of the local that must be returned.\n @return the output frame local variable type at the given index.\n","return_type":"int"},{"parameters":"int:local,int:type","name":"set","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Sets the output frame local variable type at the given index.\n\n @param local\n            the index of the local that must be set.\n @param type\n            the value of the local that must be set.\n","return_type":"void"},{"parameters":"int:type","name":"push","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Pushes a new type onto the output frame stack.\n\n @param type\n            the type that must be pushed.\n","return_type":"void"},{"parameters":"ClassWriter:cw,String:desc","name":"push","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Pushes a new type onto the output frame stack.\n\n @param cw\n            the ClassWriter to which this label belongs.\n @param desc\n            the descriptor of the type to be pushed. Can also be a method\n            descriptor (in this case this method pushes its return type\n            onto the output frame stack).\n","return_type":"void"},{"parameters":"ClassWriter:cw,String:desc","name":"type","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the int encoding of the given type.\n\n @param cw\n            the ClassWriter to which this label belongs.\n @param desc\n            a type descriptor.\n @return the int encoding of the given type.\n","return_type":"int"},{"parameters":null,"name":"pop","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Pops a type from the output frame stack and returns its value.\n\n @return the type that has been popped from the output frame stack.\n","return_type":"int"},{"parameters":"int:elements","name":"pop","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Pops the given number of types from the output frame stack.\n\n @param elements\n            the number of types that must be popped.\n","return_type":"void"},{"parameters":"String:desc","name":"pop","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Pops a type from the output frame stack.\n\n @param desc\n            the descriptor of the type to be popped. Can also be a method\n            descriptor (in this case this method pops the types\n            corresponding to the method arguments).\n","return_type":"void"},{"parameters":"int:var","name":"init","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a new type to the list of types on which a constructor is invoked in\n the basic block.\n\n @param var\n            a type on a which a constructor is invoked.\n","return_type":"void"},{"parameters":"ClassWriter:cw,int:t","name":"init","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Replaces the given type with the appropriate type if it is one of the\n types on which a constructor is invoked in the basic block.\n\n @param cw\n            the ClassWriter to which this label belongs.\n @param t\n            a type\n @return t or, if t is one of the types on which a constructor is invoked\n         in the basic block, the type corresponding to this constructor.\n","return_type":"int"},{"parameters":"ClassWriter:cw,int:access,jdk.internal.org.objectweb.asm.Type[]:args,int:maxLocals","name":"initInputFrame","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Initializes the input frame of the first basic block from the method\n descriptor.\n\n @param cw\n            the ClassWriter to which this label belongs.\n @param access\n            the access flags of the method to which this label belongs.\n @param args\n            the formal parameter types of this method.\n @param maxLocals\n            the maximum number of local variables of this method.\n","return_type":"void"},{"parameters":"int:opcode,int:arg,ClassWriter:cw,Item:item","name":"execute","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Simulates the action of the given instruction on the output stack frame.\n\n @param opcode\n            the opcode of the instruction.\n @param arg\n            the operand of the instruction, if any.\n @param cw\n            the class writer to which this label belongs.\n @param item\n            the operand of the instructions, if any.\n","return_type":"void"},{"parameters":"ClassWriter:cw,Frame:frame,int:edge","name":"merge","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Merges the input frame of the given basic block with the input and output\n frames of this basic block. Returns <tt>true</tt> if the input frame of\n the given label has been changed by this operation.\n\n @param cw\n            the ClassWriter to which this label belongs.\n @param frame\n            the basic block whose input frame must be updated.\n @param edge\n            the kind of the {@link Edge} between this label and 'label'.\n            See {@link Edge#info}.\n @return <tt>true</tt> if the input frame of the given label has been\n         changed by this operation.\n","return_type":"boolean"},{"parameters":"ClassWriter:cw,int:t,int[]:types,int:index","name":"merge","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Merges the type at the given index in the given type array with the given\n type. Returns <tt>true</tt> if the type array has been modified by this\n operation.\n\n @param cw\n            the ClassWriter to which this label belongs.\n @param t\n            the type with which the type array element must be merged.\n @param types\n            an array of types.\n @param index\n            the index of the type that must be merged in 'types'.\n @return <tt>true</tt> if the type array has been modified by this\n         operation.\n","return_type":"boolean"}],"fields":[{"parameters":null,"name":"DIM","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Mask to get the dimension of a frame type. This dimension is a signed\n integer between -8 and 7.\n","return_type":null},{"parameters":null,"name":"ARRAY_OF","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Constant to be added to a type to get a type with one more dimension.\n","return_type":null},{"parameters":null,"name":"ELEMENT_OF","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Constant to be added to a type to get a type with one less dimension.\n","return_type":null},{"parameters":null,"name":"KIND","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Mask to get the kind of a frame type.\n\n @see #BASE\n @see #LOCAL\n @see #STACK\n","return_type":null},{"parameters":null,"name":"TOP_IF_LONG_OR_DOUBLE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Flag used for LOCAL and STACK types. Indicates that if this type happens\n to be a long or double type (during the computations of input frames),\n then it must be set to TOP because the second word of this value has been\n reused to store other data in the basic block. Hence the first word no\n longer stores a valid long or double value.\n","return_type":null},{"parameters":null,"name":"VALUE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Mask to get the value of a frame type.\n","return_type":null},{"parameters":null,"name":"BASE_KIND","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Mask to get the kind of base types.\n","return_type":null},{"parameters":null,"name":"BASE_VALUE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Mask to get the value of base types.\n","return_type":null},{"parameters":null,"name":"BASE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Kind of the types that are not relative to an input stack map frame.\n","return_type":null},{"parameters":null,"name":"OBJECT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Base kind of the base reference types. The BASE_VALUE of such types is an\n index into the type table.\n","return_type":null},{"parameters":null,"name":"UNINITIALIZED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Base kind of the uninitialized base types. The BASE_VALUE of such types\n in an index into the type table (the Item at that index contains both an\n instruction offset and an internal class name).\n","return_type":null},{"parameters":null,"name":"LOCAL","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Kind of the types that are relative to the local variable types of an\n input stack map frame. The value of such types is a local variable index.\n","return_type":null},{"parameters":null,"name":"STACK","modifier":"private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Kind of the the types that are relative to the stack of an input stack\n map frame. The value of such types is a position relatively to the top of\n this stack.\n","return_type":null},{"parameters":null,"name":"TOP","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The TOP type. This is a BASE type.\n","return_type":null},{"parameters":null,"name":"BOOLEAN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The BOOLEAN type. This is a BASE type mainly used for array types.\n","return_type":null},{"parameters":null,"name":"BYTE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The BYTE type. This is a BASE type mainly used for array types.\n","return_type":null},{"parameters":null,"name":"CHAR","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The CHAR type. This is a BASE type mainly used for array types.\n","return_type":null},{"parameters":null,"name":"SHORT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The SHORT type. This is a BASE type mainly used for array types.\n","return_type":null},{"parameters":null,"name":"INTEGER","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The INTEGER type. This is a BASE type.\n","return_type":null},{"parameters":null,"name":"FLOAT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The FLOAT type. This is a BASE type.\n","return_type":null},{"parameters":null,"name":"DOUBLE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The DOUBLE type. This is a BASE type.\n","return_type":null},{"parameters":null,"name":"LONG","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The LONG type. This is a BASE type.\n","return_type":null},{"parameters":null,"name":"NULL","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The NULL type. This is a BASE type.\n","return_type":null},{"parameters":null,"name":"UNINITIALIZED_THIS","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The UNINITIALIZED_THIS type. This is a BASE type.\n","return_type":null},{"parameters":null,"name":"SIZE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The stack size variation corresponding to each JVM instruction. This\n stack variation is equal to the size of the values produced by an\n instruction, minus the size of the values consumed by this instruction.\n","return_type":null},{"parameters":null,"name":"owner","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The label (i.e. basic block) to which these input and output stack map\n frames correspond.\n","return_type":null},{"parameters":null,"name":"inputLocals","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The input stack map frame locals.\n","return_type":null},{"parameters":null,"name":"inputStack","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The input stack map frame stack.\n","return_type":null},{"parameters":null,"name":"outputLocals","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The output stack map frame locals.\n","return_type":null},{"parameters":null,"name":"outputStack","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The output stack map frame stack.\n","return_type":null},{"parameters":null,"name":"outputStackTop","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Relative size of the output stack. The exact semantics of this field\n depends on the algorithm that is used.\n\n When only the maximum stack size is computed, this field is the size of\n the output stack relatively to the top of the input stack.\n\n When the stack map frames are completely computed, this field is the\n actual number of types in {@link #outputStack}.\n","return_type":null},{"parameters":null,"name":"initializationCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of types that are initialized in the basic block.\n\n @see #initializations\n","return_type":null},{"parameters":null,"name":"initializations","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The types that are initialized in the basic block. A constructor\n invocation on an UNINITIALIZED or UNINITIALIZED_THIS type must replace\n <i>every occurence</i> of this type in the local variables and in the\n operand stack. This cannot be done during the first phase of the\n algorithm since, during this phase, the local variables and the operand\n stack are not completely computed. It is therefore necessary to store the\n types on which constructors are invoked in the basic block, in order to\n do this replacement during the second phase of the algorithm, where the\n frames are fully computed. Note that this array can contain types that\n are relative to input locals or to the input stack (see below for the\n description of the algorithm).\n","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Information about the input and output stack map frames of a basic block.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"FieldWriter","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"ClassWriter:cw,int:access,String:name,String:desc,String:signature,Object:value","name":"FieldWriter","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link FieldWriter}.\n\n @param cw\n            the class writer to which this field must be added.\n @param access\n            the field's access flags (see {@link Opcodes}).\n @param name\n            the field's name.\n @param desc\n            the field's descriptor (see {@link Type}).\n @param signature\n            the field's signature. May be <tt>null</tt>.\n @param value\n            the field's constant value. May be <tt>null</tt>.\n","return_type":null}],"methods":[{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"getSize","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the size of this field.\n\n @return the size of this field.\n","return_type":"int"},{"parameters":"ByteVector:out","name":"put","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts the content of this field into the given byte vector.\n\n @param out\n            where the content of this field must be put.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"cw","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The class writer to which this field must be added.\n","return_type":null},{"parameters":null,"name":"access","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Access flags of this field.\n","return_type":null},{"parameters":null,"name":"name","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The index of the constant pool item that contains the name of this\n method.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The index of the constant pool item that contains the descriptor of this\n field.\n","return_type":null},{"parameters":null,"name":"signature","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The index of the constant pool item that contains the signature of this\n field.\n","return_type":null},{"parameters":null,"name":"value","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The index of the constant pool item that contains the constant value of\n this field.\n","return_type":null},{"parameters":null,"name":"anns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible annotations of this field. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"ianns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible annotations of this field. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"tanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible type annotations of this field. May be <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"itanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible type annotations of this field. May be\n <tt>null</tt>.\n","return_type":null},{"parameters":null,"name":"attrs","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The non standard attributes of this field. May be <tt>null</tt>.\n","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" An {@link FieldVisitor} that generates Java fields in bytecode form.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"FieldVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api","name":"FieldVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link FieldVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":"int:api,FieldVisitor:fv","name":"FieldVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link FieldVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param fv\n            the field visitor to which this visitor must delegate method\n            calls. May be null.\n","return_type":null}],"methods":[{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation of the field.\n\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation on the type of the field.\n\n @param typeRef\n            a reference to the annotated type. The sort of this type\n            reference must be {@link TypeReference#FIELD FIELD}. See\n            {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a non standard attribute of the field.\n\n @param attr\n            an attribute.\n","return_type":"void"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the end of the field. This method, which is the last one to be\n called, is used to inform the visitor that all the annotations and\n attributes of the field have been visited.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"api","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The ASM API version implemented by this visitor. The value of this field\n must be one of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":null,"name":"fv","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The field visitor to which this visitor must delegate method calls. May\n be null.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A visitor to visit a Java field. The methods of this class must be called in\n the following order: ( <tt>visitAnnotation</tt> |\n <tt>visitTypeAnnotation</tt> | <tt>visitAttribute</tt> )* <tt>visitEnd</tt>.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Edge","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Edge","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"NORMAL","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Denotes a normal control flow graph edge.\n","return_type":null},{"parameters":null,"name":"EXCEPTION","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Denotes a control flow graph edge corresponding to an exception handler.\n More precisely any {@link Edge} whose {@link #info} is strictly positive\n corresponds to an exception handler. The actual value of {@link #info} is\n the index, in the {@link ClassWriter} type table, of the exception that\n is catched.\n","return_type":null},{"parameters":null,"name":"info","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Information about this control flow graph edge. If\n {@link ClassWriter#COMPUTE_MAXS} is used this field is the (relative)\n stack size in the basic block from which this edge originates. This size\n is equal to the stack size at the \"jump\" instruction to which this edge\n corresponds, relatively to the stack size at the beginning of the\n originating basic block. If {@link ClassWriter#COMPUTE_FRAMES} is used,\n this field is the kind of this control flow graph edge (i.e. NORMAL or\n EXCEPTION).\n","return_type":null},{"parameters":null,"name":"successor","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The successor block of the basic block from which this edge originates.\n","return_type":null},{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The next edge in the list of successors of the originating basic block.\n See {@link Label#successors successors}.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" An edge in the control flow graph of a method body. See {@link Label Label}.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Context","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"Context","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":null}],"methods":[],"fields":[{"parameters":null,"name":"attrs","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Prototypes of the attributes that must be parsed for this class.\n","return_type":null},{"parameters":null,"name":"flags","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The {@link ClassReader} option flags for the parsing of this class.\n","return_type":null},{"parameters":null,"name":"buffer","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The buffer used to read strings.\n","return_type":null},{"parameters":null,"name":"bootstrapMethods","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The start index of each bootstrap method.\n","return_type":null},{"parameters":null,"name":"access","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The access flags of the method currently being parsed.\n","return_type":null},{"parameters":null,"name":"name","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The name of the method currently being parsed.\n","return_type":null},{"parameters":null,"name":"desc","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The descriptor of the method currently being parsed.\n","return_type":null},{"parameters":null,"name":"labels","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The label objects, indexed by bytecode offset, of the method currently\n being parsed (only bytecode offsets for which a label is needed have a\n non null associated Label object).\n","return_type":null},{"parameters":null,"name":"typeRef","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The target of the type annotation currently being parsed.\n","return_type":null},{"parameters":null,"name":"typePath","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The path of the type annotation currently being parsed.\n","return_type":null},{"parameters":null,"name":"offset","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The offset of the latest stack map frame that has been parsed.\n","return_type":null},{"parameters":null,"name":"start","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The labels corresponding to the start of the local variable ranges in the\n local variable type annotation currently being parsed.\n","return_type":null},{"parameters":null,"name":"end","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The labels corresponding to the end of the local variable ranges in the\n local variable type annotation currently being parsed.\n","return_type":null},{"parameters":null,"name":"index","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The local variable indices for each local variable range in the local\n variable type annotation currently being parsed.\n","return_type":null},{"parameters":null,"name":"mode","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The encoding of the latest stack map frame that has been parsed.\n","return_type":null},{"parameters":null,"name":"localCount","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The number of locals in the latest stack map frame that has been parsed.\n","return_type":null},{"parameters":null,"name":"localDiff","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The number locals in the latest stack map frame that has been parsed,\n minus the number of locals in the previous frame.\n","return_type":null},{"parameters":null,"name":"local","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The local values of the latest stack map frame that has been parsed.\n","return_type":null},{"parameters":null,"name":"stackCount","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The stack size of the latest stack map frame that has been parsed.\n","return_type":null},{"parameters":null,"name":"stack","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The stack values of the latest stack map frame that has been parsed.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Information about a class being parsed in a {@link ClassReader}.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ClassWriter","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:flags","name":"ClassWriter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassWriter} object.\n\n @param flags\n            option flags that can be used to modify the default behavior\n            of this class. See {@link #COMPUTE_MAXS},\n            {@link #COMPUTE_FRAMES}.\n","return_type":null},{"parameters":"ClassReader:classReader,int:flags","name":"ClassWriter","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassWriter} object and enables optimizations for\n \"mostly add\" bytecode transformations. These optimizations are the\n following:\n\n <ul>\n <li>The constant pool from the original class is copied as is in the new\n class, which saves time. New constant pool entries will be added at the\n end if necessary, but unused constant pool entries <i>won't be\n removed</i>.</li>\n <li>Methods that are not transformed are copied as is in the new class,\n directly from the original class bytecode (i.e. without emitting visit\n events for all the method instructions), which saves a <i>lot</i> of\n time. Untransformed methods are detected by the fact that the\n {@link ClassReader} receives {@link MethodVisitor} objects that come from\n a {@link ClassWriter} (and not from any other {@link ClassVisitor}\n instance).</li>\n </ul>\n\n @param classReader\n            the {@link ClassReader} used to read the original class. It\n            will be used to copy the entire constant pool from the\n            original class and also to copy other fragments of original\n            bytecode where applicable.\n @param flags\n            option flags that can be used to modify the default behavior\n            of this class. <i>These option flags do not affect methods\n            that are copied as is in the new class. This means that the\n            maximum stack size nor the stack frames will be computed for\n            these methods</i>. See {@link #COMPUTE_MAXS},\n            {@link #COMPUTE_FRAMES}.\n","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:file,String:debug","name":"visitSource","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"FieldVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"MethodVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"toByteArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the bytecode of the class that was build with this class writer.\n\n @return the bytecode of the class that was build with this class writer.\n","return_type":"byte"},{"parameters":"Object:cst","name":"newConstItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a number or string constant to the constant pool of the class being\n build. Does nothing if the constant pool already contains a similar item.\n\n @param cst\n            the value of the constant to be added to the constant pool.\n            This parameter must be an {@link Integer}, a {@link Float}, a\n            {@link Long}, a {@link Double}, a {@link String} or a\n            {@link Type}.\n @return a new or already existing constant item with the given value.\n","return_type":"Item"},{"parameters":"Object:cst","name":"newConst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a number or string constant to the constant pool of the class being\n build. Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param cst\n            the value of the constant to be added to the constant pool.\n            This parameter must be an {@link Integer}, a {@link Float}, a\n            {@link Long}, a {@link Double} or a {@link String}.\n @return the index of a new or already existing constant item with the\n         given value.\n","return_type":"int"},{"parameters":"String:value","name":"newUTF8","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds an UTF8 string to the constant pool of the class being build. Does\n nothing if the constant pool already contains a similar item. <i>This\n method is intended for {@link Attribute} sub classes, and is normally not\n needed by class generators or adapters.</i>\n\n @param value\n            the String value.\n @return the index of a new or already existing UTF8 item.\n","return_type":"int"},{"parameters":"String:value","name":"newClassItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a class reference to the constant pool of the class being build.\n Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param value\n            the internal name of the class.\n @return a new or already existing class reference item.\n","return_type":"Item"},{"parameters":"String:value","name":"newClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a class reference to the constant pool of the class being build.\n Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param value\n            the internal name of the class.\n @return the index of a new or already existing class reference item.\n","return_type":"int"},{"parameters":"String:methodDesc","name":"newMethodTypeItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a method type reference to the constant pool of the class being\n build. Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param methodDesc\n            method descriptor of the method type.\n @return a new or already existing method type reference item.\n","return_type":"Item"},{"parameters":"String:methodDesc","name":"newMethodType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a method type reference to the constant pool of the class being\n build. Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param methodDesc\n            method descriptor of the method type.\n @return the index of a new or already existing method type reference\n         item.\n","return_type":"int"},{"parameters":"int:tag,String:owner,String:name,String:desc","name":"newHandleItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a handle to the constant pool of the class being build. Does nothing\n if the constant pool already contains a similar item. <i>This method is\n intended for {@link Attribute} sub classes, and is normally not needed by\n class generators or adapters.</i>\n\n @param tag\n            the kind of this handle. Must be {@link Opcodes#H_GETFIELD},\n            {@link Opcodes#H_GETSTATIC}, {@link Opcodes#H_PUTFIELD},\n            {@link Opcodes#H_PUTSTATIC}, {@link Opcodes#H_INVOKEVIRTUAL},\n            {@link Opcodes#H_INVOKESTATIC},\n            {@link Opcodes#H_INVOKESPECIAL},\n            {@link Opcodes#H_NEWINVOKESPECIAL} or\n            {@link Opcodes#H_INVOKEINTERFACE}.\n @param owner\n            the internal name of the field or method owner class.\n @param name\n            the name of the field or method.\n @param desc\n            the descriptor of the field or method.\n @return a new or an already existing method type reference item.\n","return_type":"Item"},{"parameters":"int:tag,String:owner,String:name,String:desc","name":"newHandle","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a handle to the constant pool of the class being build. Does nothing\n if the constant pool already contains a similar item. <i>This method is\n intended for {@link Attribute} sub classes, and is normally not needed by\n class generators or adapters.</i>\n\n @param tag\n            the kind of this handle. Must be {@link Opcodes#H_GETFIELD},\n            {@link Opcodes#H_GETSTATIC}, {@link Opcodes#H_PUTFIELD},\n            {@link Opcodes#H_PUTSTATIC}, {@link Opcodes#H_INVOKEVIRTUAL},\n            {@link Opcodes#H_INVOKESTATIC},\n            {@link Opcodes#H_INVOKESPECIAL},\n            {@link Opcodes#H_NEWINVOKESPECIAL} or\n            {@link Opcodes#H_INVOKEINTERFACE}.\n @param owner\n            the internal name of the field or method owner class.\n @param name\n            the name of the field or method.\n @param desc\n            the descriptor of the field or method.\n @return the index of a new or already existing method type reference\n         item.\n","return_type":"int"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"newInvokeDynamicItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds an invokedynamic reference to the constant pool of the class being\n build. Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param name\n            name of the invoked method.\n @param desc\n            descriptor of the invoke method.\n @param bsm\n            the bootstrap method.\n @param bsmArgs\n            the bootstrap method constant arguments.\n\n @return a new or an already existing invokedynamic type reference item.\n","return_type":"Item"},{"parameters":"String:name,String:desc,Handle:bsm,java.lang.Object[]:bsmArgs","name":"newInvokeDynamic","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds an invokedynamic reference to the constant pool of the class being\n build. Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param name\n            name of the invoked method.\n @param desc\n            descriptor of the invoke method.\n @param bsm\n            the bootstrap method.\n @param bsmArgs\n            the bootstrap method constant arguments.\n\n @return the index of a new or already existing invokedynamic reference\n         item.\n","return_type":"int"},{"parameters":"String:owner,String:name,String:desc","name":"newFieldItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a field reference to the constant pool of the class being build.\n Does nothing if the constant pool already contains a similar item.\n\n @param owner\n            the internal name of the field's owner class.\n @param name\n            the field's name.\n @param desc\n            the field's descriptor.\n @return a new or already existing field reference item.\n","return_type":"Item"},{"parameters":"String:owner,String:name,String:desc","name":"newField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a field reference to the constant pool of the class being build.\n Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param owner\n            the internal name of the field's owner class.\n @param name\n            the field's name.\n @param desc\n            the field's descriptor.\n @return the index of a new or already existing field reference item.\n","return_type":"int"},{"parameters":"String:owner,String:name,String:desc,boolean:itf","name":"newMethodItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a method reference to the constant pool of the class being build.\n Does nothing if the constant pool already contains a similar item.\n\n @param owner\n            the internal name of the method's owner class.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor.\n @param itf\n            <tt>true</tt> if <tt>owner</tt> is an interface.\n @return a new or already existing method reference item.\n","return_type":"Item"},{"parameters":"String:owner,String:name,String:desc,boolean:itf","name":"newMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a method reference to the constant pool of the class being build.\n Does nothing if the constant pool already contains a similar item.\n <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param owner\n            the internal name of the method's owner class.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor.\n @param itf\n            <tt>true</tt> if <tt>owner</tt> is an interface.\n @return the index of a new or already existing method reference item.\n","return_type":"int"},{"parameters":"int:value","name":"newInteger","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds an integer to the constant pool of the class being build. Does\n nothing if the constant pool already contains a similar item.\n\n @param value\n            the int value.\n @return a new or already existing int item.\n","return_type":"Item"},{"parameters":"float:value","name":"newFloat","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a float to the constant pool of the class being build. Does nothing\n if the constant pool already contains a similar item.\n\n @param value\n            the float value.\n @return a new or already existing float item.\n","return_type":"Item"},{"parameters":"long:value","name":"newLong","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a long to the constant pool of the class being build. Does nothing\n if the constant pool already contains a similar item.\n\n @param value\n            the long value.\n @return a new or already existing long item.\n","return_type":"Item"},{"parameters":"double:value","name":"newDouble","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a double to the constant pool of the class being build. Does nothing\n if the constant pool already contains a similar item.\n\n @param value\n            the double value.\n @return a new or already existing double item.\n","return_type":"Item"},{"parameters":"String:value","name":"newString","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a string to the constant pool of the class being build. Does nothing\n if the constant pool already contains a similar item.\n\n @param value\n            the String value.\n @return a new or already existing string item.\n","return_type":"Item"},{"parameters":"String:name,String:desc","name":"newNameType","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a name and type to the constant pool of the class being build. Does\n nothing if the constant pool already contains a similar item. <i>This\n method is intended for {@link Attribute} sub classes, and is normally not\n needed by class generators or adapters.</i>\n\n @param name\n            a name.\n @param desc\n            a type descriptor.\n @return the index of a new or already existing name and type item.\n","return_type":"int"},{"parameters":"String:name,String:desc","name":"newNameTypeItem","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds a name and type to the constant pool of the class being build. Does\n nothing if the constant pool already contains a similar item.\n\n @param name\n            a name.\n @param desc\n            a type descriptor.\n @return a new or already existing name and type item.\n","return_type":"Item"},{"parameters":"String:type","name":"addType","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds the given internal name to {@link #typeTable} and returns its index.\n Does nothing if the type table already contains this internal name.\n\n @param type\n            the internal name to be added to the type table.\n @return the index of this internal name in the type table.\n","return_type":"int"},{"parameters":"String:type,int:offset","name":"addUninitializedType","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds the given \"uninitialized\" type to {@link #typeTable} and returns its\n index. This method is used for UNINITIALIZED types, made of an internal\n name and a bytecode offset.\n\n @param type\n            the internal name to be added to the type table.\n @param offset\n            the bytecode offset of the NEW instruction that created this\n            UNINITIALIZED type value.\n @return the index of this internal name in the type table.\n","return_type":"int"},{"parameters":"Item:item","name":"addType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Adds the given Item to {@link #typeTable}.\n\n @param item\n            the value to be added to the type table.\n @return the added Item, which a new Item instance with the same value as\n         the given Item.\n","return_type":"Item"},{"parameters":"int:type1,int:type2","name":"getMergedType","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the index of the common super type of the two given types. This\n method calls {@link #getCommonSuperClass} and caches the result in the\n {@link #items} hash table to speedup future calls with the same\n parameters.\n\n @param type1\n            index of an internal name in {@link #typeTable}.\n @param type2\n            index of an internal name in {@link #typeTable}.\n @return the index of the common super type of the two given types.\n","return_type":"int"},{"parameters":"String:type1,String:type2","name":"getCommonSuperClass","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the common super type of the two given types. The default\n implementation of this method <i>loads</i> the two given classes and uses\n the java.lang.Class methods to find the common super class. It can be\n overridden to compute this common super type in other ways, in particular\n without actually loading any class, or to take into account the class\n that is currently being generated by this ClassWriter, which can of\n course not be loaded since it is under construction.\n\n @param type1\n            the internal name of a class.\n @param type2\n            the internal name of another class.\n @return the internal name of the common super class of the two given\n         classes.\n","return_type":"String"},{"parameters":"Item:key","name":"get","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the constant pool's hash table item which is equal to the given\n item.\n\n @param key\n            a constant pool item.\n @return the constant pool's hash table item which is equal to the given\n         item, or <tt>null</tt> if there is no such item.\n","return_type":"Item"},{"parameters":"Item:i","name":"put","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts the given item in the constant pool's hash table. The hash table\n <i>must</i> not already contains this item.\n\n @param i\n            the item to be added to the constant pool's hash table.\n","return_type":"void"},{"parameters":"int:b,int:s1,int:s2","name":"put122","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts one byte and two shorts into the constant pool.\n\n @param b\n            a byte.\n @param s1\n            a short.\n @param s2\n            another short.\n","return_type":"void"},{"parameters":"int:b1,int:b2,int:s","name":"put112","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts two bytes and one short into the constant pool.\n\n @param b1\n            a byte.\n @param b2\n            another byte.\n @param s\n            a short.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"COMPUTE_MAXS","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Flag to automatically compute the maximum stack size and the maximum\n number of local variables of methods. If this flag is set, then the\n arguments of the {@link MethodVisitor#visitMaxs visitMaxs} method of the\n {@link MethodVisitor} returned by the {@link #visitMethod visitMethod}\n method will be ignored, and computed automatically from the signature and\n the bytecode of each method.\n\n @see #ClassWriter(int)\n","return_type":null},{"parameters":null,"name":"COMPUTE_FRAMES","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Flag to automatically compute the stack map frames of methods from\n scratch. If this flag is set, then the calls to the\n {@link MethodVisitor#visitFrame} method are ignored, and the stack map\n frames are recomputed from the methods bytecode. The arguments of the\n {@link MethodVisitor#visitMaxs visitMaxs} method are also ignored and\n recomputed from the bytecode. In other words, computeFrames implies\n computeMaxs.\n\n @see #ClassWriter(int)\n","return_type":null},{"parameters":null,"name":"ACC_SYNTHETIC_ATTRIBUTE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Pseudo access flag to distinguish between the synthetic attribute and the\n synthetic access flag.\n","return_type":null},{"parameters":null,"name":"TO_ACC_SYNTHETIC","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Factor to convert from ACC_SYNTHETIC_ATTRIBUTE to Opcode.ACC_SYNTHETIC.\n","return_type":null},{"parameters":null,"name":"NOARG_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions without any argument.\n","return_type":null},{"parameters":null,"name":"SBYTE_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions with an signed byte argument.\n","return_type":null},{"parameters":null,"name":"SHORT_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions with an signed short argument.\n","return_type":null},{"parameters":null,"name":"VAR_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions with a local variable index argument.\n","return_type":null},{"parameters":null,"name":"IMPLVAR_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions with an implicit local variable index argument.\n","return_type":null},{"parameters":null,"name":"TYPE_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions with a type descriptor argument.\n","return_type":null},{"parameters":null,"name":"FIELDORMETH_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of field and method invocations instructions.\n","return_type":null},{"parameters":null,"name":"ITFMETH_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the INVOKEINTERFACE/INVOKEDYNAMIC instruction.\n","return_type":null},{"parameters":null,"name":"INDYMETH_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the INVOKEDYNAMIC instruction.\n","return_type":null},{"parameters":null,"name":"LABEL_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions with a 2 bytes bytecode offset label.\n","return_type":null},{"parameters":null,"name":"LABELW_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of instructions with a 4 bytes bytecode offset label.\n","return_type":null},{"parameters":null,"name":"LDC_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the LDC instruction.\n","return_type":null},{"parameters":null,"name":"LDCW_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the LDC_W and LDC2_W instructions.\n","return_type":null},{"parameters":null,"name":"IINC_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the IINC instruction.\n","return_type":null},{"parameters":null,"name":"TABL_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the TABLESWITCH instruction.\n","return_type":null},{"parameters":null,"name":"LOOK_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the LOOKUPSWITCH instruction.\n","return_type":null},{"parameters":null,"name":"MANA_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the MULTIANEWARRAY instruction.\n","return_type":null},{"parameters":null,"name":"WIDE_INSN","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of the WIDE instruction.\n","return_type":null},{"parameters":null,"name":"TYPE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The instruction types of all JVM opcodes.\n","return_type":null},{"parameters":null,"name":"CLASS","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Class constant pool items.\n","return_type":null},{"parameters":null,"name":"FIELD","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Fieldref constant pool items.\n","return_type":null},{"parameters":null,"name":"METH","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Methodref constant pool items.\n","return_type":null},{"parameters":null,"name":"IMETH","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_InterfaceMethodref constant pool items.\n","return_type":null},{"parameters":null,"name":"STR","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_String constant pool items.\n","return_type":null},{"parameters":null,"name":"INT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Integer constant pool items.\n","return_type":null},{"parameters":null,"name":"FLOAT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Float constant pool items.\n","return_type":null},{"parameters":null,"name":"LONG","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Long constant pool items.\n","return_type":null},{"parameters":null,"name":"DOUBLE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Double constant pool items.\n","return_type":null},{"parameters":null,"name":"NAME_TYPE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_NameAndType constant pool items.\n","return_type":null},{"parameters":null,"name":"UTF8","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_Utf8 constant pool items.\n","return_type":null},{"parameters":null,"name":"MTYPE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_MethodType constant pool items.\n","return_type":null},{"parameters":null,"name":"HANDLE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_MethodHandle constant pool items.\n","return_type":null},{"parameters":null,"name":"INDY","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of CONSTANT_InvokeDynamic constant pool items.\n","return_type":null},{"parameters":null,"name":"HANDLE_BASE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The base value for all CONSTANT_MethodHandle constant pool items.\n Internally, ASM store the 9 variations of CONSTANT_MethodHandle into 9\n different items.\n","return_type":null},{"parameters":null,"name":"TYPE_NORMAL","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Normal type Item stored in the ClassWriter {@link ClassWriter#typeTable},\n instead of the constant pool, in order to avoid clashes with normal\n constant pool items in the ClassWriter constant pool's hash table.\n","return_type":null},{"parameters":null,"name":"TYPE_UNINIT","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Uninitialized type Item stored in the ClassWriter\n {@link ClassWriter#typeTable}, instead of the constant pool, in order to\n avoid clashes with normal constant pool items in the ClassWriter constant\n pool's hash table.\n","return_type":null},{"parameters":null,"name":"TYPE_MERGED","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Merged type Item stored in the ClassWriter {@link ClassWriter#typeTable},\n instead of the constant pool, in order to avoid clashes with normal\n constant pool items in the ClassWriter constant pool's hash table.\n","return_type":null},{"parameters":null,"name":"BSM","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of BootstrapMethods items. These items are stored in a special\n class attribute named BootstrapMethods and not in the constant pool.\n","return_type":null},{"parameters":null,"name":"cr","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The class reader from which this class writer was constructed, if any.\n","return_type":null},{"parameters":null,"name":"version","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Minor and major version numbers of the class to be generated.\n","return_type":null},{"parameters":null,"name":"index","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Index of the next item to be added in the constant pool.\n","return_type":null},{"parameters":null,"name":"pool","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The constant pool of this class.\n","return_type":null},{"parameters":null,"name":"items","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The constant pool's hash table data.\n","return_type":null},{"parameters":null,"name":"threshold","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The threshold of the constant pool's hash table.\n","return_type":null},{"parameters":null,"name":"key","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A reusable key used to look for items in the {@link #items} hash table.\n","return_type":null},{"parameters":null,"name":"key2","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A reusable key used to look for items in the {@link #items} hash table.\n","return_type":null},{"parameters":null,"name":"key3","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A reusable key used to look for items in the {@link #items} hash table.\n","return_type":null},{"parameters":null,"name":"key4","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" A reusable key used to look for items in the {@link #items} hash table.\n","return_type":null},{"parameters":null,"name":"typeTable","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A type table used to temporarily store internal names that will not\n necessarily be stored in the constant pool. This type table is used by\n the control flow and data flow analysis algorithm used to compute stack\n map frames from scratch. This array associates to each index <tt>i</tt>\n the Item whose index is <tt>i</tt>. All Item objects stored in this array\n are also stored in the {@link #items} hash table. These two arrays allow\n to retrieve an Item from its index or, conversely, to get the index of an\n Item from its value. Each Item stores an internal name in its\n {@link Item#strVal1} field.\n","return_type":null},{"parameters":null,"name":"typeCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of elements in the {@link #typeTable} array.\n","return_type":null},{"parameters":null,"name":"access","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The access flags of this class.\n","return_type":null},{"parameters":null,"name":"name","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The constant pool item that contains the internal name of this class.\n","return_type":null},{"parameters":null,"name":"thisName","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The internal name of this class.\n","return_type":null},{"parameters":null,"name":"signature","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The constant pool item that contains the signature of this class.\n","return_type":null},{"parameters":null,"name":"superName","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The constant pool item that contains the internal name of the super class\n of this class.\n","return_type":null},{"parameters":null,"name":"interfaceCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Number of interfaces implemented or extended by this class or interface.\n","return_type":null},{"parameters":null,"name":"interfaces","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The interfaces implemented or extended by this class or interface. More\n precisely, this array contains the indexes of the constant pool items\n that contain the internal names of these interfaces.\n","return_type":null},{"parameters":null,"name":"sourceFile","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The index of the constant pool item that contains the name of the source\n file from which this class was compiled.\n","return_type":null},{"parameters":null,"name":"sourceDebug","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The SourceDebug attribute of this class.\n","return_type":null},{"parameters":null,"name":"enclosingMethodOwner","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The constant pool item that contains the name of the enclosing class of\n this class.\n","return_type":null},{"parameters":null,"name":"enclosingMethod","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The constant pool item that contains the name and descriptor of the\n enclosing method of this class.\n","return_type":null},{"parameters":null,"name":"anns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible annotations of this class.\n","return_type":null},{"parameters":null,"name":"ianns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible annotations of this class.\n","return_type":null},{"parameters":null,"name":"tanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime visible type annotations of this class.\n","return_type":null},{"parameters":null,"name":"itanns","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The runtime invisible type annotations of this class.\n","return_type":null},{"parameters":null,"name":"attrs","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The non standard attributes of this class.\n","return_type":null},{"parameters":null,"name":"innerClassesCount","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The number of entries in the InnerClasses attribute.\n","return_type":null},{"parameters":null,"name":"innerClasses","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The InnerClasses attribute.\n","return_type":null},{"parameters":null,"name":"bootstrapMethodsCount","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The number of entries in the BootstrapMethods attribute.\n","return_type":null},{"parameters":null,"name":"bootstrapMethods","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The BootstrapMethods attribute.\n","return_type":null},{"parameters":null,"name":"firstField","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The fields of this class. These fields are stored in a linked list of\n {@link FieldWriter} objects, linked to each other by their\n {@link FieldWriter#fv} field. This field stores the first element of this\n list.\n","return_type":null},{"parameters":null,"name":"lastField","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The fields of this class. These fields are stored in a linked list of\n {@link FieldWriter} objects, linked to each other by their\n {@link FieldWriter#fv} field. This field stores the last element of this\n list.\n","return_type":null},{"parameters":null,"name":"firstMethod","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The methods of this class. These methods are stored in a linked list of\n {@link MethodWriter} objects, linked to each other by their\n {@link MethodWriter#mv} field. This field stores the first element of\n this list.\n","return_type":null},{"parameters":null,"name":"lastMethod","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The methods of this class. These methods are stored in a linked list of\n {@link MethodWriter} objects, linked to each other by their\n {@link MethodWriter#mv} field. This field stores the last element of this\n list.\n","return_type":null},{"parameters":null,"name":"computeMaxs","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" <tt>true</tt> if the maximum stack size and number of local variables\n must be automatically computed.\n","return_type":null},{"parameters":null,"name":"computeFrames","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" <tt>true</tt> if the stack map frames must be recomputed from scratch.\n","return_type":null},{"parameters":null,"name":"invalidFrames","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" <tt>true</tt> if the stack map tables of this class are invalid. The\n {@link MethodWriter#resizeInstructions} method cannot transform existing\n stack map tables, and so produces potentially invalid classes when it is\n executed. In this case the class is reread and rewritten with the\n {@link #COMPUTE_FRAMES} option (the resizeInstructions method can resize\n stack map tables when this option is used).\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A {@link ClassVisitor} that generates classes in bytecode form. More\n precisely this visitor generates a byte array conforming to the Java class\n file format. It can be used alone, to generate a Java class \"from scratch\",\n or with one or more {@link ClassReader ClassReader} and adapter class visitor\n to generate a modified class from one or more existing Java classes.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ClassVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api","name":"ClassVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":"int:api,ClassVisitor:cv","name":"ClassVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param cv\n            the class visitor to which this visitor must delegate method\n            calls. May be null.\n","return_type":null}],"methods":[{"parameters":"int:version,int:access,String:name,String:signature,String:superName,java.lang.String[]:interfaces","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the header of the class.\n\n @param version\n            the class version.\n @param access\n            the class's access flags (see {@link Opcodes}). This parameter\n            also indicates if the class is deprecated.\n @param name\n            the internal name of the class (see\n            {@link Type#getInternalName() getInternalName}).\n @param signature\n            the signature of this class. May be <tt>null</tt> if the class\n            is not a generic one, and does not extend or implement generic\n            classes or interfaces.\n @param superName\n            the internal of name of the super class (see\n            {@link Type#getInternalName() getInternalName}). For\n            interfaces, the super class is {@link Object}. May be\n            <tt>null</tt>, but only for the {@link Object} class.\n @param interfaces\n            the internal names of the class's interfaces (see\n            {@link Type#getInternalName() getInternalName}). May be\n            <tt>null</tt>.\n","return_type":"void"},{"parameters":"String:source,String:debug","name":"visitSource","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the source of the class.\n\n @param source\n            the name of the source file from which the class was compiled.\n            May be <tt>null</tt>.\n @param debug\n            additional debug information to compute the correspondance\n            between source and compiled elements of the class. May be\n            <tt>null</tt>.\n","return_type":"void"},{"parameters":"String:owner,String:name,String:desc","name":"visitOuterClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the enclosing class of the class. This method must be called only\n if the class has an enclosing class.\n\n @param owner\n            internal name of the enclosing class of the class.\n @param name\n            the name of the method that contains the class, or\n            <tt>null</tt> if the class is not enclosed in a method of its\n            enclosing class.\n @param desc\n            the descriptor of the method that contains the class, or\n            <tt>null</tt> if the class is not enclosed in a method of its\n            enclosing class.\n","return_type":"void"},{"parameters":"String:desc,boolean:visible","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation of the class.\n\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"int:typeRef,TypePath:typePath,String:desc,boolean:visible","name":"visitTypeAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an annotation on a type in the class signature.\n\n @param typeRef\n            a reference to the annotated type. The sort of this type\n            reference must be {@link TypeReference#CLASS_TYPE_PARAMETER\n            CLASS_TYPE_PARAMETER},\n            {@link TypeReference#CLASS_TYPE_PARAMETER_BOUND\n            CLASS_TYPE_PARAMETER_BOUND} or\n            {@link TypeReference#CLASS_EXTENDS CLASS_EXTENDS}. See\n            {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param desc\n            the class descriptor of the annotation class.\n @param visible\n            <tt>true</tt> if the annotation is visible at runtime.\n @return a visitor to visit the annotation values, or <tt>null</tt> if\n         this visitor is not interested in visiting this annotation.\n","return_type":"AnnotationVisitor"},{"parameters":"Attribute:attr","name":"visitAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a non standard attribute of the class.\n\n @param attr\n            an attribute.\n","return_type":"void"},{"parameters":"String:name,String:outerName,String:innerName,int:access","name":"visitInnerClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits information about an inner class. This inner class is not\n necessarily a member of the class being visited.\n\n @param name\n            the internal name of an inner class (see\n            {@link Type#getInternalName() getInternalName}).\n @param outerName\n            the internal name of the class to which the inner class\n            belongs (see {@link Type#getInternalName() getInternalName}).\n            May be <tt>null</tt> for not member classes.\n @param innerName\n            the (simple) name of the inner class inside its enclosing\n            class. May be <tt>null</tt> for anonymous inner classes.\n @param access\n            the access flags of the inner class as originally declared in\n            the enclosing class.\n","return_type":"void"},{"parameters":"int:access,String:name,String:desc,String:signature,Object:value","name":"visitField","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a field of the class.\n\n @param access\n            the field's access flags (see {@link Opcodes}). This parameter\n            also indicates if the field is synthetic and/or deprecated.\n @param name\n            the field's name.\n @param desc\n            the field's descriptor (see {@link Type Type}).\n @param signature\n            the field's signature. May be <tt>null</tt> if the field's\n            type does not use generic types.\n @param value\n            the field's initial value. This parameter, which may be\n            <tt>null</tt> if the field does not have an initial value,\n            must be an {@link Integer}, a {@link Float}, a {@link Long}, a\n            {@link Double} or a {@link String} (for <tt>int</tt>,\n            <tt>float</tt>, <tt>long</tt> or <tt>String</tt> fields\n            respectively). <i>This parameter is only used for static\n            fields</i>. Its value is ignored for non static fields, which\n            must be initialized through bytecode instructions in\n            constructors or methods.\n @return a visitor to visit field annotations and attributes, or\n         <tt>null</tt> if this class visitor is not interested in visiting\n         these annotations and attributes.\n","return_type":"FieldVisitor"},{"parameters":"int:access,String:name,String:desc,String:signature,java.lang.String[]:exceptions","name":"visitMethod","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a method of the class. This method <i>must</i> return a new\n {@link MethodVisitor} instance (or <tt>null</tt>) each time it is called,\n i.e., it should not return a previously returned visitor.\n\n @param access\n            the method's access flags (see {@link Opcodes}). This\n            parameter also indicates if the method is synthetic and/or\n            deprecated.\n @param name\n            the method's name.\n @param desc\n            the method's descriptor (see {@link Type Type}).\n @param signature\n            the method's signature. May be <tt>null</tt> if the method\n            parameters, return type and exceptions do not use generic\n            types.\n @param exceptions\n            the internal names of the method's exception classes (see\n            {@link Type#getInternalName() getInternalName}). May be\n            <tt>null</tt>.\n @return an object to visit the byte code of the method, or <tt>null</tt>\n         if this class visitor is not interested in visiting the code of\n         this method.\n","return_type":"MethodVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the end of the class. This method, which is the last one to be\n called, is used to inform the visitor that all the fields and methods of\n the class have been visited.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"api","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The ASM API version implemented by this visitor. The value of this field\n must be one of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":null,"name":"cv","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The class visitor to which this visitor must delegate method calls. May\n be null.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A visitor to visit a Java class. The methods of this class must be called in\n the following order: <tt>visit</tt> [ <tt>visitSource</tt> ] [\n <tt>visitOuterClass</tt> ] ( <tt>visitAnnotation</tt> |\n <tt>visitTypeAnnotation</tt> | <tt>visitAttribute</tt> )* (\n <tt>visitInnerClass</tt> | <tt>visitField</tt> | <tt>visitMethod</tt> )*\n <tt>visitEnd</tt>.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ClassReader","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"byte[]:b","name":"ClassReader","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassReader} object.\n\n @param b\n            the bytecode of the class to be read.\n","return_type":null},{"parameters":"byte[]:b,int:off,int:len","name":"ClassReader","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassReader} object.\n\n @param b\n            the bytecode of the class to be read.\n @param off\n            the start offset of the class data.\n @param len\n            the length of the class data.\n","return_type":null},{"parameters":"InputStream:is","name":"ClassReader","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassReader} object.\n\n @param is\n            an input stream from which to read the class.\n @throws IOException\n             if a problem occurs during reading.\n","return_type":null},{"parameters":"String:name","name":"ClassReader","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ClassReader} object.\n\n @param name\n            the binary qualified name of the class to be read.\n @throws IOException\n             if an exception occurs during reading.\n","return_type":null}],"methods":[{"parameters":null,"name":"getAccess","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the class's access flags (see {@link Opcodes}). This value may\n not reflect Deprecated and Synthetic flags when bytecode is before 1.5\n and those flags are represented by attributes.\n\n @return the class access flags\n\n @see ClassVisitor#visit(int, int, String, String, String, String[])\n","return_type":"int"},{"parameters":null,"name":"getClassName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the internal name of the class (see\n {@link Type#getInternalName() getInternalName}).\n\n @return the internal class name\n\n @see ClassVisitor#visit(int, int, String, String, String, String[])\n","return_type":"String"},{"parameters":null,"name":"getSuperName","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the internal of name of the super class (see\n {@link Type#getInternalName() getInternalName}). For interfaces, the\n super class is {@link Object}.\n\n @return the internal name of super class, or <tt>null</tt> for\n         {@link Object} class.\n\n @see ClassVisitor#visit(int, int, String, String, String, String[])\n","return_type":"String"},{"parameters":null,"name":"getInterfaces","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the internal names of the class's interfaces (see\n {@link Type#getInternalName() getInternalName}).\n\n @return the array of internal names for all implemented interfaces or\n         <tt>null</tt>.\n\n @see ClassVisitor#visit(int, int, String, String, String, String[])\n","return_type":"String"},{"parameters":"ClassWriter:classWriter","name":"copyPool","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Copies the constant pool data into the given {@link ClassWriter}. Should\n be called before the {@link #accept(ClassVisitor,int)} method.\n\n @param classWriter\n            the {@link ClassWriter} to copy constant pool into.\n","return_type":"void"},{"parameters":"ClassWriter:classWriter,jdk.internal.org.objectweb.asm.Item[]:items,char[]:c","name":"copyBootstrapMethods","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Copies the bootstrap method data into the given {@link ClassWriter}.\n Should be called before the {@link #accept(ClassVisitor,int)} method.\n\n @param classWriter\n            the {@link ClassWriter} to copy bootstrap methods into.\n","return_type":"void"},{"parameters":"InputStream:is,boolean:close","name":"readClass","modifier":"private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads the bytecode of a class.\n\n @param is\n            an input stream from which to read the class.\n @param close\n            true to close the input stream after reading.\n @return the bytecode read from the given input stream.\n @throws IOException\n             if a problem occurs during reading.\n","return_type":"byte"},{"parameters":"ClassVisitor:classVisitor,int:flags","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Makes the given visitor visit the Java class of this {@link ClassReader}\n . This class is the one specified in the constructor (see\n {@link #ClassReader(byte[]) ClassReader}).\n\n @param classVisitor\n            the visitor that must visit this class.\n @param flags\n            option flags that can be used to modify the default behavior\n            of this class. See {@link #SKIP_DEBUG}, {@link #EXPAND_FRAMES}\n            , {@link #SKIP_FRAMES}, {@link #SKIP_CODE}.\n","return_type":"void"},{"parameters":"ClassVisitor:classVisitor,jdk.internal.org.objectweb.asm.Attribute[]:attrs,int:flags","name":"accept","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Makes the given visitor visit the Java class of this {@link ClassReader}.\n This class is the one specified in the constructor (see\n {@link #ClassReader(byte[]) ClassReader}).\n\n @param classVisitor\n            the visitor that must visit this class.\n @param attrs\n            prototypes of the attributes that must be parsed during the\n            visit of the class. Any attribute whose type is not equal to\n            the type of one the prototypes will not be parsed: its byte\n            array value will be passed unchanged to the ClassWriter.\n            <i>This may corrupt it if this value contains references to\n            the constant pool, or has syntactic or semantic links with a\n            class element that has been transformed by a class adapter\n            between the reader and the writer</i>.\n @param flags\n            option flags that can be used to modify the default behavior\n            of this class. See {@link #SKIP_DEBUG}, {@link #EXPAND_FRAMES}\n            , {@link #SKIP_FRAMES}, {@link #SKIP_CODE}.\n","return_type":"void"},{"parameters":"ClassVisitor:classVisitor,Context:context,int:u","name":"readField","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a field and makes the given visitor visit it.\n\n @param classVisitor\n            the visitor that must visit the field.\n @param context\n            information about the class being parsed.\n @param u\n            the start offset of the field in the class file.\n @return the offset of the first byte following the field in the class.\n","return_type":"int"},{"parameters":"ClassVisitor:classVisitor,Context:context,int:u","name":"readMethod","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a method and makes the given visitor visit it.\n\n @param classVisitor\n            the visitor that must visit the method.\n @param context\n            information about the class being parsed.\n @param u\n            the start offset of the method in the class file.\n @return the offset of the first byte following the method in the class.\n","return_type":"int"},{"parameters":"MethodVisitor:mv,Context:context,int:u","name":"readCode","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads the bytecode of a method and makes the given visitor visit it.\n\n @param mv\n            the visitor that must visit the method's code.\n @param context\n            information about the class being parsed.\n @param u\n            the start offset of the code attribute in the class file.\n","return_type":"void"},{"parameters":"MethodVisitor:mv,Context:context,int:u,boolean:visible","name":"readTypeAnnotations","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Parses a type annotation table to find the labels, and to visit the try\n catch block annotations.\n\n @param u\n            the start offset of a type annotation table.\n @param mv\n            the method visitor to be used to visit the try catch block\n            annotations.\n @param context\n            information about the class being parsed.\n @param visible\n            if the type annotation table to parse contains runtime visible\n            annotations.\n @return the start offset of each type annotation in the parsed table.\n","return_type":"int"},{"parameters":"Context:context,int:u","name":"readAnnotationTarget","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Parses the header of a type annotation to extract its target_type and\n target_path (the result is stored in the given context), and returns the\n start offset of the rest of the type_annotation structure (i.e. the\n offset to the type_index field, which is followed by\n num_element_value_pairs and then the name,value pairs).\n\n @param context\n            information about the class being parsed. This is where the\n            extracted target_type and target_path must be stored.\n @param u\n            the start offset of a type_annotation structure.\n @return the start offset of the rest of the type_annotation structure.\n","return_type":"int"},{"parameters":"MethodVisitor:mv,Context:context,int:v,boolean:visible","name":"readParameterAnnotations","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads parameter annotations and makes the given visitor visit them.\n\n @param mv\n            the visitor that must visit the annotations.\n @param context\n            information about the class being parsed.\n @param v\n            start offset in {@link #b b} of the annotations to be read.\n @param visible\n            <tt>true</tt> if the annotations to be read are visible at\n            runtime.\n","return_type":"void"},{"parameters":"int:v,char[]:buf,boolean:named,AnnotationVisitor:av","name":"readAnnotationValues","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads the values of an annotation and makes the given visitor visit them.\n\n @param v\n            the start offset in {@link #b b} of the values to be read\n            (including the unsigned short that gives the number of\n            values).\n @param buf\n            buffer to be used to call {@link #readUTF8 readUTF8},\n            {@link #readClass(int,char[]) readClass} or {@link #readConst\n            readConst}.\n @param named\n            if the annotation values are named or not.\n @param av\n            the visitor that must visit the values.\n @return the end offset of the annotation values.\n","return_type":"int"},{"parameters":"int:v,char[]:buf,String:name,AnnotationVisitor:av","name":"readAnnotationValue","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a value of an annotation and makes the given visitor visit it.\n\n @param v\n            the start offset in {@link #b b} of the value to be read\n            (<i>not including the value name constant pool index</i>).\n @param buf\n            buffer to be used to call {@link #readUTF8 readUTF8},\n            {@link #readClass(int,char[]) readClass} or {@link #readConst\n            readConst}.\n @param name\n            the name of the value to be read.\n @param av\n            the visitor that must visit the value.\n @return the end offset of the annotation value.\n","return_type":"int"},{"parameters":"Context:frame","name":"getImplicitFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Computes the implicit frame of the method currently being parsed (as\n defined in the given {@link Context}) and stores it in the given context.\n\n @param frame\n            information about the class being parsed.\n","return_type":"void"},{"parameters":"int:stackMap,boolean:zip,boolean:unzip,Context:frame","name":"readFrame","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a stack map frame and stores the result in the given\n {@link Context} object.\n\n @param stackMap\n            the start offset of a stack map frame in the class file.\n @param zip\n            if the stack map frame at stackMap is compressed or not.\n @param unzip\n            if the stack map frame must be uncompressed.\n @param frame\n            where the parsed stack map frame must be stored.\n @return the offset of the first byte following the parsed frame.\n","return_type":"int"},{"parameters":"java.lang.Object[]:frame,int:index,int:v,char[]:buf,jdk.internal.org.objectweb.asm.Label[]:labels","name":"readFrameType","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a stack map frame type and stores it at the given index in the\n given array.\n\n @param frame\n            the array where the parsed type must be stored.\n @param index\n            the index in 'frame' where the parsed type must be stored.\n @param v\n            the start offset of the stack map frame type to read.\n @param buf\n            a buffer to read strings.\n @param labels\n            the labels of the method currently being parsed, indexed by\n            their offset. If the parsed type is an Uninitialized type, a\n            new label for the corresponding NEW instruction is stored in\n            this array if it does not already exist.\n @return the offset of the first byte after the parsed type.\n","return_type":"int"},{"parameters":"int:offset,jdk.internal.org.objectweb.asm.Label[]:labels","name":"readLabel","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the label corresponding to the given offset. The default\n implementation of this method creates a label for the given offset if it\n has not been already created.\n\n @param offset\n            a bytecode offset in a method.\n @param labels\n            the already created labels, indexed by their offset. If a\n            label already exists for offset this method must not create a\n            new one. Otherwise it must store the new label in this array.\n @return a non null Label, which must be equal to labels[offset].\n","return_type":"Label"},{"parameters":null,"name":"getAttributes","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the start index of the attribute_info structure of this class.\n\n @return the start index of the attribute_info structure of this class.\n","return_type":"int"},{"parameters":"jdk.internal.org.objectweb.asm.Attribute[]:attrs,String:type,int:off,int:len,char[]:buf,int:codeOff,jdk.internal.org.objectweb.asm.Label[]:labels","name":"readAttribute","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads an attribute in {@link #b b}.\n\n @param attrs\n            prototypes of the attributes that must be parsed during the\n            visit of the class. Any attribute whose type is not equal to\n            the type of one the prototypes is ignored (i.e. an empty\n            {@link Attribute} instance is returned).\n @param type\n            the type of the attribute.\n @param off\n            index of the first byte of the attribute's content in\n            {@link #b b}. The 6 attribute header bytes, containing the\n            type and the length of the attribute, are not taken into\n            account here (they have already been read).\n @param len\n            the length of the attribute's content.\n @param buf\n            buffer to be used to call {@link #readUTF8 readUTF8},\n            {@link #readClass(int,char[]) readClass} or {@link #readConst\n            readConst}.\n @param codeOff\n            index of the first byte of code's attribute content in\n            {@link #b b}, or -1 if the attribute to be read is not a code\n            attribute. The 6 attribute header bytes, containing the type\n            and the length of the attribute, are not taken into account\n            here.\n @param labels\n            the labels of the method's code, or <tt>null</tt> if the\n            attribute to be read is not a code attribute.\n @return the attribute that has been read, or <tt>null</tt> to skip this\n         attribute.\n","return_type":"Attribute"},{"parameters":null,"name":"getItemCount","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the number of constant pool items in {@link #b b}.\n\n @return the number of constant pool items in {@link #b b}.\n","return_type":"int"},{"parameters":"int:item","name":"getItem","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the start index of the constant pool item in {@link #b b}, plus\n one. <i>This method is intended for {@link Attribute} sub classes, and is\n normally not needed by class generators or adapters.</i>\n\n @param item\n            the index a constant pool item.\n @return the start index of the constant pool item in {@link #b b}, plus\n         one.\n","return_type":"int"},{"parameters":null,"name":"getMaxStringLength","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the maximum length of the strings contained in the constant pool\n of the class.\n\n @return the maximum length of the strings contained in the constant pool\n         of the class.\n","return_type":"int"},{"parameters":"int:index","name":"readByte","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a byte value in {@link #b b}. <i>This method is intended for\n {@link Attribute} sub classes, and is normally not needed by class\n generators or adapters.</i>\n\n @param index\n            the start index of the value to be read in {@link #b b}.\n @return the read value.\n","return_type":"int"},{"parameters":"int:index","name":"readUnsignedShort","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads an unsigned short value in {@link #b b}. <i>This method is intended\n for {@link Attribute} sub classes, and is normally not needed by class\n generators or adapters.</i>\n\n @param index\n            the start index of the value to be read in {@link #b b}.\n @return the read value.\n","return_type":"int"},{"parameters":"int:index","name":"readShort","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a signed short value in {@link #b b}. <i>This method is intended\n for {@link Attribute} sub classes, and is normally not needed by class\n generators or adapters.</i>\n\n @param index\n            the start index of the value to be read in {@link #b b}.\n @return the read value.\n","return_type":"short"},{"parameters":"int:index","name":"readInt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a signed int value in {@link #b b}. <i>This method is intended for\n {@link Attribute} sub classes, and is normally not needed by class\n generators or adapters.</i>\n\n @param index\n            the start index of the value to be read in {@link #b b}.\n @return the read value.\n","return_type":"int"},{"parameters":"int:index","name":"readLong","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a signed long value in {@link #b b}. <i>This method is intended for\n {@link Attribute} sub classes, and is normally not needed by class\n generators or adapters.</i>\n\n @param index\n            the start index of the value to be read in {@link #b b}.\n @return the read value.\n","return_type":"long"},{"parameters":"int:index,char[]:buf","name":"readUTF8","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads an UTF8 string constant pool item in {@link #b b}. <i>This method\n is intended for {@link Attribute} sub classes, and is normally not needed\n by class generators or adapters.</i>\n\n @param index\n            the start index of an unsigned short value in {@link #b b},\n            whose value is the index of an UTF8 constant pool item.\n @param buf\n            buffer to be used to read the item. This buffer must be\n            sufficiently large. It is not automatically resized.\n @return the String corresponding to the specified UTF8 item.\n","return_type":"String"},{"parameters":"int:index,int:utfLen,char[]:buf","name":"readUTF","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads UTF8 string in {@link #b b}.\n\n @param index\n            start offset of the UTF8 string to be read.\n @param utfLen\n            length of the UTF8 string to be read.\n @param buf\n            buffer to be used to read the string. This buffer must be\n            sufficiently large. It is not automatically resized.\n @return the String corresponding to the specified UTF8 string.\n","return_type":"String"},{"parameters":"int:index,char[]:buf","name":"readClass","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a class constant pool item in {@link #b b}. <i>This method is\n intended for {@link Attribute} sub classes, and is normally not needed by\n class generators or adapters.</i>\n\n @param index\n            the start index of an unsigned short value in {@link #b b},\n            whose value is the index of a class constant pool item.\n @param buf\n            buffer to be used to read the item. This buffer must be\n            sufficiently large. It is not automatically resized.\n @return the String corresponding to the specified class item.\n","return_type":"String"},{"parameters":"int:item,char[]:buf","name":"readConst","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a numeric or string constant pool item in {@link #b b}. <i>This\n method is intended for {@link Attribute} sub classes, and is normally not\n needed by class generators or adapters.</i>\n\n @param item\n            the index of a constant pool item.\n @param buf\n            buffer to be used to read the item. This buffer must be\n            sufficiently large. It is not automatically resized.\n @return the {@link Integer}, {@link Float}, {@link Long}, {@link Double},\n         {@link String}, {@link Type} or {@link Handle} corresponding to\n         the given constant pool item.\n","return_type":"Object"}],"fields":[{"parameters":null,"name":"SIGNATURES","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" True to enable signatures support.\n","return_type":null},{"parameters":null,"name":"ANNOTATIONS","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" True to enable annotations support.\n","return_type":null},{"parameters":null,"name":"FRAMES","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" True to enable stack map frames support.\n","return_type":null},{"parameters":null,"name":"WRITER","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" True to enable bytecode writing support.\n","return_type":null},{"parameters":null,"name":"RESIZE","modifier":"package-private","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" True to enable JSR_W and GOTO_W support.\n","return_type":null},{"parameters":null,"name":"SKIP_CODE","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Flag to skip method code. If this class is set <code>CODE</code>\n attribute won't be visited. This can be used, for example, to retrieve\n annotations for methods and method parameters.\n","return_type":null},{"parameters":null,"name":"SKIP_DEBUG","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Flag to skip the debug information in the class. If this flag is set the\n debug information of the class is not visited, i.e. the\n {@link MethodVisitor#visitLocalVariable visitLocalVariable} and\n {@link MethodVisitor#visitLineNumber visitLineNumber} methods will not be\n called.\n","return_type":null},{"parameters":null,"name":"SKIP_FRAMES","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Flag to skip the stack map frames in the class. If this flag is set the\n stack map frames of the class is not visited, i.e. the\n {@link MethodVisitor#visitFrame visitFrame} method will not be called.\n This flag is useful when the {@link ClassWriter#COMPUTE_FRAMES} option is\n used: it avoids visiting frames that will be ignored and recomputed from\n scratch in the class writer.\n","return_type":null},{"parameters":null,"name":"EXPAND_FRAMES","modifier":"public","static":true,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Flag to expand the stack map frames. By default stack map frames are\n visited in their original format (i.e. \"expanded\" for classes whose\n version is less than V1_6, and \"compressed\" for the other classes). If\n this flag is set, stack map frames are always visited in expanded format\n (this option adds a decompression/recompression step in ClassReader and\n ClassWriter which degrades performances quite a lot).\n","return_type":null},{"parameters":null,"name":"b","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The class to be parsed. <i>The content of this array must not be\n modified. This field is intended for {@link Attribute} sub classes, and\n is normally not needed by class generators or adapters.</i>\n","return_type":null},{"parameters":null,"name":"items","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The start index of each constant pool item in {@link #b b}, plus one. The\n one byte offset skips the constant pool item tag that indicates its type.\n","return_type":null},{"parameters":null,"name":"strings","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The String objects corresponding to the CONSTANT_Utf8 items. This cache\n avoids multiple parsing of a given CONSTANT_Utf8 constant pool item,\n which GREATLY improves performances (by a factor 2 to 3). This caching\n strategy could be extended to all constant pool items, but its benefit\n would not be so great for these items (because they are much less\n expensive to parse than CONSTANT_Utf8 items).\n","return_type":null},{"parameters":null,"name":"maxStringLength","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Maximum length of the strings contained in the constant pool of the\n class.\n","return_type":null},{"parameters":null,"name":"header","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Start index of the class header information (access, name...) in\n {@link #b b}.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A Java class parser to make a {@link ClassVisitor} visit an existing class.\n This class parses a byte array conforming to the Java class file format and\n calls the appropriate visit methods of a given class visitor for each field,\n method and bytecode instruction encountered.\n\n @author Eric Bruneton\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"ByteVector","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":null,"name":"ByteVector","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ByteVector ByteVector} with a default initial\n size.\n","return_type":null},{"parameters":"int:initialSize","name":"ByteVector","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link ByteVector ByteVector} with the given initial\n size.\n\n @param initialSize\n            the initial size of the byte vector to be constructed.\n","return_type":null}],"methods":[{"parameters":"int:b","name":"putByte","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts a byte into this byte vector. The byte vector is automatically\n enlarged if necessary.\n\n @param b\n            a byte.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"int:b1,int:b2","name":"put11","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts two bytes into this byte vector. The byte vector is automatically\n enlarged if necessary.\n\n @param b1\n            a byte.\n @param b2\n            another byte.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"int:s","name":"putShort","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts a short into this byte vector. The byte vector is automatically\n enlarged if necessary.\n\n @param s\n            a short.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"int:b,int:s","name":"put12","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts a byte and a short into this byte vector. The byte vector is\n automatically enlarged if necessary.\n\n @param b\n            a byte.\n @param s\n            a short.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"int:i","name":"putInt","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts an int into this byte vector. The byte vector is automatically\n enlarged if necessary.\n\n @param i\n            an int.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"long:l","name":"putLong","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts a long into this byte vector. The byte vector is automatically\n enlarged if necessary.\n\n @param l\n            a long.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"String:s","name":"putUTF8","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts an UTF8 string into this byte vector. The byte vector is\n automatically enlarged if necessary.\n\n @param s\n            a String whose UTF8 encoded length must be less than 65536.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"String:s,int:i,int:maxByteLength","name":"encodeUTF8","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts an UTF8 string into this byte vector. The byte vector is\n automatically enlarged if necessary. The string length is encoded in two\n bytes before the encoded characters, if there is space for that (i.e. if\n this.length - i - 2 >= 0).\n\n @param s\n            the String to encode.\n @param i\n            the index of the first character to encode. The previous\n            characters are supposed to have already been encoded, using\n            only one byte per character.\n @param maxByteLength\n            the maximum byte length of the encoded string, including the\n            already encoded characters.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"byte[]:b,int:off,int:len","name":"putByteArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts an array of bytes into this byte vector. The byte vector is\n automatically enlarged if necessary.\n\n @param b\n            an array of bytes. May be <tt>null</tt> to put <tt>len</tt>\n            null bytes into this byte vector.\n @param off\n            index of the fist byte of b that must be copied.\n @param len\n            number of bytes of b that must be copied.\n @return this byte vector.\n","return_type":"ByteVector"},{"parameters":"int:size","name":"enlarge","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Enlarge this byte vector so that it can receive n more bytes.\n\n @param size\n            number of additional bytes that this byte vector should be\n            able to receive.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"data","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The content of this vector.\n","return_type":null},{"parameters":null,"name":"length","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Actual number of bytes in this vector.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A dynamically extensible vector of bytes. This class is roughly equivalent to\n a DataOutputStream on top of a ByteArrayOutputStream, but is more efficient.\n\n @author Eric Bruneton\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"Attribute","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"String:type","name":"Attribute","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new empty attribute.\n\n @param type\n            the type of the attribute.\n","return_type":null}],"methods":[{"parameters":null,"name":"isUnknown","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns <tt>true</tt> if this type of attribute is unknown. The default\n implementation of this method always returns <tt>true</tt>.\n\n @return <tt>true</tt> if this type of attribute is unknown.\n","return_type":"boolean"},{"parameters":null,"name":"isCodeAttribute","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns <tt>true</tt> if this type of attribute is a code attribute.\n\n @return <tt>true</tt> if this type of attribute is a code attribute.\n","return_type":"boolean"},{"parameters":null,"name":"getLabels","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the labels corresponding to this attribute.\n\n @return the labels corresponding to this attribute, or <tt>null</tt> if\n         this attribute is not a code attribute that contains labels.\n","return_type":"Label"},{"parameters":"ClassReader:cr,int:off,int:len,char[]:buf,int:codeOff,jdk.internal.org.objectweb.asm.Label[]:labels","name":"read","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Reads a {@link #type type} attribute. This method must return a\n <i>new</i> {@link Attribute} object, of type {@link #type type},\n corresponding to the <tt>len</tt> bytes starting at the given offset, in\n the given class reader.\n\n @param cr\n            the class that contains the attribute to be read.\n @param off\n            index of the first byte of the attribute's content in\n            {@link ClassReader#b cr.b}. The 6 attribute header bytes,\n            containing the type and the length of the attribute, are not\n            taken into account here.\n @param len\n            the length of the attribute's content.\n @param buf\n            buffer to be used to call {@link ClassReader#readUTF8\n            readUTF8}, {@link ClassReader#readClass(int,char[]) readClass}\n            or {@link ClassReader#readConst readConst}.\n @param codeOff\n            index of the first byte of code's attribute content in\n            {@link ClassReader#b cr.b}, or -1 if the attribute to be read\n            is not a code attribute. The 6 attribute header bytes,\n            containing the type and the length of the attribute, are not\n            taken into account here.\n @param labels\n            the labels of the method's code, or <tt>null</tt> if the\n            attribute to be read is not a code attribute.\n @return a <i>new</i> {@link Attribute} object corresponding to the given\n         bytes.\n","return_type":"Attribute"},{"parameters":"ClassWriter:cw,byte[]:code,int:len,int:maxStack,int:maxLocals","name":"write","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the byte array form of this attribute.\n\n @param cw\n            the class to which this attribute must be added. This\n            parameter can be used to add to the constant pool of this\n            class the items that corresponds to this attribute.\n @param code\n            the bytecode of the method corresponding to this code\n            attribute, or <tt>null</tt> if this attribute is not a code\n            attributes.\n @param len\n            the length of the bytecode of the method corresponding to this\n            code attribute, or <tt>null</tt> if this attribute is not a\n            code attribute.\n @param maxStack\n            the maximum stack size of the method corresponding to this\n            code attribute, or -1 if this attribute is not a code\n            attribute.\n @param maxLocals\n            the maximum number of local variables of the method\n            corresponding to this code attribute, or -1 if this attribute\n            is not a code attribute.\n @return the byte array form of this attribute.\n","return_type":"ByteVector"},{"parameters":null,"name":"getCount","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Returns the length of the attribute list that begins with this attribute.\n\n @return the length of the attribute list that begins with this attribute.\n","return_type":"int"},{"parameters":"ClassWriter:cw,byte[]:code,int:len,int:maxStack,int:maxLocals","name":"getSize","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Returns the size of all the attributes in this attribute list.\n\n @param cw\n            the class writer to be used to convert the attributes into\n            byte arrays, with the {@link #write write} method.\n @param code\n            the bytecode of the method corresponding to these code\n            attributes, or <tt>null</tt> if these attributes are not code\n            attributes.\n @param len\n            the length of the bytecode of the method corresponding to\n            these code attributes, or <tt>null</tt> if these attributes\n            are not code attributes.\n @param maxStack\n            the maximum stack size of the method corresponding to these\n            code attributes, or -1 if these attributes are not code\n            attributes.\n @param maxLocals\n            the maximum number of local variables of the method\n            corresponding to these code attributes, or -1 if these\n            attributes are not code attributes.\n @return the size of all the attributes in this attribute list. This size\n         includes the size of the attribute headers.\n","return_type":"int"},{"parameters":"ClassWriter:cw,byte[]:code,int:len,int:maxStack,int:maxLocals,ByteVector:out","name":"put","modifier":"package-private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Writes all the attributes of this attribute list in the given byte\n vector.\n\n @param cw\n            the class writer to be used to convert the attributes into\n            byte arrays, with the {@link #write write} method.\n @param code\n            the bytecode of the method corresponding to these code\n            attributes, or <tt>null</tt> if these attributes are not code\n            attributes.\n @param len\n            the length of the bytecode of the method corresponding to\n            these code attributes, or <tt>null</tt> if these attributes\n            are not code attributes.\n @param maxStack\n            the maximum stack size of the method corresponding to these\n            code attributes, or -1 if these attributes are not code\n            attributes.\n @param maxLocals\n            the maximum number of local variables of the method\n            corresponding to these code attributes, or -1 if these\n            attributes are not code attributes.\n @param out\n            where the attributes must be written.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"type","modifier":"public","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The type of this attribute.\n","return_type":null},{"parameters":null,"name":"value","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The raw value of this attribute, used only for unknown attributes.\n","return_type":null},{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The next attribute in this attribute list. May be <tt>null</tt>.\n","return_type":null}],"abstract":false,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A non standard class, field, method or code attribute.\n\n @author Eric Bruneton\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"AnnotationWriter","modifier":"package-private","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"ClassWriter:cw,boolean:named,ByteVector:bv,ByteVector:parent,int:offset","name":"AnnotationWriter","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link AnnotationWriter}.\n\n @param cw\n            the class writer to which this annotation must be added.\n @param named\n            <tt>true<tt> if values are named, <tt>false</tt> otherwise.\n @param bv\n            where the annotation values must be stored.\n @param parent\n            where the number of annotation values must be stored.\n @param offset\n            where in <tt>parent</tt> the number of annotation values must\n            be stored.\n","return_type":null}],"methods":[{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"AnnotationVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":"","return_type":"void"},{"parameters":null,"name":"getSize","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Returns the size of this annotation writer list.\n\n @return the size of this annotation writer list.\n","return_type":"int"},{"parameters":"ByteVector:out","name":"put","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts the annotations of this annotation writer list into the given byte\n vector.\n\n @param out\n            where the annotations must be put.\n","return_type":"void"},{"parameters":"jdk.internal.org.objectweb.asm.AnnotationWriter[]:panns,int:off,ByteVector:out","name":"put","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts the given annotation lists into the given byte vector.\n\n @param panns\n            an array of annotation writer lists.\n @param off\n            index of the first annotation to be written.\n @param out\n            where the annotations must be put.\n","return_type":"void"},{"parameters":"int:typeRef,TypePath:typePath,ByteVector:out","name":"putTarget","modifier":"package-private","static":true,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Puts the given type reference and type path into the given bytevector.\n LOCAL_VARIABLE and RESOURCE_VARIABLE target types are not supported.\n\n @param typeRef\n            a reference to the annotated type. See {@link TypeReference}.\n @param typePath\n            the path to the annotated type argument, wildcard bound, array\n            element type, or static inner type within 'typeRef'. May be\n            <tt>null</tt> if the annotation targets 'typeRef' as a whole.\n @param out\n            where the type reference and type path must be put.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"cw","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The class writer to which this annotation must be added.\n","return_type":null},{"parameters":null,"name":"size","modifier":"private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The number of values in this annotation.\n","return_type":null},{"parameters":null,"name":"named","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" <tt>true<tt> if values are named, <tt>false</tt> otherwise. Annotation\n writers used for annotation default and annotation arrays use unnamed\n values.\n","return_type":null},{"parameters":null,"name":"bv","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The annotation values in bytecode form. This byte vector only contains\n the values themselves, i.e. the number of values must be stored as a\n unsigned short just before these bytes.\n","return_type":null},{"parameters":null,"name":"parent","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The byte vector to be used to store the number of values of this\n annotation. See {@link #bv}.\n","return_type":null},{"parameters":null,"name":"offset","modifier":"private","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" Where the number of values of this annotation must be stored in\n {@link #parent}.\n","return_type":null},{"parameters":null,"name":"next","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Next annotation writer. This field is used to store annotation lists.\n","return_type":null},{"parameters":null,"name":"prev","modifier":"package-private","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Previous annotation writer. This field is used to store annotation lists.\n","return_type":null}],"abstract":false,"static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" An {@link AnnotationVisitor} that generates annotations in bytecode form.\n\n @author Eric Bruneton\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
{"parameters":null,"name":"AnnotationVisitor","modifier":"public","varArgs":false,"synthetic":false,"enums":[],"constructors":[{"parameters":"int:api","name":"AnnotationVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link AnnotationVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":"int:api,AnnotationVisitor:av","name":"AnnotationVisitor","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Constructs a new {@link AnnotationVisitor}.\n\n @param api\n            the ASM API version implemented by this visitor. Must be one\n            of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n @param av\n            the annotation visitor to which this visitor must delegate\n            method calls. May be null.\n","return_type":null}],"methods":[{"parameters":"String:name,Object:value","name":"visit","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a primitive value of the annotation.\n\n @param name\n            the value name.\n @param value\n            the actual value, whose type must be {@link Byte},\n            {@link Boolean}, {@link Character}, {@link Short},\n            {@link Integer} , {@link Long}, {@link Float}, {@link Double},\n            {@link String} or {@link Type} or OBJECT or ARRAY sort. This\n            value can also be an array of byte, boolean, short, char, int,\n            long, float or double values (this is equivalent to using\n            {@link #visitArray visitArray} and visiting each array element\n            in turn, but is more convenient).\n","return_type":"void"},{"parameters":"String:name,String:desc,String:value","name":"visitEnum","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an enumeration value of the annotation.\n\n @param name\n            the value name.\n @param desc\n            the class descriptor of the enumeration class.\n @param value\n            the actual enumeration value.\n","return_type":"void"},{"parameters":"String:name,String:desc","name":"visitAnnotation","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits a nested annotation value of the annotation.\n\n @param name\n            the value name.\n @param desc\n            the class descriptor of the nested annotation class.\n @return a visitor to visit the actual nested annotation value, or\n         <tt>null</tt> if this visitor is not interested in visiting this\n         nested annotation. <i>The nested annotation value must be fully\n         visited before calling other methods on this annotation\n         visitor</i>.\n","return_type":"AnnotationVisitor"},{"parameters":"String:name","name":"visitArray","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits an array value of the annotation. Note that arrays of primitive\n types (such as byte, boolean, short, char, int, long, float or double)\n can be passed as value to {@link #visit visit}. This is what\n {@link ClassReader} does.\n\n @param name\n            the value name.\n @return a visitor to visit the actual array value elements, or\n         <tt>null</tt> if this visitor is not interested in visiting these\n         values. The 'name' parameters passed to the methods of this\n         visitor are ignored. <i>All the array values must be visited\n         before calling other methods on this annotation visitor</i>.\n","return_type":"AnnotationVisitor"},{"parameters":null,"name":"visitEnd","modifier":"public","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" Visits the end of the annotation.\n","return_type":"void"}],"fields":[{"parameters":null,"name":"api","modifier":"protected","static":false,"final":true,"package":"jdk.internal.org.objectweb.asm","description":" The ASM API version implemented by this visitor. The value of this field\n must be one of {@link Opcodes#ASM4} or {@link Opcodes#ASM5}.\n","return_type":null},{"parameters":null,"name":"av","modifier":"protected","static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" The annotation visitor to which this visitor must delegate method calls.\n May be null.\n","return_type":null}],"abstract":true,"static":false,"final":false,"package":"jdk.internal.org.objectweb.asm","description":" A visitor to visit a Java annotation. The methods of this class must be\n called in the following order: ( <tt>visit</tt> | <tt>visitEnum</tt> |\n <tt>visitAnnotation</tt> | <tt>visitArray</tt> )* <tt>visitEnd</tt>.\n\n @author Eric Bruneton\n @author Eugene Kuleshov\n","return_type":null,"enum_ids":null,"constructor_ids":null,"method_ids":null,"field_ids":null}
